{
  "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.AuthAPIController.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.AuthAPIController.html",
    "title": "Class AuthAPIController | smartmenu",
    "keywords": "Class AuthAPIController Namespace SmartMenu.Services.AuthAPI.Controllers Assembly SmartMenu.Services.AuthAPI.dll Controller for handling authentication-related operations. [Route(\"api/auth\")] [ApiController] public class AuthAPIController : ControllerBase Inheritance object ControllerBase AuthAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthAPIController(IAuthService, IConfiguration) Initializes a new instance of the AuthAPIController class. public AuthAPIController(IAuthService authService, IConfiguration configuration) Parameters authService IAuthService The authentication service. configuration IConfiguration The configuration settings. Fields _response protected ResponseDto _response Field Value ResponseDto Methods AssignRole(RegistrationRequestDto) Assigns a role to a user. [HttpPost(\"AssignRole\")] public Task<IActionResult> AssignRole(RegistrationRequestDto model) Parameters model RegistrationRequestDto The registration request data. Returns Task<IActionResult> An IActionResult representing the result of the operation. ChangePassword(ChangePasswordDto) Changes the password of the logged-in user. [Authorize] [HttpPost(\"ChangePassword\")] public Task<IActionResult> ChangePassword(ChangePasswordDto model) Parameters model ChangePasswordDto The password change data. Returns Task<IActionResult> An IActionResult representing the result of the operation. DeleteAccount(string) Deletes the account of the logged-in user. [Authorize] [HttpDelete(\"DeleteAccount/{userId}\")] public Task<IActionResult> DeleteAccount(string userId) Parameters userId string The user ID. Returns Task<IActionResult> An IActionResult representing the result of the operation. EditAccount(EditAccountDto) Edits the account details of the logged-in user. [Authorize] [HttpPut(\"EditAccount\")] public Task<IActionResult> EditAccount(EditAccountDto model) Parameters model EditAccountDto The account edit data. Returns Task<IActionResult> An IActionResult representing the result of the operation. GetUserDetails(string) Gets the details of the logged-in user. [Authorize] [HttpGet(\"GetUserDetails/{userId}\")] public Task<IActionResult> GetUserDetails(string userId) Parameters userId string The user ID. Returns Task<IActionResult> An IActionResult representing the result of the operation. Login(LoginRequestDto) Logs in a user. [HttpPost(\"login\")] public Task<IActionResult> Login(LoginRequestDto model) Parameters model LoginRequestDto The login request data. Returns Task<IActionResult> An IActionResult representing the result of the operation. Register(RegistrationRequestDto) Registers a new user. [HttpPost(\"register\")] public Task<IActionResult> Register(RegistrationRequestDto model) Parameters model RegistrationRequestDto The registration request data. Returns Task<IActionResult> An IActionResult representing the result of the operation."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Controllers | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Controllers Classes AuthAPIController Controller for handling authentication-related operations."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Data.AppDbContext.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | smartmenu",
    "keywords": "Class AppDbContext Namespace SmartMenu.Services.AuthAPI.Data Assembly SmartMenu.Services.AuthAPI.dll Database context for the application, extending IdentityDbContext for user management. public class AppDbContext : IdentityDbContext<ApplicationUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>> IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>> IdentityDbContext<ApplicationUser, IdentityRole, string> IdentityDbContext<ApplicationUser> AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.UserRoles IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.Roles IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.RoleClaims IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.Users IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserClaims IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserLogins IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserTokens IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class. public AppDbContext(DbContextOptions<AppDbContext> options) Parameters options DbContextOptions<AppDbContext> The options to be used by a DbContext. Properties ApplicationUsers Gets or sets the ApplicationUsers DbSet. public DbSet<ApplicationUser> ApplicationUsers { get; set; } Property Value DbSet<ApplicationUser> Methods OnModelCreating(ModelBuilder) Configures the schema needed for the identity framework. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Data.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Data.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Data | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Data Classes AppDbContext Database context for the application, extending IdentityDbContext for user management."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | smartmenu",
    "keywords": "Class WebApplicationBuilderExtensions Namespace SmartMenu.Services.AuthAPI.Extensions Assembly SmartMenu.Services.AuthAPI.dll Provides extension methods for configuring authentication in a web application. public static class WebApplicationBuilderExtensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the web application builder. public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters builder WebApplicationBuilder The web application builder. Returns WebApplicationBuilder The web application builder with authentication configured."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Extensions | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Extensions Classes WebApplicationBuilderExtensions Provides extension methods for configuring authentication in a web application."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.AddNameToAspNetUsers.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.AddNameToAspNetUsers.html",
    "title": "Class AddNameToAspNetUsers | smartmenu",
    "keywords": "Class AddNameToAspNetUsers Namespace SmartMenu.Services.AuthAPI.Migrations Assembly SmartMenu.Services.AuthAPI.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241020034841_AddNameToAspNetUsers\")] public class AddNameToAspNetUsers : Migration Inheritance object Migration AddNameToAspNetUsers Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.addIDentityTables.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.addIDentityTables.html",
    "title": "Class addIDentityTables | smartmenu",
    "keywords": "Class addIDentityTables Namespace SmartMenu.Services.AuthAPI.Migrations Assembly SmartMenu.Services.AuthAPI.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241020034130_addIDentityTables\")] public class addIDentityTables : Migration Inheritance object Migration addIDentityTables Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Migrations | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Migrations Classes AddNameToAspNetUsers A base class inherited by each EF Core migration. addIDentityTables A base class inherited by each EF Core migration."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.ApplicationUser.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.ApplicationUser.html",
    "title": "Class ApplicationUser | smartmenu",
    "keywords": "Class ApplicationUser Namespace SmartMenu.Services.AuthAPI.Models Assembly SmartMenu.Services.AuthAPI.dll Represents an application user with additional properties. public class ApplicationUser : IdentityUser Inheritance object IdentityUser<string> IdentityUser ApplicationUser Inherited Members IdentityUser<string>.ToString() IdentityUser<string>.Id IdentityUser<string>.UserName IdentityUser<string>.NormalizedUserName IdentityUser<string>.Email IdentityUser<string>.NormalizedEmail IdentityUser<string>.EmailConfirmed IdentityUser<string>.PasswordHash IdentityUser<string>.SecurityStamp IdentityUser<string>.ConcurrencyStamp IdentityUser<string>.PhoneNumber IdentityUser<string>.PhoneNumberConfirmed IdentityUser<string>.TwoFactorEnabled IdentityUser<string>.LockoutEnd IdentityUser<string>.LockoutEnabled IdentityUser<string>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Name Gets or sets the name of the user. public string Name { get; set; } Property Value string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ChangePasswordDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ChangePasswordDto.html",
    "title": "Class ChangePasswordDto | smartmenu",
    "keywords": "Class ChangePasswordDto Namespace SmartMenu.Services.AuthAPI.Models.Dto Assembly SmartMenu.Services.AuthAPI.dll Represents the data required to change a user's password. public class ChangePasswordDto Inheritance object ChangePasswordDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConfirmNewPassword Gets or sets the confirmation of the new password. public string ConfirmNewPassword { get; set; } Property Value string CurrentPassword Gets or sets the user's current password. public string CurrentPassword { get; set; } Property Value string NewPassword Gets or sets the new password. public string NewPassword { get; set; } Property Value string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.EditAccountDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.EditAccountDto.html",
    "title": "Class EditAccountDto | smartmenu",
    "keywords": "Class EditAccountDto Namespace SmartMenu.Services.AuthAPI.Models.Dto Assembly SmartMenu.Services.AuthAPI.dll Represents the data required to edit a user's account information. public class EditAccountDto Inheritance object EditAccountDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NewEmail Gets or sets the new email address to update. public string? NewEmail { get; set; } Property Value string NewName Gets or sets the new name of the user. public string? NewName { get; set; } Property Value string NewPhoneNumber Gets or sets the new phone number of the user. public string? NewPhoneNumber { get; set; } Property Value string UserId Gets or sets the unique identifier of the user. public string UserId { get; set; } Property Value string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginRequestDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginRequestDto.html",
    "title": "Class LoginRequestDto | smartmenu",
    "keywords": "Class LoginRequestDto Namespace SmartMenu.Services.AuthAPI.Models.Dto Assembly SmartMenu.Services.AuthAPI.dll Represents the data required for a login request. public class LoginRequestDto Inheritance object LoginRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Password Gets or sets the password for the login request. public string Password { get; set; } Property Value string UserName Gets or sets the username for the login request. public string UserName { get; set; } Property Value string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginResponseDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginResponseDto.html",
    "title": "Class LoginResponseDto | smartmenu",
    "keywords": "Class LoginResponseDto Namespace SmartMenu.Services.AuthAPI.Models.Dto Assembly SmartMenu.Services.AuthAPI.dll Represents the response data for a login request. public class LoginResponseDto Inheritance object LoginResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Token Gets or sets the JWT token. public string Token { get; set; } Property Value string User Gets or sets the user information. public UserDto User { get; set; } Property Value UserDto"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.RegistrationRequestDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.RegistrationRequestDto.html",
    "title": "Class RegistrationRequestDto | smartmenu",
    "keywords": "Class RegistrationRequestDto Namespace SmartMenu.Services.AuthAPI.Models.Dto Assembly SmartMenu.Services.AuthAPI.dll Represents the data required for a registration request. public class RegistrationRequestDto Inheritance object RegistrationRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email Gets or sets the email address of the user. public string Email { get; set; } Property Value string Name Gets or sets the name of the user. public string Name { get; set; } Property Value string Password Gets or sets the password for the user. public string Password { get; set; } Property Value string PhoneNumber Gets or sets the phone number of the user. public string PhoneNumber { get; set; } Property Value string Role Gets or sets the role of the user. public string? Role { get; set; } Property Value string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ResponseDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | smartmenu",
    "keywords": "Class ResponseDto Namespace SmartMenu.Services.AuthAPI.Models.Dto Assembly SmartMenu.Services.AuthAPI.dll Represents a standard response data transfer object. public class ResponseDto Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccess Gets or sets a value indicating whether the response indicates success. public bool IsSuccess { get; set; } Property Value bool Message Gets or sets the message associated with the response. public string Message { get; set; } Property Value string Result Gets or sets the result of the response. public object? Result { get; set; } Property Value object"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.UserDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.UserDto.html",
    "title": "Class UserDto | smartmenu",
    "keywords": "Class UserDto Namespace SmartMenu.Services.AuthAPI.Models.Dto Assembly SmartMenu.Services.AuthAPI.dll Represents a user data transfer object. public class UserDto Inheritance object UserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email Gets or sets the email address of the user. public string Email { get; set; } Property Value string ID Gets or sets the unique identifier of the user. public string ID { get; set; } Property Value string Name Gets or sets the name of the user. public string Name { get; set; } Property Value string PhoneNumber Gets or sets the phone number of the user. public string PhoneNumber { get; set; } Property Value string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Models.Dto | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Models.Dto Classes ChangePasswordDto Represents the data required to change a user's password. EditAccountDto Represents the data required to edit a user's account information. LoginRequestDto Represents the data required for a login request. LoginResponseDto Represents the response data for a login request. RegistrationRequestDto Represents the data required for a registration request. ResponseDto Represents a standard response data transfer object. UserDto Represents a user data transfer object."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.JwtOptions.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.JwtOptions.html",
    "title": "Class JwtOptions | smartmenu",
    "keywords": "Class JwtOptions Namespace SmartMenu.Services.AuthAPI.Models Assembly SmartMenu.Services.AuthAPI.dll Represents the options for JWT authentication. public class JwtOptions Inheritance object JwtOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Audience Gets or sets the audience of the JWT. public string Audience { get; set; } Property Value string Issuer Gets or sets the issuer of the JWT. public string Issuer { get; set; } Property Value string Secret Gets or sets the secret key used for signing the JWT. public string Secret { get; set; } Property Value string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Models | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Models Classes ApplicationUser Represents an application user with additional properties. JwtOptions Represents the options for JWT authentication."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.AuthService.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.AuthService.html",
    "title": "Class AuthService | smartmenu",
    "keywords": "Class AuthService Namespace SmartMenu.Services.AuthAPI.Service Assembly SmartMenu.Services.AuthAPI.dll Service for handling authentication-related operations. public class AuthService : IAuthService Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(AppDbContext, IJwtTokenGenerator, UserManager<ApplicationUser>, RoleManager<IdentityRole>) Initializes a new instance of the AuthService class. public AuthService(AppDbContext db, IJwtTokenGenerator jwtTokenGenerator, UserManager<ApplicationUser> userManager, RoleManager<IdentityRole> roleManager) Parameters db AppDbContext The database context. jwtTokenGenerator IJwtTokenGenerator The JWT token generator. userManager UserManager<ApplicationUser> The user manager. roleManager RoleManager<IdentityRole> The role manager. Methods AssignRole(string, string) Assigns a role to a user. public Task<bool> AssignRole(string email, string roleName) Parameters email string The email of the user. roleName string The name of the role. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. ChangePassword(string, ChangePasswordDto) Changes a user's password. public Task<bool> ChangePassword(string userId, ChangePasswordDto changePasswordDto) Parameters userId string The user ID. changePasswordDto ChangePasswordDto The change password data transfer object. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. DeleteAccount(string) Deletes a user's account. public Task<bool> DeleteAccount(string userId) Parameters userId string The user ID. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. EditAccount(EditAccountDto) Edits a user's account information. public Task<bool> EditAccount(EditAccountDto editAccountDto) Parameters editAccountDto EditAccountDto The edit account data transfer object. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. GetUserDetailsAsync(string) Gets the details of a user. public Task<EditAccountDto?> GetUserDetailsAsync(string userId) Parameters userId string The user ID. Returns Task<EditAccountDto> A task that represents the asynchronous operation. The task result contains the edit account data transfer object. Login(LoginRequestDto) Logs in a user. public Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto The login request data transfer object. Returns Task<LoginResponseDto> A task that represents the asynchronous operation. The task result contains the login response data transfer object. Register(RegistrationRequestDto) Registers a new user. public Task<string> Register(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto The registration request data transfer object. Returns Task<string> A task that represents the asynchronous operation. The task result contains a string indicating the result of the registration."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IAuthService.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IAuthService.html",
    "title": "Interface IAuthService | smartmenu",
    "keywords": "Interface IAuthService Namespace SmartMenu.Services.AuthAPI.Service.IService Assembly SmartMenu.Services.AuthAPI.dll Interface for authentication-related services. public interface IAuthService Methods AssignRole(string, string) Assigns a role to a user. Task<bool> AssignRole(string email, string roleName) Parameters email string The email of the user. roleName string The name of the role. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. ChangePassword(string, ChangePasswordDto) Changes a user's password. Task<bool> ChangePassword(string userId, ChangePasswordDto changePasswordDto) Parameters userId string The user ID. changePasswordDto ChangePasswordDto The change password data transfer object. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. DeleteAccount(string) Deletes a user's account. Task<bool> DeleteAccount(string email) Parameters email string The email of the user. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. EditAccount(EditAccountDto) Edits a user's account information. Task<bool> EditAccount(EditAccountDto editAccountDto) Parameters editAccountDto EditAccountDto The edit account data transfer object. Returns Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. GetUserDetailsAsync(string) Gets the details of a user. Task<EditAccountDto?> GetUserDetailsAsync(string userId) Parameters userId string The user ID. Returns Task<EditAccountDto> A task that represents the asynchronous operation. The task result contains the edit account data transfer object. Login(LoginRequestDto) Logs in a user. Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto The login request data transfer object. Returns Task<LoginResponseDto> A task that represents the asynchronous operation. The task result contains the login response data transfer object. Register(RegistrationRequestDto) Registers a new user. Task<string> Register(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto The registration request data transfer object. Returns Task<string> A task that represents the asynchronous operation. The task result contains a string indicating the result of the registration."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IJwtTokenGenerator.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IJwtTokenGenerator.html",
    "title": "Interface IJwtTokenGenerator | smartmenu",
    "keywords": "Interface IJwtTokenGenerator Namespace SmartMenu.Services.AuthAPI.Service.IService Assembly SmartMenu.Services.AuthAPI.dll Interface for generating JWT tokens. public interface IJwtTokenGenerator Methods GenerateToken(ApplicationUser, IEnumerable<string>) Generates a JWT token for the specified user and roles. string GenerateToken(ApplicationUser applicationUser, IEnumerable<string> roles) Parameters applicationUser ApplicationUser The application user. roles IEnumerable<string> The roles of the user. Returns string The generated JWT token."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Service.IService | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Service.IService Interfaces IAuthService Interface for authentication-related services. IJwtTokenGenerator Interface for generating JWT tokens."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.JwtTokenGenerator.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.JwtTokenGenerator.html",
    "title": "Class JwtTokenGenerator | smartmenu",
    "keywords": "Class JwtTokenGenerator Namespace SmartMenu.Services.AuthAPI.Service Assembly SmartMenu.Services.AuthAPI.dll Service for generating JWT tokens. public class JwtTokenGenerator : IJwtTokenGenerator Inheritance object JwtTokenGenerator Implements IJwtTokenGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors JwtTokenGenerator(IOptions<JwtOptions>) Initializes a new instance of the JwtTokenGenerator class. public JwtTokenGenerator(IOptions<JwtOptions> jwtOptions) Parameters jwtOptions IOptions<JwtOptions> The JWT options. Methods GenerateToken(ApplicationUser, IEnumerable<string>) Generates a JWT token for the specified user and roles. public string GenerateToken(ApplicationUser applicationUser, IEnumerable<string> roles) Parameters applicationUser ApplicationUser The application user. roles IEnumerable<string> The roles of the user. Returns string The generated JWT token."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Service | smartmenu",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Service Classes AuthService Service for handling authentication-related operations. JwtTokenGenerator Service for generating JWT tokens."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.CartAPIController.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.CartAPIController.html",
    "title": "Class CartAPIController | smartmenu",
    "keywords": "Class CartAPIController Namespace SmartMenu.Services.ShoppingCartAPI.Controllers Assembly SmartMenu.Services.ShoppingCartAPI.dll [Route(\"api/cart\")] [ApiController] public class CartAPIController : ControllerBase Inheritance object ControllerBase CartAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartAPIController(AppDbContext, IMapper, IProductService, ICouponService, IConfiguration) Initializes a new instance of the CartAPIController class. public CartAPIController(AppDbContext db, IMapper mapper, IProductService productService, ICouponService couponService, IConfiguration configuration) Parameters db AppDbContext The database context. mapper IMapper The AutoMapper instance. productService IProductService The product service. couponService ICouponService The coupon service. configuration IConfiguration The configuration instance. Methods ApplyCoupon(CartDto) Applies a coupon to the cart. [HttpPost(\"ApplyCoupon\")] public Task<object> ApplyCoupon(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<object> A ResponseDto indicating the result of the operation. CartUpsert(CartDto) Upserts the cart. [HttpPost(\"CartUpsert\")] public Task<ResponseDto> CartUpsert(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A ResponseDto indicating the result of the operation. ClearCart(string) Clears the cart for a specific user. [HttpPost(\"ClearCart/{userId}\")] public Task<ResponseDto> ClearCart(string userId) Parameters userId string The user identifier. Returns Task<ResponseDto> A ResponseDto indicating the result of the operation. DecreaseQuantity(int) Decreases the quantity of a cart item. [HttpPost(\"DecreaseQuantity/{cartDetailsId}\")] public Task<ResponseDto> DecreaseQuantity(int cartDetailsId) Parameters cartDetailsId int The cart details identifier. Returns Task<ResponseDto> A ResponseDto indicating the result of the operation. GetCart(string) Gets the cart for a specific user. [HttpGet(\"GetCart/{userId}\")] public Task<ResponseDto> GetCart(string userId) Parameters userId string The user identifier. Returns Task<ResponseDto> A ResponseDto containing the cart details. IncreaseQuantity(int) Increases the quantity of a cart item. [HttpPost(\"IncreaseQuantity/{cartDetailsId}\")] public Task<ResponseDto> IncreaseQuantity(int cartDetailsId) Parameters cartDetailsId int The cart details identifier. Returns Task<ResponseDto> A ResponseDto indicating the result of the operation. RemoveCart(int) Removes a cart item. [HttpPost(\"RemoveCart\")] public Task<ResponseDto> RemoveCart(int cartDetailsId) Parameters cartDetailsId int The cart details identifier. Returns Task<ResponseDto> A ResponseDto indicating the result of the operation."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Controllers | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Controllers Classes CartAPIController"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.AppDbContext.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | smartmenu",
    "keywords": "Class AppDbContext Namespace SmartMenu.Services.ShoppingCartAPI.Data Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents the database context for the shopping cart API. public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class. public AppDbContext(DbContextOptions<AppDbContext> options) Parameters options DbContextOptions<AppDbContext> The options to be used by a DbContext. Properties CartDetails Gets or sets the cart details. public DbSet<CartDetails> CartDetails { get; set; } Property Value DbSet<CartDetails> CartHeaders Gets or sets the cart headers. public DbSet<CartHeader> CartHeaders { get; set; } Property Value DbSet<CartHeader>"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Data | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Data Classes AppDbContext Represents the database context for the shopping cart API."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | smartmenu",
    "keywords": "Class WebApplicationBuilderExtensions Namespace SmartMenu.Services.ShoppingCartAPI.Extensions Assembly SmartMenu.Services.ShoppingCartAPI.dll Provides extension methods for configuring the web application builder. public static class WebApplicationBuilderExtensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the web application builder. public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters builder WebApplicationBuilder The web application builder. Returns WebApplicationBuilder The web application builder with authentication configured."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Extensions | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Extensions Classes WebApplicationBuilderExtensions Provides extension methods for configuring the web application builder."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.MappingConfig.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.MappingConfig.html",
    "title": "Class MappingConfig | smartmenu",
    "keywords": "Class MappingConfig Namespace SmartMenu.Services.ShoppingCartAPI Assembly SmartMenu.Services.ShoppingCartAPI.dll public class MappingConfig Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterMaps() public static MapperConfiguration RegisterMaps() Returns MapperConfiguration"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.AddShoppingCartTables.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.AddShoppingCartTables.html",
    "title": "Class AddShoppingCartTables | smartmenu",
    "keywords": "Class AddShoppingCartTables Namespace SmartMenu.Services.ShoppingCartAPI.Migrations Assembly SmartMenu.Services.ShoppingCartAPI.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20230422173359_AddShoppingCartTables\")] public class AddShoppingCartTables : Migration Inheritance object Migration AddShoppingCartTables Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Migrations | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Migrations Classes AddShoppingCartTables A base class inherited by each EF Core migration."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartDetails.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartDetails.html",
    "title": "Class CartDetails | smartmenu",
    "keywords": "Class CartDetails Namespace SmartMenu.Services.ShoppingCartAPI.Models Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents the details of a cart item. public class CartDetails Inheritance object CartDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartDetailsId Gets or sets the cart details identifier. [Key] public int CartDetailsId { get; set; } Property Value int CartHeader Gets or sets the cart header. [ForeignKey(\"CartHeaderId\")] public CartHeader CartHeader { get; set; } Property Value CartHeader CartHeaderId Gets or sets the cart header identifier. public int CartHeaderId { get; set; } Property Value int Count Gets or sets the quantity of the product. public int Count { get; set; } Property Value int Product Gets or sets the product details. [NotMapped] public ProductDto Product { get; set; } Property Value ProductDto ProductId Gets or sets the product identifier. public int ProductId { get; set; } Property Value int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartHeader.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartHeader.html",
    "title": "Class CartHeader | smartmenu",
    "keywords": "Class CartHeader Namespace SmartMenu.Services.ShoppingCartAPI.Models Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents the header information of a shopping cart. public class CartHeader Inheritance object CartHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartHeaderId Gets or sets the cart header identifier. [Key] public int CartHeaderId { get; set; } Property Value int CartTotal Gets or sets the total amount of the cart. [NotMapped] public double CartTotal { get; set; } Property Value double CouponCode Gets or sets the coupon code. public string? CouponCode { get; set; } Property Value string Discount Gets or sets the discount amount. [NotMapped] public double Discount { get; set; } Property Value double UserId Gets or sets the user identifier. public string? UserId { get; set; } Property Value string"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Coupon.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Coupon.html",
    "title": "Class Coupon | smartmenu",
    "keywords": "Class Coupon Namespace SmartMenu.Services.ShoppingCartAPI.Models Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a discount coupon. public class Coupon Inheritance object Coupon Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. [Required] public string CouponCode { get; set; } Property Value string CouponId Gets or sets the coupon identifier. [Key] public int CouponId { get; set; } Property Value int DiscountAmount Gets or sets the discount amount. [Required] public double DiscountAmount { get; set; } Property Value double MinAmount Gets or sets the minimum amount required to use the coupon. public int MinAmount { get; set; } Property Value int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDetailsDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDetailsDto.html",
    "title": "Class CartDetailsDto | smartmenu",
    "keywords": "Class CartDetailsDto Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a data transfer object for cart details. public class CartDetailsDto Inheritance object CartDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartDetailsId Gets or sets the cart details identifier. public int CartDetailsId { get; set; } Property Value int CartHeader Gets or sets the cart header. public CartHeaderDto? CartHeader { get; set; } Property Value CartHeaderDto CartHeaderId Gets or sets the cart header identifier. public int CartHeaderId { get; set; } Property Value int Count Gets or sets the quantity of the product. public int Count { get; set; } Property Value int Product Gets or sets the product details. public ProductDto? Product { get; set; } Property Value ProductDto ProductId Gets or sets the product identifier. public int ProductId { get; set; } Property Value int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDto.html",
    "title": "Class CartDto | smartmenu",
    "keywords": "Class CartDto Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a data transfer object for a shopping cart. public class CartDto Inheritance object CartDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartDetails Gets or sets the cart details. public IEnumerable<CartDetailsDto>? CartDetails { get; set; } Property Value IEnumerable<CartDetailsDto> CartHeader Gets or sets the cart header. public CartHeaderDto CartHeader { get; set; } Property Value CartHeaderDto"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartHeaderDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartHeaderDto.html",
    "title": "Class CartHeaderDto | smartmenu",
    "keywords": "Class CartHeaderDto Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a data transfer object for a cart header. public class CartHeaderDto Inheritance object CartHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartHeaderId Gets or sets the cart header identifier. public int CartHeaderId { get; set; } Property Value int CartTotal Gets or sets the total amount of the cart. public double CartTotal { get; set; } Property Value double CouponCode Gets or sets the coupon code. public string? CouponCode { get; set; } Property Value string Discount Gets or sets the discount amount. public double Discount { get; set; } Property Value double Email Gets or sets the email address of the user. public string? Email { get; set; } Property Value string Name Gets or sets the name of the user. public string? Name { get; set; } Property Value string Phone Gets or sets the phone number of the user. public string? Phone { get; set; } Property Value string UserId Gets or sets the user identifier. public string? UserId { get; set; } Property Value string"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CategoryDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CategoryDto.html",
    "title": "Class CategoryDto | smartmenu",
    "keywords": "Class CategoryDto Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a data transfer object for a category. public class CategoryDto Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CategoryId Gets or sets the category identifier. public int CategoryId { get; set; } Property Value int Name Gets or sets the name of the category. public string Name { get; set; } Property Value string"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CouponDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CouponDto.html",
    "title": "Class CouponDto | smartmenu",
    "keywords": "Class CouponDto Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a data transfer object for a coupon. public class CouponDto Inheritance object CouponDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. public string CouponCode { get; set; } Property Value string CouponId Gets or sets the coupon identifier. public int CouponId { get; set; } Property Value int DiscountAmount Gets or sets the discount amount. public double DiscountAmount { get; set; } Property Value double MinAmount Gets or sets the minimum amount required to use the coupon. public int MinAmount { get; set; } Property Value int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ProductDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ProductDto.html",
    "title": "Class ProductDto | smartmenu",
    "keywords": "Class ProductDto Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a data transfer object for a product. public class ProductDto Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category Gets or sets the category details. public CategoryDto? Category { get; set; } Property Value CategoryDto CategoryId Gets or sets the category identifier. public int CategoryId { get; set; } Property Value int Description Gets or sets the description of the product. public string Description { get; set; } Property Value string ImageUrl Gets or sets the URL of the product image. public string ImageUrl { get; set; } Property Value string Name Gets or sets the name of the product. public string Name { get; set; } Property Value string Price Gets or sets the price of the product. public double Price { get; set; } Property Value double ProductId Gets or sets the product identifier. public int ProductId { get; set; } Property Value int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ResponseDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | smartmenu",
    "keywords": "Class ResponseDto Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly SmartMenu.Services.ShoppingCartAPI.dll Represents a standard response data transfer object. public class ResponseDto Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccess Gets or sets a value indicating whether the response is successful. public bool IsSuccess { get; set; } Property Value bool Message Gets or sets the message associated with the response. public string Message { get; set; } Property Value string Result Gets or sets the result of the response. public object? Result { get; set; } Property Value object"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Classes CartDetailsDto Represents a data transfer object for cart details. CartDto Represents a data transfer object for a shopping cart. CartHeaderDto Represents a data transfer object for a cart header. CategoryDto Represents a data transfer object for a category. CouponDto Represents a data transfer object for a coupon. ProductDto Represents a data transfer object for a product. ResponseDto Represents a standard response data transfer object."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Models | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Models Classes CartDetails Represents the details of a cart item. CartHeader Represents the header information of a shopping cart. Coupon Represents a discount coupon."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.CouponService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.CouponService.html",
    "title": "Class CouponService | smartmenu",
    "keywords": "Class CouponService Namespace SmartMenu.Services.ShoppingCartAPI.Service Assembly SmartMenu.Services.ShoppingCartAPI.dll Provides methods to interact with the coupon service. public class CouponService : ICouponService Inheritance object CouponService Implements ICouponService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CouponService(IHttpClientFactory) Initializes a new instance of the CouponService class. public CouponService(IHttpClientFactory clientFactory) Parameters clientFactory IHttpClientFactory The HTTP client factory. Methods GetCoupon(string) Gets the coupon details by coupon code. public Task<CouponDto> GetCoupon(string couponCode) Parameters couponCode string The coupon code. Returns Task<CouponDto> A task that represents the asynchronous operation. The task result contains the coupon details."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.ICouponService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.ICouponService.html",
    "title": "Interface ICouponService | smartmenu",
    "keywords": "Interface ICouponService Namespace SmartMenu.Services.ShoppingCartAPI.Service.IService Assembly SmartMenu.Services.ShoppingCartAPI.dll Interface for coupon service operations. public interface ICouponService Methods GetCoupon(string) Gets the coupon details by coupon code. Task<CouponDto> GetCoupon(string couponCode) Parameters couponCode string The coupon code. Returns Task<CouponDto> A task that represents the asynchronous operation. The task result contains the coupon details."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.IProductService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.IProductService.html",
    "title": "Interface IProductService | smartmenu",
    "keywords": "Interface IProductService Namespace SmartMenu.Services.ShoppingCartAPI.Service.IService Assembly SmartMenu.Services.ShoppingCartAPI.dll Interface for product service operations. public interface IProductService Methods GetProducts() Gets the list of products. Task<IEnumerable<ProductDto>> GetProducts() Returns Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Service.IService | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Service.IService Interfaces ICouponService Interface for coupon service operations. IProductService Interface for product service operations."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.ProductService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.ProductService.html",
    "title": "Class ProductService | smartmenu",
    "keywords": "Class ProductService Namespace SmartMenu.Services.ShoppingCartAPI.Service Assembly SmartMenu.Services.ShoppingCartAPI.dll Service class for handling product-related operations. public class ProductService : IProductService Inheritance object ProductService Implements IProductService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductService(IHttpClientFactory) Initializes a new instance of the ProductService class. public ProductService(IHttpClientFactory clientFactory) Parameters clientFactory IHttpClientFactory The HTTP client factory. Methods GetProducts() Gets the list of products. public Task<IEnumerable<ProductDto>> GetProducts() Returns Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Service | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Service Classes CouponService Provides methods to interact with the coupon service. ProductService Service class for handling product-related operations."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.BackendApiAuthenticationHttpClientHandler.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.BackendApiAuthenticationHttpClientHandler.html",
    "title": "Class BackendApiAuthenticationHttpClientHandler | smartmenu",
    "keywords": "Class BackendApiAuthenticationHttpClientHandler Namespace SmartMenu.Services.ShoppingCartAPI.Utility Assembly SmartMenu.Services.ShoppingCartAPI.dll A delegating handler for adding authentication headers to HTTP requests. public class BackendApiAuthenticationHttpClientHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler BackendApiAuthenticationHttpClientHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor) Initializes a new instance of the BackendApiAuthenticationHttpClientHandler class. public BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor accessor) Parameters accessor IHttpContextAccessor The HTTP context accessor. Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request with an authentication header. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message. cancellationToken CancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Task<HttpResponseMessage> The HTTP response message."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Utility | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Utility Classes BackendApiAuthenticationHttpClientHandler A delegating handler for adding authentication headers to HTTP requests."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI Classes MappingConfig"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.CouponAPIController.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.CouponAPIController.html",
    "title": "Class CouponAPIController | smartmenu",
    "keywords": "Class CouponAPIController Namespace SmartMenu.Services.CouponAPI.Controllers Assembly SmartMenu.Services.CouponAPI.dll API controller for managing coupons. [Route(\"api/coupon\")] [ApiController] [Authorize] public class CouponAPIController : ControllerBase Inheritance object ControllerBase CouponAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CouponAPIController(AppDbContext, IMapper) Initializes a new instance of the CouponAPIController class. public CouponAPIController(AppDbContext db, IMapper mapper) Parameters db AppDbContext The database context. mapper IMapper The AutoMapper instance. Methods Delete(int) Deletes a coupon by its identifier. [HttpDelete] [Route(\"{id:int}\")] [Authorize(Roles = \"ADMIN\")] public ResponseDto Delete(int id) Parameters id int The coupon identifier. Returns ResponseDto A response indicating the result of the delete operation. Get() Gets all coupons. [HttpGet] public ResponseDto Get() Returns ResponseDto A response containing the list of coupons. Get(int) Gets a coupon by its identifier. [HttpGet] [Route(\"{id:int}\")] public ResponseDto Get(int id) Parameters id int The coupon identifier. Returns ResponseDto A response containing the coupon details. GetByCode(string) Gets a coupon by its code. [HttpGet] [Route(\"GetByCode/{code}\")] public ResponseDto GetByCode(string code) Parameters code string The coupon code. Returns ResponseDto A response containing the coupon details. Post(CouponDto) Creates a new coupon. [HttpPost] [Authorize(Roles = \"ADMIN\")] public ResponseDto Post(CouponDto couponDto) Parameters couponDto CouponDto The coupon data transfer object. Returns ResponseDto A response containing the created coupon details. Put(CouponDto) Updates an existing coupon. [HttpPut] [Authorize(Roles = \"ADMIN\")] public ResponseDto Put(CouponDto couponDto) Parameters couponDto CouponDto The coupon data transfer object. Returns ResponseDto A response containing the updated coupon details."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Controllers | smartmenu",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Controllers Classes CouponAPIController API controller for managing coupons."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Data.AppDbContext.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | smartmenu",
    "keywords": "Class AppDbContext Namespace SmartMenu.Services.CouponAPI.Data Assembly SmartMenu.Services.CouponAPI.dll Represents the database context for the Coupon API. public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class. public AppDbContext(DbContextOptions<AppDbContext> options) Parameters options DbContextOptions<AppDbContext> The options to be used by a DbContext. Properties Coupons Gets or sets the coupons in the database. public DbSet<Coupon> Coupons { get; set; } Property Value DbSet<Coupon> Methods OnModelCreating(ModelBuilder) Configures the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on the derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Data.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Data.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Data | smartmenu",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Data Classes AppDbContext Represents the database context for the Coupon API."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | smartmenu",
    "keywords": "Class WebApplicationBuilderExtensions Namespace SmartMenu.Services.CouponAPI.Extensions Assembly SmartMenu.Services.CouponAPI.dll Extension methods for configuring the WebApplicationBuilder. public static class WebApplicationBuilderExtensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the application. public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters builder WebApplicationBuilder The WebApplicationBuilder instance. Returns WebApplicationBuilder The WebApplicationBuilder instance with authentication configured."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Extensions | smartmenu",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Extensions Classes WebApplicationBuilderExtensions Extension methods for configuring the WebApplicationBuilder."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.MappingConfig.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.MappingConfig.html",
    "title": "Class MappingConfig | smartmenu",
    "keywords": "Class MappingConfig Namespace SmartMenu.Services.CouponAPI Assembly SmartMenu.Services.CouponAPI.dll Provides configuration for AutoMapper mappings. public class MappingConfig Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterMaps() Registers the mappings between models and DTOs. public static MapperConfiguration RegisterMaps() Returns MapperConfiguration The AutoMapper configuration."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.addCouponToDb.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.addCouponToDb.html",
    "title": "Class addCouponToDb | smartmenu",
    "keywords": "Class addCouponToDb Namespace SmartMenu.Services.CouponAPI.Migrations Assembly SmartMenu.Services.CouponAPI.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241015212120_addCouponToDb\")] public class addCouponToDb : Migration Inheritance object Migration addCouponToDb Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Migrations | smartmenu",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Migrations Classes addCouponToDb A base class inherited by each EF Core migration."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Coupon.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Coupon.html",
    "title": "Class Coupon | smartmenu",
    "keywords": "Class Coupon Namespace SmartMenu.Services.CouponAPI.Models Assembly SmartMenu.Services.CouponAPI.dll Represents a discount coupon. public class Coupon Inheritance object Coupon Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. [Required] public string CouponCode { get; set; } Property Value string CouponId Gets or sets the coupon identifier. [Key] public int CouponId { get; set; } Property Value int DiscountAmount Gets or sets the discount amount. [Required] public double DiscountAmount { get; set; } Property Value double MinAmount Gets or sets the minimum amount required to use the coupon. public int MinAmount { get; set; } Property Value int"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.CouponDto.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.CouponDto.html",
    "title": "Class CouponDto | smartmenu",
    "keywords": "Class CouponDto Namespace SmartMenu.Services.CouponAPI.Models.Dto Assembly SmartMenu.Services.CouponAPI.dll Data transfer object for coupon details. public class CouponDto Inheritance object CouponDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. public string CouponCode { get; set; } Property Value string CouponId Gets or sets the coupon identifier. public int CouponId { get; set; } Property Value int DiscountAmount Gets or sets the discount amount. public double DiscountAmount { get; set; } Property Value double MinAmount Gets or sets the minimum amount required to use the coupon. public int MinAmount { get; set; } Property Value int"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.ResponseDto.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | smartmenu",
    "keywords": "Class ResponseDto Namespace SmartMenu.Services.CouponAPI.Models.Dto Assembly SmartMenu.Services.CouponAPI.dll Data transfer object for API responses. public class ResponseDto Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccess Gets or sets a value indicating whether the API call was successful. public bool IsSuccess { get; set; } Property Value bool Message Gets or sets the message associated with the API call. public string Message { get; set; } Property Value string Result Gets or sets the result of the API call. public object? Result { get; set; } Property Value object"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Models.Dto | smartmenu",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Models.Dto Classes CouponDto Data transfer object for coupon details. ResponseDto Data transfer object for API responses."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Models | smartmenu",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Models Classes Coupon Represents a discount coupon."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.html",
    "title": "Namespace SmartMenu.Services.CouponAPI | smartmenu",
    "keywords": "Namespace SmartMenu.Services.CouponAPI Classes MappingConfig Provides configuration for AutoMapper mappings."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.OrderAPIController.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.OrderAPIController.html",
    "title": "Class OrderAPIController | smartmenu",
    "keywords": "Class OrderAPIController Namespace SmartMenu.Services.OrderAPI.Controllers Assembly SmartMenu.Services.OrderAPI.dll [Route(\"api/order\")] [ApiController] public class OrderAPIController : ControllerBase Inheritance object ControllerBase OrderAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderAPIController(AppDbContext, IProductService, IMapper, IConfiguration) Initializes a new instance of the OrderAPIController class. public OrderAPIController(AppDbContext db, IProductService productService, IMapper mapper, IConfiguration configuration) Parameters db AppDbContext The database context. productService IProductService The product service. mapper IMapper The mapper. configuration IConfiguration The configuration. Fields _response protected ResponseDto _response Field Value ResponseDto Methods CreateOrder(CartDto) Creates a new order. [Authorize] [HttpPost(\"CreateOrder\")] public Task<ResponseDto> CreateOrder(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> The response containing the created order details. CreateStripeSession(StripeRequestDto) Creates a Stripe session for payment. [Authorize] [HttpPost(\"CreateStripeSession\")] public Task<ResponseDto> CreateStripeSession(StripeRequestDto stripeRequestDto) Parameters stripeRequestDto StripeRequestDto The Stripe request data transfer object. Returns Task<ResponseDto> The response containing the Stripe session details. Get(int) Gets the order by ID. [Authorize] [HttpGet(\"GetOrder/{id:int}\")] public ResponseDto? Get(int id) Parameters id int The order ID. Returns ResponseDto The response containing the order details. Get(string?) Gets the orders for the specified user. [Authorize] [HttpGet(\"GetOrders\")] public ResponseDto? Get(string? userId = \"\") Parameters userId string The user ID. Returns ResponseDto The response containing the list of orders. UpdateOrderStatus(int, string) Updates the status of an order. [Authorize] [HttpPost(\"UpdateOrderStatus/{orderId:int}\")] public Task<ResponseDto> UpdateOrderStatus(int orderId, string newStatus) Parameters orderId int The order ID. newStatus string The new status. Returns Task<ResponseDto> The response containing the update result. ValidateStripeSession(int) Validates the Stripe session for payment. [Authorize] [HttpPost(\"ValidateStripeSession\")] public Task<ResponseDto> ValidateStripeSession(int orderHeaderId) Parameters orderHeaderId int The order header ID. Returns Task<ResponseDto> The response containing the validation result."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Controllers | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Controllers Classes OrderAPIController"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Data.AppDbContext.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | smartmenu",
    "keywords": "Class AppDbContext Namespace SmartMenu.Services.OrderAPI.Data Assembly SmartMenu.Services.OrderAPI.dll Represents the database context for the Order API. public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class. public AppDbContext(DbContextOptions<AppDbContext> options) Parameters options DbContextOptions<AppDbContext> The options to be used by a DbContext. Properties OrderDetails Gets or sets the order details. public DbSet<OrderDetails> OrderDetails { get; set; } Property Value DbSet<OrderDetails> OrderHeaders Gets or sets the order headers. public DbSet<OrderHeader> OrderHeaders { get; set; } Property Value DbSet<OrderHeader>"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Data.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Data.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Data | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Data Classes AppDbContext Represents the database context for the Order API."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | smartmenu",
    "keywords": "Class WebApplicationBuilderExtensions Namespace SmartMenu.Services.OrderAPI.Extensions Assembly SmartMenu.Services.OrderAPI.dll Provides extension methods for configuring the web application builder. public static class WebApplicationBuilderExtensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the web application builder. public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters builder WebApplicationBuilder The web application builder. Returns WebApplicationBuilder The web application builder with authentication configured."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Extensions | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Extensions Classes WebApplicationBuilderExtensions Provides extension methods for configuring the web application builder."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.MappingConfig.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.MappingConfig.html",
    "title": "Class MappingConfig | smartmenu",
    "keywords": "Class MappingConfig Namespace SmartMenu.Services.OrderAPI Assembly SmartMenu.Services.OrderAPI.dll Configuration class for setting up AutoMapper mappings. public class MappingConfig Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterMaps() Registers the mappings for AutoMapper. public static MapperConfiguration RegisterMaps() Returns MapperConfiguration The AutoMapper configuration."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.AddOrderTables.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.AddOrderTables.html",
    "title": "Class AddOrderTables | smartmenu",
    "keywords": "Class AddOrderTables Namespace SmartMenu.Services.OrderAPI.Migrations Assembly SmartMenu.Services.OrderAPI.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20230424180848_AddOrderTables\")] public class AddOrderTables : Migration Inheritance object Migration AddOrderTables Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Migrations | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Migrations Classes AddOrderTables A base class inherited by each EF Core migration."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDetailsDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDetailsDto.html",
    "title": "Class CartDetailsDto | smartmenu",
    "keywords": "Class CartDetailsDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents the details of a cart. public class CartDetailsDto Inheritance object CartDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartDetailsId Gets or sets the cart details ID. public int CartDetailsId { get; set; } Property Value int CartHeader Gets or sets the cart header. public CartHeaderDto? CartHeader { get; set; } Property Value CartHeaderDto CartHeaderId Gets or sets the cart header ID. public int CartHeaderId { get; set; } Property Value int Count Gets or sets the count of products. public int Count { get; set; } Property Value int Product Gets or sets the product. public ProductDto? Product { get; set; } Property Value ProductDto ProductId Gets or sets the product ID. public int ProductId { get; set; } Property Value int"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDto.html",
    "title": "Class CartDto | smartmenu",
    "keywords": "Class CartDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents a shopping cart. public class CartDto Inheritance object CartDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartDetails Gets or sets the cart details. public IEnumerable<CartDetailsDto>? CartDetails { get; set; } Property Value IEnumerable<CartDetailsDto> CartHeader Gets or sets the cart header. public CartHeaderDto CartHeader { get; set; } Property Value CartHeaderDto"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartHeaderDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartHeaderDto.html",
    "title": "Class CartHeaderDto | smartmenu",
    "keywords": "Class CartHeaderDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents the header of a shopping cart. public class CartHeaderDto Inheritance object CartHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartHeaderId Gets or sets the cart header ID. public int CartHeaderId { get; set; } Property Value int CartTotal Gets or sets the total amount of the cart. public double CartTotal { get; set; } Property Value double CouponCode Gets or sets the coupon code. public string? CouponCode { get; set; } Property Value string Discount Gets or sets the discount amount. public double Discount { get; set; } Property Value double Email Gets or sets the email address of the user. public string? Email { get; set; } Property Value string Name Gets or sets the name of the user. public string? Name { get; set; } Property Value string Phone Gets or sets the phone number of the user. public string? Phone { get; set; } Property Value string UserId Gets or sets the user ID. public string? UserId { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CategoryDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CategoryDto.html",
    "title": "Class CategoryDto | smartmenu",
    "keywords": "Class CategoryDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents a category. public class CategoryDto Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CategoryId Gets or sets the category ID. public int CategoryId { get; set; } Property Value int Name Gets or sets the name of the category. public string Name { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderDetailsDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderDetailsDto.html",
    "title": "Class OrderDetailsDto | smartmenu",
    "keywords": "Class OrderDetailsDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents the details of an order. public class OrderDetailsDto Inheritance object OrderDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count Gets or sets the count of products. public int Count { get; set; } Property Value int OrderDetailsId Gets or sets the order details ID. public int OrderDetailsId { get; set; } Property Value int OrderHeaderId Gets or sets the order header ID. public int OrderHeaderId { get; set; } Property Value int Price Gets or sets the price of the product. public double Price { get; set; } Property Value double Product Gets or sets the product. public ProductDto? Product { get; set; } Property Value ProductDto ProductId Gets or sets the product ID. public int ProductId { get; set; } Property Value int ProductName Gets or sets the name of the product. public string ProductName { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderHeaderDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderHeaderDto.html",
    "title": "Class OrderHeaderDto | smartmenu",
    "keywords": "Class OrderHeaderDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents the header of an order. public class OrderHeaderDto Inheritance object OrderHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. public string? CouponCode { get; set; } Property Value string Discount Gets or sets the discount amount. public double Discount { get; set; } Property Value double Email Gets or sets the email address of the user. public string? Email { get; set; } Property Value string Name Gets or sets the name of the user. public string? Name { get; set; } Property Value string OrderDetails Gets or sets the order details. public IEnumerable<OrderDetailsDto> OrderDetails { get; set; } Property Value IEnumerable<OrderDetailsDto> OrderHeaderId Gets or sets the order header ID. public int OrderHeaderId { get; set; } Property Value int OrderTime Gets or sets the time of the order. public DateTime OrderTime { get; set; } Property Value DateTime OrderTotal Gets or sets the total amount of the order. public double OrderTotal { get; set; } Property Value double PaymentIntentId Gets or sets the payment intent ID. public string? PaymentIntentId { get; set; } Property Value string Phone Gets or sets the phone number of the user. public string? Phone { get; set; } Property Value string Status Gets or sets the status of the order. public string? Status { get; set; } Property Value string StripeSessionId Gets or sets the Stripe session ID. public string? StripeSessionId { get; set; } Property Value string UserId Gets or sets the user ID. public string? UserId { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ProductDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ProductDto.html",
    "title": "Class ProductDto | smartmenu",
    "keywords": "Class ProductDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents a product. public class ProductDto Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category Gets or sets the category of the product. public CategoryDto? Category { get; set; } Property Value CategoryDto CategoryId Gets or sets the category ID. public int CategoryId { get; set; } Property Value int Description Gets or sets the description of the product. public string Description { get; set; } Property Value string ImageUrl Gets or sets the image URL of the product. public string ImageUrl { get; set; } Property Value string Name Gets or sets the name of the product. public string Name { get; set; } Property Value string Price Gets or sets the price of the product. public double Price { get; set; } Property Value double ProductId Gets or sets the product ID. public int ProductId { get; set; } Property Value int"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ResponseDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | smartmenu",
    "keywords": "Class ResponseDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents a response with a result, success status, and message. public class ResponseDto Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccess Gets or sets a value indicating whether the response is successful. public bool IsSuccess { get; set; } Property Value bool Message Gets or sets the message of the response. public string Message { get; set; } Property Value string Result Gets or sets the result of the response. public object? Result { get; set; } Property Value object"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.RewardsDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.RewardsDto.html",
    "title": "Class RewardsDto | smartmenu",
    "keywords": "Class RewardsDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents rewards information for a user. public class RewardsDto Inheritance object RewardsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties OrderId Gets or sets the order ID. public int OrderId { get; set; } Property Value int RewardsActivity Gets or sets the rewards activity. public int RewardsActivity { get; set; } Property Value int UserId Gets or sets the user ID. public string UserId { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.StripeRequestDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.StripeRequestDto.html",
    "title": "Class StripeRequestDto | smartmenu",
    "keywords": "Class StripeRequestDto Namespace SmartMenu.Services.OrderAPI.Models.Dto Assembly SmartMenu.Services.OrderAPI.dll Represents a Stripe request. public class StripeRequestDto Inheritance object StripeRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApprovedUrl Gets or sets the approved URL. public string ApprovedUrl { get; set; } Property Value string CancelUrl Gets or sets the cancel URL. public string CancelUrl { get; set; } Property Value string OrderHeader Gets or sets the order header. public OrderHeaderDto OrderHeader { get; set; } Property Value OrderHeaderDto StripeSessionId Gets or sets the Stripe session ID. public string? StripeSessionId { get; set; } Property Value string StripeSessionUrl Gets or sets the Stripe session URL. public string? StripeSessionUrl { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Models.Dto | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Models.Dto Classes CartDetailsDto Represents the details of a cart. CartDto Represents a shopping cart. CartHeaderDto Represents the header of a shopping cart. CategoryDto Represents a category. OrderDetailsDto Represents the details of an order. OrderHeaderDto Represents the header of an order. ProductDto Represents a product. ResponseDto Represents a response with a result, success status, and message. RewardsDto Represents rewards information for a user. StripeRequestDto Represents a Stripe request."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderDetails.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderDetails.html",
    "title": "Class OrderDetails | smartmenu",
    "keywords": "Class OrderDetails Namespace SmartMenu.Services.OrderAPI.Models Assembly SmartMenu.Services.OrderAPI.dll Represents the details of an order. public class OrderDetails Inheritance object OrderDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count Gets or sets the count of products. public int Count { get; set; } Property Value int OrderDetailsId Gets or sets the order details ID. [Key] public int OrderDetailsId { get; set; } Property Value int OrderHeader Gets or sets the order header. [ForeignKey(\"OrderHeaderId\")] public OrderHeader? OrderHeader { get; set; } Property Value OrderHeader OrderHeaderId Gets or sets the order header ID. public int OrderHeaderId { get; set; } Property Value int Price Gets or sets the price of the product. public double Price { get; set; } Property Value double Product Gets or sets the product. [NotMapped] public ProductDto? Product { get; set; } Property Value ProductDto ProductId Gets or sets the product ID. public int ProductId { get; set; } Property Value int ProductName Gets or sets the name of the product. public string ProductName { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderHeader.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderHeader.html",
    "title": "Class OrderHeader | smartmenu",
    "keywords": "Class OrderHeader Namespace SmartMenu.Services.OrderAPI.Models Assembly SmartMenu.Services.OrderAPI.dll Represents the header of an order. public class OrderHeader Inheritance object OrderHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. public string? CouponCode { get; set; } Property Value string Discount Gets or sets the discount amount. public double Discount { get; set; } Property Value double Email Gets or sets the email address of the user. public string? Email { get; set; } Property Value string Name Gets or sets the name of the user. public string? Name { get; set; } Property Value string OrderDetails Gets or sets the order details. public IEnumerable<OrderDetails> OrderDetails { get; set; } Property Value IEnumerable<OrderDetails> OrderHeaderId Gets or sets the order header ID. [Key] public int OrderHeaderId { get; set; } Property Value int OrderTime Gets or sets the time of the order. public DateTime OrderTime { get; set; } Property Value DateTime OrderTotal Gets or sets the total amount of the order. public double OrderTotal { get; set; } Property Value double PaymentIntentId Gets or sets the payment intent ID. public string? PaymentIntentId { get; set; } Property Value string Phone Gets or sets the phone number of the user. public string? Phone { get; set; } Property Value string Status Gets or sets the status of the order. public string? Status { get; set; } Property Value string StripeSessionId Gets or sets the Stripe session ID. public string? StripeSessionId { get; set; } Property Value string UserId Gets or sets the user ID. public string? UserId { get; set; } Property Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Models | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Models Classes OrderDetails Represents the details of an order. OrderHeader Represents the header of an order."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.IProductService.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.IProductService.html",
    "title": "Interface IProductService | smartmenu",
    "keywords": "Interface IProductService Namespace SmartMenu.Services.OrderAPI.Service.IService Assembly SmartMenu.Services.OrderAPI.dll Interface for product service operations. public interface IProductService Methods GetProducts() Gets the list of products. Task<IEnumerable<ProductDto>> GetProducts() Returns Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Service.IService | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Service.IService Interfaces IProductService Interface for product service operations."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.ProductService.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.ProductService.html",
    "title": "Class ProductService | smartmenu",
    "keywords": "Class ProductService Namespace SmartMenu.Services.OrderAPI.Service Assembly SmartMenu.Services.OrderAPI.dll Service for handling product-related operations. public class ProductService : IProductService Inheritance object ProductService Implements IProductService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductService(IHttpClientFactory) Initializes a new instance of the ProductService class. public ProductService(IHttpClientFactory clientFactory) Parameters clientFactory IHttpClientFactory The HTTP client factory. Methods GetProducts() Gets the list of products. public Task<IEnumerable<ProductDto>> GetProducts() Returns Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Service | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Service Classes ProductService Service for handling product-related operations."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Utility.BackendApiAuthenticationHttpClientHandler.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Utility.BackendApiAuthenticationHttpClientHandler.html",
    "title": "Class BackendApiAuthenticationHttpClientHandler | smartmenu",
    "keywords": "Class BackendApiAuthenticationHttpClientHandler Namespace SmartMenu.Services.OrderAPI.Utility Assembly SmartMenu.Services.OrderAPI.dll A delegating handler that adds authentication headers to HTTP requests. public class BackendApiAuthenticationHttpClientHandler : DelegatingHandler, IDisposable Inheritance object HttpMessageHandler DelegatingHandler BackendApiAuthenticationHttpClientHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor) Initializes a new instance of the BackendApiAuthenticationHttpClientHandler class. public BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor accessor) Parameters accessor IHttpContextAccessor The HTTP context accessor. Methods SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request with an authentication header. protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters request HttpRequestMessage The HTTP request message. cancellationToken CancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Task<HttpResponseMessage> The HTTP response message."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Utility.SD.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Utility.SD.html",
    "title": "Class SD | smartmenu",
    "keywords": "Class SD Namespace SmartMenu.Services.OrderAPI.Utility Assembly SmartMenu.Services.OrderAPI.dll Static class containing constants for order statuses and user roles. public static class SD Inheritance object SD Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RoleAdmin Role indicating the user is an admin. public const string RoleAdmin = \"ADMIN\" Field Value string RoleCustomer Role indicating the user is a customer. public const string RoleCustomer = \"CUSTOMER\" Field Value string Status_Approved Status indicating the order is approved. public const string Status_Approved = \"Approved\" Field Value string Status_Cancelled Status indicating the order is cancelled. public const string Status_Cancelled = \"Cancelled\" Field Value string Status_Completed Status indicating the order is completed. public const string Status_Completed = \"Completed\" Field Value string Status_Pending Status indicating the order is pending. public const string Status_Pending = \"Pending\" Field Value string Status_ReadyForPickup Status indicating the order is ready for pickup. public const string Status_ReadyForPickup = \"ReadyForPickup\" Field Value string Status_Refunded Status indicating the order is refunded. public const string Status_Refunded = \"Refunded\" Field Value string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Utility.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Utility.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Utility | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Utility Classes BackendApiAuthenticationHttpClientHandler A delegating handler that adds authentication headers to HTTP requests. SD Static class containing constants for order statuses and user roles."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.html",
    "title": "Namespace SmartMenu.Services.OrderAPI | smartmenu",
    "keywords": "Namespace SmartMenu.Services.OrderAPI Classes MappingConfig Configuration class for setting up AutoMapper mappings."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.CategoryAPIController.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.CategoryAPIController.html",
    "title": "Class CategoryAPIController | smartmenu",
    "keywords": "Class CategoryAPIController Namespace SmartMenu.Services.ProductAPI.Controllers Assembly SmartMenu.Services.ProductAPI.dll API controller for managing categories. [Route(\"api/category\")] [ApiController] public class CategoryAPIController : ControllerBase Inheritance object ControllerBase CategoryAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryAPIController(AppDbContext, IMapper) Initializes a new instance of the CategoryAPIController class. public CategoryAPIController(AppDbContext db, IMapper mapper) Parameters db AppDbContext The database context. mapper IMapper The AutoMapper instance. Methods Delete(int) Deletes a category by ID. [HttpDelete] [Route(\"{id:int}\")] [Authorize(Roles = \"ADMIN\")] public ResponseDto Delete(int id) Parameters id int The category ID. Returns ResponseDto The response indicating the result of the delete operation. Get() Gets the list of categories. [HttpGet] public ResponseDto Get() Returns ResponseDto The response containing the list of categories. Get(int) Gets a category by ID. [HttpGet] [Route(\"{id:int}\")] public ResponseDto Get(int id) Parameters id int The category ID. Returns ResponseDto The response containing the category. Post(CategoryDto) Creates a new category. [HttpPost] [Authorize(Roles = \"ADMIN\")] public ResponseDto Post(CategoryDto CategoryDto) Parameters CategoryDto CategoryDto The category data transfer object. Returns ResponseDto The response containing the created category. Put(CategoryDto) Updates an existing category. [HttpPut] [Authorize(Roles = \"ADMIN\")] public ResponseDto Put(CategoryDto CategoryDto) Parameters CategoryDto CategoryDto The category data transfer object. Returns ResponseDto The response containing the updated category."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.ProductAPIController.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.ProductAPIController.html",
    "title": "Class ProductAPIController | smartmenu",
    "keywords": "Class ProductAPIController Namespace SmartMenu.Services.ProductAPI.Controllers Assembly SmartMenu.Services.ProductAPI.dll API controller for managing products. [Route(\"api/product\")] [ApiController] public class ProductAPIController : ControllerBase Inheritance object ControllerBase ProductAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductAPIController(AppDbContext, IMapper) Initializes a new instance of the ProductAPIController class. public ProductAPIController(AppDbContext db, IMapper mapper) Parameters db AppDbContext The database context. mapper IMapper The AutoMapper instance. Methods Delete(int) Deletes a product by ID. [HttpDelete] [Route(\"{id:int}\")] [Authorize(Roles = \"ADMIN\")] public ResponseDto Delete(int id) Parameters id int The product ID. Returns ResponseDto The response indicating the result of the delete operation. Get() Gets the list of products. [HttpGet] public ResponseDto Get() Returns ResponseDto The response containing the list of products. Get(int) Gets a product by ID. [HttpGet] [Route(\"{id:int}\")] public ResponseDto Get(int id) Parameters id int The product ID. Returns ResponseDto The response containing the product. Post(ProductDto) Creates a new product. [HttpPost] [Authorize(Roles = \"ADMIN\")] public ResponseDto Post(ProductDto ProductDto) Parameters ProductDto ProductDto The product data transfer object. Returns ResponseDto The response containing the created product. Put(ProductDto) Updates an existing product. [HttpPut] [Authorize(Roles = \"ADMIN\")] public ResponseDto Put(ProductDto ProductDto) Parameters ProductDto ProductDto The product data transfer object. Returns ResponseDto The response containing the updated product."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Controllers | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Controllers Classes CategoryAPIController API controller for managing categories. ProductAPIController API controller for managing products."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Data.AppDbContext.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | smartmenu",
    "keywords": "Class AppDbContext Namespace SmartMenu.Services.ProductAPI.Data Assembly SmartMenu.Services.ProductAPI.dll Represents the application's database context. public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class. public AppDbContext(DbContextOptions<AppDbContext> options) Parameters options DbContextOptions<AppDbContext> The options to be used by a DbContext. Properties Categories Gets or sets the categories in the database. public DbSet<Category> Categories { get; set; } Property Value DbSet<Category> Products Gets or sets the products in the database. public DbSet<Product> Products { get; set; } Property Value DbSet<Product> Methods OnModelCreating(ModelBuilder) Configures the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on the derived context. protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The builder being used to construct the model for this context."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Data.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Data.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Data | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Data Classes AppDbContext Represents the application's database context."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | smartmenu",
    "keywords": "Class WebApplicationBuilderExtensions Namespace SmartMenu.Services.ProductAPI.Extensions Assembly SmartMenu.Services.ProductAPI.dll public static class WebApplicationBuilderExtensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddAppAuthetication(WebApplicationBuilder) public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters builder WebApplicationBuilder Returns WebApplicationBuilder"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Extensions | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Extensions Classes WebApplicationBuilderExtensions"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.MappingConfig.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.MappingConfig.html",
    "title": "Class MappingConfig | smartmenu",
    "keywords": "Class MappingConfig Namespace SmartMenu.Services.ProductAPI Assembly SmartMenu.Services.ProductAPI.dll public class MappingConfig Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterMaps() public static MapperConfiguration RegisterMaps() Returns MapperConfiguration"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.AddCategoryTable.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.AddCategoryTable.html",
    "title": "Class AddCategoryTable | smartmenu",
    "keywords": "Class AddCategoryTable Namespace SmartMenu.Services.ProductAPI.Migrations Assembly SmartMenu.Services.ProductAPI.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241124132913_AddCategoryTable\")] public class AddCategoryTable : Migration Inheritance object Migration AddCategoryTable Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.SeedProductTable.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.SeedProductTable.html",
    "title": "Class SeedProductTable | smartmenu",
    "keywords": "Class SeedProductTable Namespace SmartMenu.Services.ProductAPI.Migrations Assembly SmartMenu.Services.ProductAPI.dll A base class inherited by each EF Core migration. [DbContext(typeof(AppDbContext))] [Migration(\"20241119221717_SeedProductTable\")] public class SeedProductTable : Migration Inheritance object Migration SeedProductTable Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks See Database migrations for more information and examples. Methods BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters modelBuilder ModelBuilder The ModelBuilder to use to build the model. Remarks See Database migrations for more information and examples. Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. protected override void Down(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. protected override void Up(MigrationBuilder migrationBuilder) Parameters migrationBuilder MigrationBuilder The MigrationBuilder that will build the operations. Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Migrations | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Migrations Classes AddCategoryTable A base class inherited by each EF Core migration. SeedProductTable A base class inherited by each EF Core migration."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Category.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Category.html",
    "title": "Class Category | smartmenu",
    "keywords": "Class Category Namespace SmartMenu.Services.ProductAPI.Models Assembly SmartMenu.Services.ProductAPI.dll Represents a category in the product API. public class Category Inheritance object Category Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CategoryId Gets or sets the unique identifier for the category. [Key] public int CategoryId { get; set; } Property Value int Name Gets or sets the name of the category. [Required] [MaxLength(50)] public string Name { get; set; } Property Value string"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.CategoryDto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.CategoryDto.html",
    "title": "Class CategoryDto | smartmenu",
    "keywords": "Class CategoryDto Namespace SmartMenu.Services.ProductAPI.Models.Dto Assembly SmartMenu.Services.ProductAPI.dll Represents a data transfer object for a category. public class CategoryDto Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CategoryId Gets or sets the unique identifier for the category. public int CategoryId { get; set; } Property Value int Name Gets or sets the name of the category. public string Name { get; set; } Property Value string"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ProductDto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ProductDto.html",
    "title": "Class ProductDto | smartmenu",
    "keywords": "Class ProductDto Namespace SmartMenu.Services.ProductAPI.Models.Dto Assembly SmartMenu.Services.ProductAPI.dll Represents a data transfer object for a product. public class ProductDto Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category Gets or sets the category data transfer object for the product. public CategoryDto? Category { get; set; } Property Value CategoryDto CategoryId Gets or sets the category identifier for the product. public int CategoryId { get; set; } Property Value int Description Gets or sets the description of the product. public string Description { get; set; } Property Value string Image Gets or sets the image file of the product. public IFormFile? Image { get; set; } Property Value IFormFile ImageLocalPath Gets or sets the local path of the product image. public string? ImageLocalPath { get; set; } Property Value string ImageUrl Gets or sets the URL of the product image. public string? ImageUrl { get; set; } Property Value string Name Gets or sets the name of the product. public string Name { get; set; } Property Value string Price Gets or sets the price of the product. public double Price { get; set; } Property Value double ProductId Gets or sets the unique identifier for the product. public int ProductId { get; set; } Property Value int"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ResponseDto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | smartmenu",
    "keywords": "Class ResponseDto Namespace SmartMenu.Services.ProductAPI.Models.Dto Assembly SmartMenu.Services.ProductAPI.dll Represents a response data transfer object. public class ResponseDto Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccess Gets or sets a value indicating whether the response is successful. public bool IsSuccess { get; set; } Property Value bool Message Gets or sets the message of the response. public string Message { get; set; } Property Value string Result Gets or sets the result of the response. public object? Result { get; set; } Property Value object"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Models.Dto | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Models.Dto Classes CategoryDto Represents a data transfer object for a category. ProductDto Represents a data transfer object for a product. ResponseDto Represents a response data transfer object."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Product.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Product.html",
    "title": "Class Product | smartmenu",
    "keywords": "Class Product Namespace SmartMenu.Services.ProductAPI.Models Assembly SmartMenu.Services.ProductAPI.dll Represents a product in the product API. public class Product Inheritance object Product Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category Gets or sets the category of the product. [ForeignKey(\"CategoryId\")] [ValidateNever] public Category Category { get; set; } Property Value Category CategoryId Gets or sets the category identifier for the product. public int CategoryId { get; set; } Property Value int Description Gets or sets the description of the product. public string Description { get; set; } Property Value string ImageLocalPath Gets or sets the local path of the product image. public string? ImageLocalPath { get; set; } Property Value string ImageUrl Gets or sets the URL of the product image. public string? ImageUrl { get; set; } Property Value string Name Gets or sets the name of the product. [Required] public string Name { get; set; } Property Value string Price Gets or sets the price of the product. [Range(1, 1000)] public double Price { get; set; } Property Value double ProductId Gets or sets the unique identifier for the product. [Key] public int ProductId { get; set; } Property Value int"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Models | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Models Classes Category Represents a category in the product API. Product Represents a product in the product API."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.html",
    "title": "Namespace SmartMenu.Services.ProductAPI | smartmenu",
    "keywords": "Namespace SmartMenu.Services.ProductAPI Classes MappingConfig"
  },
  "Web/SmartMenu.Web.Controllers.AuthController.html": {
    "href": "Web/SmartMenu.Web.Controllers.AuthController.html",
    "title": "Class AuthController | smartmenu",
    "keywords": "Class AuthController Namespace SmartMenu.Web.Controllers Assembly SmartMenu.Web.dll Controller for handling user authentication and account management in the web-application. public class AuthController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller AuthController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthController(IAuthService, ITokenProvider) Constructor for the AuthController. public AuthController(IAuthService authService, ITokenProvider tokenProvider) Parameters authService IAuthService tokenProvider ITokenProvider Methods ChangePassword() Get-method for changing the user's password. [HttpGet] [Authorize] public IActionResult ChangePassword() Returns IActionResult returns the ChangePassword view with a new ChangePasswordDto object. ChangePassword(ChangePasswordDto) Post-method for changing the user's password. [HttpPost] [Authorize] public Task<IActionResult> ChangePassword(ChangePasswordDto model) Parameters model ChangePasswordDto ChangePasswordDto that contains the user's current and new password. Returns Task<IActionResult> returns the ChangePassword view with a new ChangePasswordDto object. DeleteAccount() Post-method for deleting the user's account. [HttpPost] [Authorize] public Task<IActionResult> DeleteAccount() Returns Task<IActionResult> returns the Index view with a success message if the account was deleted successfully. DeleteAccountConfirmation() Get-method for deleting the user's account. [HttpGet] [Authorize] public Task<IActionResult> DeleteAccountConfirmation() Returns Task<IActionResult> returns the DeleteAccountConfirmation view with a new EditAccountDto object. EditAccount() Get-method for editing the user's account details. [HttpGet] [Authorize] public Task<IActionResult> EditAccount() Returns Task<IActionResult> returns the EditAccount view with a new EditAccountDto object. EditAccount(EditAccountDto) Post-method for editing the user's account details. [HttpPost] [Authorize] public Task<IActionResult> EditAccount(EditAccountDto model) Parameters model EditAccountDto EditAccountDto that contains the user's updated account information. Returns Task<IActionResult> returns view with a new EditAccountDto object. Login() Get-method for the Login view. [HttpGet] public IActionResult Login() Returns IActionResult returns the Login view with a new LoginRequestDto object. Login(LoginRequestDto) Post-method for the Login view. [HttpPost] public Task<IActionResult> Login(LoginRequestDto obj) Parameters obj LoginRequestDto LoginRequestDto that contains the user's login information. Returns Task<IActionResult> returns the Login view with a new LoginRequestDto object. Logout() Logout the user and clear the token. public Task<IActionResult> Logout() Returns Task<IActionResult> PersonalData() Get-method for the PersonalData view. [HttpGet] [Authorize] public Task<IActionResult> PersonalData() Returns Task<IActionResult> returns the PersonalData view with a new EditAccountDto object. Register() Get-method for the Register view. [HttpGet] public IActionResult Register() Returns IActionResult returns the Register view with a new RegistrationRequestDto object. Register(RegistrationRequestDto) Post-method for the Register view. [HttpPost] public Task<IActionResult> Register(RegistrationRequestDto obj) Parameters obj RegistrationRequestDto RegistrationRequestDto that contains the user's registration information. Returns Task<IActionResult> returns the Register view with a new RegistrationRequestDto object."
  },
  "Web/SmartMenu.Web.Controllers.CartController.html": {
    "href": "Web/SmartMenu.Web.Controllers.CartController.html",
    "title": "Class CartController | smartmenu",
    "keywords": "Class CartController Namespace SmartMenu.Web.Controllers Assembly SmartMenu.Web.dll Controller for handling cart operations public class CartController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller CartController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartController(ICartService, IOrderService, IAuthService) Constructor for CartController public CartController(ICartService cartService, IOrderService orderService, IAuthService authService) Parameters cartService ICartService service for cart operations orderService IOrderService service for order operations authService IAuthService service for authentication operations Methods ApplyCoupon(CartDto) Post-method to apply a coupon [HttpPost] public Task<IActionResult> ApplyCoupon(CartDto cartDto) Parameters cartDto CartDto dto for the cart Returns Task<IActionResult> returns the view for cart index CartIndex() Method to display the cart index [Authorize] public Task<IActionResult> CartIndex() Returns Task<IActionResult> returns the view for cart index Checkout() Method to add a product to the cart [Authorize] public Task<IActionResult> Checkout() Returns Task<IActionResult> returns the view for cart index Checkout(CartDto) Post-method to checkout the cart [HttpPost] [ActionName(\"Checkout\")] public Task<IActionResult> Checkout(CartDto cartDto) Parameters cartDto CartDto dto for the cart Returns Task<IActionResult> returns the view for cart index Confirmation(int) Method to confirm the order public Task<IActionResult> Confirmation(int orderId) Parameters orderId int id of the order Returns Task<IActionResult> returns the view for confirmation DecreaseQuantity(int) Method to decrease the quantity of a product in the cart public Task<IActionResult> DecreaseQuantity(int cartDetailsId) Parameters cartDetailsId int id of the cart details Returns Task<IActionResult> returns the view for cart index IncreaseQuantity(int) Method to increase the quantity of a product in the cart public Task<IActionResult> IncreaseQuantity(int cartDetailsId) Parameters cartDetailsId int id of the cart details Returns Task<IActionResult> returns the view for cart index Remove(int) Method to remove a product from the cart public Task<IActionResult> Remove(int cartDetailsId) Parameters cartDetailsId int id of the cart details Returns Task<IActionResult> returns the view for cart index RemoveCoupon(CartDto) Post-method to remove a coupon [HttpPost] public Task<IActionResult> RemoveCoupon(CartDto cartDto) Parameters cartDto CartDto dto for the cart Returns Task<IActionResult> returns the view for cart index"
  },
  "Web/SmartMenu.Web.Controllers.CategoryController.html": {
    "href": "Web/SmartMenu.Web.Controllers.CategoryController.html",
    "title": "Class CategoryController | smartmenu",
    "keywords": "Class CategoryController Namespace SmartMenu.Web.Controllers Assembly SmartMenu.Web.dll Controller for Category in the SmartMenu web application public class CategoryController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller CategoryController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryController(ICategoryService) Constructor for the CategoryController public CategoryController(ICategoryService categoryService) Parameters categoryService ICategoryService service for category Methods CategoryCreate() Method to display the create page for categories public IActionResult CategoryCreate() Returns IActionResult returns the view CategoryCreate(CategoryDto) Post-method to create a category [HttpPost] public Task<IActionResult> CategoryCreate(CategoryDto model) Parameters model CategoryDto dto for category Returns Task<IActionResult> returns the view CategoryDelete(CategoryDto) Post-method to delete a category [HttpPost] public Task<IActionResult> CategoryDelete(CategoryDto categoryDto) Parameters categoryDto CategoryDto dto for category Returns Task<IActionResult> returns the view CategoryDelete(int) Method to delete a category public Task<IActionResult> CategoryDelete(int categoryId) Parameters categoryId int id of the category Returns Task<IActionResult> returns the view CategoryEdit(CategoryDto) Post-method to edit a category [HttpPost] public Task<IActionResult> CategoryEdit(CategoryDto categoryDto) Parameters categoryDto CategoryDto dto for category Returns Task<IActionResult> returns the view CategoryEdit(int) Method to edit a category public Task<IActionResult> CategoryEdit(int categoryId) Parameters categoryId int id of the category Returns Task<IActionResult> returns the view CategoryIndex() Method to display the index page for categories public Task<IActionResult> CategoryIndex() Returns Task<IActionResult> returns the view GetAll() Method to get all categories [HttpGet] public Task<IActionResult> GetAll() Returns Task<IActionResult> returns a JSON result"
  },
  "Web/SmartMenu.Web.Controllers.CouponController.html": {
    "href": "Web/SmartMenu.Web.Controllers.CouponController.html",
    "title": "Class CouponController | smartmenu",
    "keywords": "Class CouponController Namespace SmartMenu.Web.Controllers Assembly SmartMenu.Web.dll Controller for managing coupons in the SmartMenu web application. public class CouponController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller CouponController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CouponController(ICouponService) Initializes a new instance of the CouponController class. public CouponController(ICouponService couponService) Parameters couponService ICouponService The service for managing coupons. Methods CouponCreate() Displays the create page for coupons. public Task<IActionResult> CouponCreate() Returns Task<IActionResult> Returns the view for creating a coupon. CouponCreate(CouponDto) Handles the post request to create a new coupon. [HttpPost] public Task<IActionResult> CouponCreate(CouponDto model) Parameters model CouponDto The data transfer object for the coupon. Returns Task<IActionResult> Returns the view with the created coupon or redirects to the index page. CouponDelete(CouponDto) Handles the post request to delete a coupon. [HttpPost] public Task<IActionResult> CouponDelete(CouponDto couponDto) Parameters couponDto CouponDto The data transfer object for the coupon to be deleted. Returns Task<IActionResult> Returns the view with the deleted coupon or redirects to the index page. CouponDelete(int) Displays the delete page for a coupon. public Task<IActionResult> CouponDelete(int couponId) Parameters couponId int The ID of the coupon to be deleted. Returns Task<IActionResult> Returns the view with the coupon to be deleted. CouponIndex() Displays the index page for coupons. public Task<IActionResult> CouponIndex() Returns Task<IActionResult> Returns the view with the list of coupons."
  },
  "Web/SmartMenu.Web.Controllers.HomeController.html": {
    "href": "Web/SmartMenu.Web.Controllers.HomeController.html",
    "title": "Class HomeController | smartmenu",
    "keywords": "Class HomeController Namespace SmartMenu.Web.Controllers Assembly SmartMenu.Web.dll Controller for managing the home page and related actions in the SmartMenu web application. public class HomeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller HomeController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HomeController(IProductService, ICartService, ICategoryService) Initializes a new instance of the HomeController class. public HomeController(IProductService productService, ICartService cartService, ICategoryService categoryService) Parameters productService IProductService The service for managing products. cartService ICartService The service for managing the shopping cart. categoryService ICategoryService The service for managing categories. Methods Error() Displays the error page. [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] public IActionResult Error() Returns IActionResult Returns the view for the error page. Index(string?, int?, int, string?) Displays the index page with a list of products. public Task<IActionResult> Index(string? searchTerm, int? categoryId, int pageNumber = 1, string? sortOrder = null) Parameters searchTerm string The search term to filter products. categoryId int? The category ID to filter products. pageNumber int The current page number for pagination. sortOrder string The sort order for products. Returns Task<IActionResult> Returns the view with the list of products. Privacy() Displays the privacy policy page. public IActionResult Privacy() Returns IActionResult Returns the view for the privacy policy. ProductDetails(ProductDto) Handles the post request to add a product to the shopping cart. [Authorize] [HttpPost] [ActionName(\"ProductDetails\")] public Task<IActionResult> ProductDetails(ProductDto productDto) Parameters productDto ProductDto The data transfer object for the product to add to the cart. Returns Task<IActionResult> Returns the view with the product details or redirects to the index page. ProductDetails(int) Displays the details of a product. public Task<IActionResult> ProductDetails(int productId) Parameters productId int The ID of the product to display. Returns Task<IActionResult> Returns the view with the product details."
  },
  "Web/SmartMenu.Web.Controllers.OrderController.html": {
    "href": "Web/SmartMenu.Web.Controllers.OrderController.html",
    "title": "Class OrderController | smartmenu",
    "keywords": "Class OrderController Namespace SmartMenu.Web.Controllers Assembly SmartMenu.Web.dll Controller for managing orders in the SmartMenu web application. public class OrderController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller OrderController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderController(IOrderService) Initializes a new instance of the OrderController class. public OrderController(IOrderService orderService) Parameters orderService IOrderService The service for managing orders. Methods CancelOrder(int) Updates the status of an order to \"Cancelled\". [HttpPost(\"CancelOrder\")] public Task<IActionResult> CancelOrder(int orderId) Parameters orderId int The ID of the order to update. Returns Task<IActionResult> Returns the view with the updated order status. CompleteOrder(int) Updates the status of an order to \"Completed\". [HttpPost(\"CompleteOrder\")] public Task<IActionResult> CompleteOrder(int orderId) Parameters orderId int The ID of the order to update. Returns Task<IActionResult> Returns the view with the updated order status. GetAll(string) Gets all orders with optional status filtering. [HttpGet] public IActionResult GetAll(string status) Parameters status string The status to filter orders by. Returns IActionResult Returns a JSON result with the list of orders. OrderDetail(int) Displays the details of a specific order. [Authorize] public Task<IActionResult> OrderDetail(int orderId) Parameters orderId int The ID of the order to display. Returns Task<IActionResult> Returns the view with the order details. OrderIndex() Displays the index page for orders. [Authorize] public IActionResult OrderIndex() Returns IActionResult Returns the view for the order index page. OrderReadyForPickup(int) Updates the status of an order to \"Ready for Pickup\". [HttpPost(\"OrderReadyForPickup\")] public Task<IActionResult> OrderReadyForPickup(int orderId) Parameters orderId int The ID of the order to update. Returns Task<IActionResult> Returns the view with the updated order status."
  },
  "Web/SmartMenu.Web.Controllers.ProductController.html": {
    "href": "Web/SmartMenu.Web.Controllers.ProductController.html",
    "title": "Class ProductController | smartmenu",
    "keywords": "Class ProductController Namespace SmartMenu.Web.Controllers Assembly SmartMenu.Web.dll Controller for managing products. public class ProductController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller ProductController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductController(IProductService, ICategoryService) Initializes a new instance of the ProductController class. public ProductController(IProductService productService, ICategoryService categoryService) Parameters productService IProductService The product service. categoryService ICategoryService The category service. Methods GetAll(string) Gets all products. [HttpGet] public Task<IActionResult> GetAll(string status) Parameters status string The status filter. Returns Task<IActionResult> A JSON result containing the list of products. ProductCreate() Displays the product creation form. public Task<IActionResult> ProductCreate() Returns Task<IActionResult> The product creation view. ProductCreate(ProductDto) Handles the product creation form submission. [HttpPost] public Task<IActionResult> ProductCreate(ProductDto model) Parameters model ProductDto The product model. Returns Task<IActionResult> The product index view if successful, otherwise the product creation view. ProductDelete(ProductDto) Handles the product deletion form submission. [HttpPost] public Task<IActionResult> ProductDelete(ProductDto productDto) Parameters productDto ProductDto The product model. Returns Task<IActionResult> The product index view if successful, otherwise the product deletion view. ProductDelete(int) Displays the product deletion confirmation form. public Task<IActionResult> ProductDelete(int productId) Parameters productId int The product ID. Returns Task<IActionResult> The product deletion view if successful, otherwise a not found result. ProductEdit(ProductDto) Handles the product edit form submission. [HttpPost] public Task<IActionResult> ProductEdit(ProductDto productDto) Parameters productDto ProductDto The product model. Returns Task<IActionResult> The product index view if successful, otherwise the product edit view. ProductEdit(int) Displays the product edit form. public Task<IActionResult> ProductEdit(int productId) Parameters productId int The product ID. Returns Task<IActionResult> The product edit view if successful, otherwise a not found result. ProductIndex() Displays the list of products. public Task<IActionResult> ProductIndex() Returns Task<IActionResult> The product index view."
  },
  "Web/SmartMenu.Web.Controllers.html": {
    "href": "Web/SmartMenu.Web.Controllers.html",
    "title": "Namespace SmartMenu.Web.Controllers | smartmenu",
    "keywords": "Namespace SmartMenu.Web.Controllers Classes AuthController Controller for handling user authentication and account management in the web-application. CartController Controller for handling cart operations CategoryController Controller for Category in the SmartMenu web application CouponController Controller for managing coupons in the SmartMenu web application. HomeController Controller for managing the home page and related actions in the SmartMenu web application. OrderController Controller for managing orders in the SmartMenu web application. ProductController Controller for managing products."
  },
  "Web/SmartMenu.Web.Models.CartDetailsDto.html": {
    "href": "Web/SmartMenu.Web.Models.CartDetailsDto.html",
    "title": "Class CartDetailsDto | smartmenu",
    "keywords": "Class CartDetailsDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Represents the details of a cart item. public class CartDetailsDto Inheritance object CartDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartDetailsId Gets or sets the cart details ID. public int CartDetailsId { get; set; } Property Value int CartHeader Gets or sets the cart header. public CartHeaderDto? CartHeader { get; set; } Property Value CartHeaderDto CartHeaderId Gets or sets the cart header ID. public int CartHeaderId { get; set; } Property Value int Count Gets or sets the count of the product. public int Count { get; set; } Property Value int Product Gets or sets the product. public ProductDto? Product { get; set; } Property Value ProductDto ProductId Gets or sets the product ID. public int ProductId { get; set; } Property Value int"
  },
  "Web/SmartMenu.Web.Models.CartDto.html": {
    "href": "Web/SmartMenu.Web.Models.CartDto.html",
    "title": "Class CartDto | smartmenu",
    "keywords": "Class CartDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Represents a shopping cart. public class CartDto Inheritance object CartDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartDetails Gets or sets the cart details. public IEnumerable<CartDetailsDto>? CartDetails { get; set; } Property Value IEnumerable<CartDetailsDto> CartHeader Gets or sets the cart header. public CartHeaderDto CartHeader { get; set; } Property Value CartHeaderDto"
  },
  "Web/SmartMenu.Web.Models.CartHeaderDto.html": {
    "href": "Web/SmartMenu.Web.Models.CartHeaderDto.html",
    "title": "Class CartHeaderDto | smartmenu",
    "keywords": "Class CartHeaderDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Represents the header information of a shopping cart. public class CartHeaderDto Inheritance object CartHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CartHeaderId Gets or sets the cart header ID. public int CartHeaderId { get; set; } Property Value int CartTotal Gets or sets the total amount of the cart. public double CartTotal { get; set; } Property Value double CouponCode Gets or sets the coupon code. public string? CouponCode { get; set; } Property Value string Discount Gets or sets the discount amount. public double Discount { get; set; } Property Value double Email Gets or sets the email address of the user. [Required] public string? Email { get; set; } Property Value string Name Gets or sets the name of the user. [Required] public string? Name { get; set; } Property Value string Phone Gets or sets the phone number of the user. [Required] public string? Phone { get; set; } Property Value string UserId Gets or sets the user ID. public string? UserId { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.CategoryDto.html": {
    "href": "Web/SmartMenu.Web.Models.CategoryDto.html",
    "title": "Class CategoryDto | smartmenu",
    "keywords": "Class CategoryDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Represents a category. public class CategoryDto Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CategoryId Gets or sets the category ID. public int CategoryId { get; set; } Property Value int Name Gets or sets the name of the category. public string Name { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.ChangePasswordDto.html": {
    "href": "Web/SmartMenu.Web.Models.ChangePasswordDto.html",
    "title": "Class ChangePasswordDto | smartmenu",
    "keywords": "Class ChangePasswordDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for changing a user's password. public class ChangePasswordDto Inheritance object ChangePasswordDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ConfirmNewPassword Gets or sets the confirmation of the new password. public string ConfirmNewPassword { get; set; } Property Value string CurrentPassword Gets or sets the user's current password. public string CurrentPassword { get; set; } Property Value string NewPassword Gets or sets the new password. public string NewPassword { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.CheckoutDto.html": {
    "href": "Web/SmartMenu.Web.Models.CheckoutDto.html",
    "title": "Class CheckoutDto | smartmenu",
    "keywords": "Class CheckoutDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for the checkout process. public class CheckoutDto Inheritance object CheckoutDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountDto Gets or sets the account details for editing. public EditAccountDto AccountDto { get; set; } Property Value EditAccountDto CartDto Gets or sets the cart details. public CartDto CartDto { get; set; } Property Value CartDto"
  },
  "Web/SmartMenu.Web.Models.CouponDto.html": {
    "href": "Web/SmartMenu.Web.Models.CouponDto.html",
    "title": "Class CouponDto | smartmenu",
    "keywords": "Class CouponDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for coupon details. public class CouponDto Inheritance object CouponDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. public string CouponCode { get; set; } Property Value string CouponId Gets or sets the coupon identifier. public int CouponId { get; set; } Property Value int DiscountAmount Gets or sets the discount amount. public double DiscountAmount { get; set; } Property Value double MinAmount Gets or sets the minimum amount required to use the coupon. public int MinAmount { get; set; } Property Value int"
  },
  "Web/SmartMenu.Web.Models.EditAccountDto.html": {
    "href": "Web/SmartMenu.Web.Models.EditAccountDto.html",
    "title": "Class EditAccountDto | smartmenu",
    "keywords": "Class EditAccountDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for editing account details. public class EditAccountDto Inheritance object EditAccountDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties NewEmail Gets or sets the new email address to update. public string? NewEmail { get; set; } Property Value string NewName Gets or sets the new name to update. public string? NewName { get; set; } Property Value string NewPhoneNumber Gets or sets the new phone number to update. public string? NewPhoneNumber { get; set; } Property Value string UserId Gets or sets the unique identifier of the user. public string UserId { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.ErrorViewModel.html": {
    "href": "Web/SmartMenu.Web.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | smartmenu",
    "keywords": "Class ErrorViewModel Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll View model for representing error information. public class ErrorViewModel Inheritance object ErrorViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties RequestId Gets or sets the request identifier. public string? RequestId { get; set; } Property Value string ShowRequestId Gets a value indicating whether to show the request identifier. public bool ShowRequestId { get; } Property Value bool"
  },
  "Web/SmartMenu.Web.Models.LoginRequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.LoginRequestDto.html",
    "title": "Class LoginRequestDto | smartmenu",
    "keywords": "Class LoginRequestDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for login requests. public class LoginRequestDto Inheritance object LoginRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Password Gets or sets the password. [Required] public string Password { get; set; } Property Value string UserName Gets or sets the username. [Required] public string UserName { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.LoginResponseDto.html": {
    "href": "Web/SmartMenu.Web.Models.LoginResponseDto.html",
    "title": "Class LoginResponseDto | smartmenu",
    "keywords": "Class LoginResponseDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for login responses. public class LoginResponseDto Inheritance object LoginResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Token Gets or sets the authentication token. public string Token { get; set; } Property Value string User Gets or sets the user details. public UserDto User { get; set; } Property Value UserDto"
  },
  "Web/SmartMenu.Web.Models.OrderDetailsDto.html": {
    "href": "Web/SmartMenu.Web.Models.OrderDetailsDto.html",
    "title": "Class OrderDetailsDto | smartmenu",
    "keywords": "Class OrderDetailsDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for order details. public class OrderDetailsDto Inheritance object OrderDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Count Gets or sets the quantity of the product. public int Count { get; set; } Property Value int OrderDetailsId Gets or sets the order details identifier. public int OrderDetailsId { get; set; } Property Value int OrderHeaderId Gets or sets the order header identifier. public int OrderHeaderId { get; set; } Property Value int Price Gets or sets the price of the product. public double Price { get; set; } Property Value double Product Gets or sets the product details. public ProductDto? Product { get; set; } Property Value ProductDto ProductId Gets or sets the product identifier. public int ProductId { get; set; } Property Value int ProductName Gets or sets the name of the product. public string ProductName { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.OrderHeaderDto.html": {
    "href": "Web/SmartMenu.Web.Models.OrderHeaderDto.html",
    "title": "Class OrderHeaderDto | smartmenu",
    "keywords": "Class OrderHeaderDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for order header details. public class OrderHeaderDto Inheritance object OrderHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties CouponCode Gets or sets the coupon code. public string? CouponCode { get; set; } Property Value string Discount Gets or sets the discount amount. public double Discount { get; set; } Property Value double Email Gets or sets the email address of the customer. public string? Email { get; set; } Property Value string Name Gets or sets the name of the customer. public string? Name { get; set; } Property Value string OrderDetails Gets or sets the order details. public IEnumerable<OrderDetailsDto> OrderDetails { get; set; } Property Value IEnumerable<OrderDetailsDto> OrderHeaderId Gets or sets the order header identifier. public int OrderHeaderId { get; set; } Property Value int OrderTime Gets or sets the order time. public DateTime OrderTime { get; set; } Property Value DateTime OrderTotal Gets or sets the total order amount. public double OrderTotal { get; set; } Property Value double PaymentIntentId Gets or sets the payment intent identifier. public string? PaymentIntentId { get; set; } Property Value string Phone Gets or sets the phone number of the customer. public string? Phone { get; set; } Property Value string Status Gets or sets the status of the order. public string? Status { get; set; } Property Value string StripeSessionId Gets or sets the Stripe session identifier. public string? StripeSessionId { get; set; } Property Value string UserId Gets or sets the user identifier. public string? UserId { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.ProductDto.html": {
    "href": "Web/SmartMenu.Web.Models.ProductDto.html",
    "title": "Class ProductDto | smartmenu",
    "keywords": "Class ProductDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for product details. public class ProductDto Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Category Gets or sets the category details. public CategoryDto? Category { get; set; } Property Value CategoryDto CategoryId Gets or sets the category identifier. public int CategoryId { get; set; } Property Value int Count Gets or sets the quantity of the product. [Range(1, 100)] public int Count { get; set; } Property Value int Description Gets or sets the description of the product. public string Description { get; set; } Property Value string Image Gets or sets the image file. [MaxFileSize(1)] [AllowedExtensions(new string[] { \".jpg\", \".png\" })] public IFormFile? Image { get; set; } Property Value IFormFile ImageLocalPath Gets or sets the local path of the product image. public string? ImageLocalPath { get; set; } Property Value string ImageUrl Gets or sets the URL of the product image. public string? ImageUrl { get; set; } Property Value string Name Gets or sets the name of the product. public string Name { get; set; } Property Value string Price Gets or sets the price of the product. public double Price { get; set; } Property Value double ProductId Gets or sets the product identifier. public int ProductId { get; set; } Property Value int"
  },
  "Web/SmartMenu.Web.Models.RegistrationRequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.RegistrationRequestDto.html",
    "title": "Class RegistrationRequestDto | smartmenu",
    "keywords": "Class RegistrationRequestDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for registration requests. public class RegistrationRequestDto Inheritance object RegistrationRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email Gets or sets the email address. [Required] public string Email { get; set; } Property Value string Name Gets or sets the name of the user. [Required] public string Name { get; set; } Property Value string Password Gets or sets the password. [Required] public string Password { get; set; } Property Value string PhoneNumber Gets or sets the phone number of the user. [Required] public string PhoneNumber { get; set; } Property Value string Role Gets or sets the role of the user. public string? Role { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.RequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.RequestDto.html",
    "title": "Class RequestDto | smartmenu",
    "keywords": "Class RequestDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for API requests. public class RequestDto Inheritance object RequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccessToken Gets or sets the access token for authentication. public string AccessToken { get; set; } Property Value string ApiType Gets or sets the type of the API request. public SD.ApiType ApiType { get; set; } Property Value SD.ApiType ContentType Gets or sets the content type of the API request. public SD.ContentType ContentType { get; set; } Property Value SD.ContentType Data Gets or sets the data to be sent with the API request. public object Data { get; set; } Property Value object Url Gets or sets the URL for the API request. public string Url { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.ResponseDto.html": {
    "href": "Web/SmartMenu.Web.Models.ResponseDto.html",
    "title": "Class ResponseDto | smartmenu",
    "keywords": "Class ResponseDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for API responses. public class ResponseDto Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsSuccess Gets or sets a value indicating whether the API request was successful. public bool IsSuccess { get; set; } Property Value bool Message Gets or sets the message associated with the API response. public string Message { get; set; } Property Value string Result Gets or sets the result of the API response. public object? Result { get; set; } Property Value object"
  },
  "Web/SmartMenu.Web.Models.StripeRequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.StripeRequestDto.html",
    "title": "Class StripeRequestDto | smartmenu",
    "keywords": "Class StripeRequestDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for Stripe payment requests. public class StripeRequestDto Inheritance object StripeRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ApprovedUrl Gets or sets the URL to redirect to upon approval. public string ApprovedUrl { get; set; } Property Value string CancelUrl Gets or sets the URL to redirect to upon cancellation. public string CancelUrl { get; set; } Property Value string OrderHeader Gets or sets the order header details. public OrderHeaderDto OrderHeader { get; set; } Property Value OrderHeaderDto StripeSessionId Gets or sets the Stripe session identifier. public string? StripeSessionId { get; set; } Property Value string StripeSessionUrl Gets or sets the Stripe session URL. public string? StripeSessionUrl { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.UserDto.html": {
    "href": "Web/SmartMenu.Web.Models.UserDto.html",
    "title": "Class UserDto | smartmenu",
    "keywords": "Class UserDto Namespace SmartMenu.Web.Models Assembly SmartMenu.Web.dll Data transfer object for user details. public class UserDto Inheritance object UserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Email Gets or sets the email address of the user. public string Email { get; set; } Property Value string ID Gets or sets the user identifier. public string ID { get; set; } Property Value string Name Gets or sets the name of the user. public string Name { get; set; } Property Value string PhoneNumber Gets or sets the phone number of the user. public string PhoneNumber { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Models.html": {
    "href": "Web/SmartMenu.Web.Models.html",
    "title": "Namespace SmartMenu.Web.Models | smartmenu",
    "keywords": "Namespace SmartMenu.Web.Models Classes CartDetailsDto Represents the details of a cart item. CartDto Represents a shopping cart. CartHeaderDto Represents the header information of a shopping cart. CategoryDto Represents a category. ChangePasswordDto Data transfer object for changing a user's password. CheckoutDto Data transfer object for the checkout process. CouponDto Data transfer object for coupon details. EditAccountDto Data transfer object for editing account details. ErrorViewModel View model for representing error information. LoginRequestDto Data transfer object for login requests. LoginResponseDto Data transfer object for login responses. OrderDetailsDto Data transfer object for order details. OrderHeaderDto Data transfer object for order header details. ProductDto Data transfer object for product details. RegistrationRequestDto Data transfer object for registration requests. RequestDto Data transfer object for API requests. ResponseDto Data transfer object for API responses. StripeRequestDto Data transfer object for Stripe payment requests. UserDto Data transfer object for user details."
  },
  "Web/SmartMenu.Web.Service.AuthService.html": {
    "href": "Web/SmartMenu.Web.Service.AuthService.html",
    "title": "Class AuthService | smartmenu",
    "keywords": "Class AuthService Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides authentication-related services. public class AuthService : IAuthService Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AuthService(IBaseService) Initializes a new instance of the AuthService class. public AuthService(IBaseService baseService) Parameters baseService IBaseService The base service to be used for sending requests. Methods AssignRoleAsync(RegistrationRequestDto) Assigns a role to a user. public Task<ResponseDto?> AssignRoleAsync(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto The registration request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. ChangePasswordAsync(ChangePasswordDto) Changes a user's password. public Task<ResponseDto?> ChangePasswordAsync(ChangePasswordDto changePasswordDto) Parameters changePasswordDto ChangePasswordDto The change password data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteAccountAsync(string) Deletes a user's account. public Task<ResponseDto?> DeleteAccountAsync(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. EditAccountAsync(EditAccountDto) Edits a user's account information. public Task<ResponseDto?> EditAccountAsync(EditAccountDto editAccountDto) Parameters editAccountDto EditAccountDto The edit account data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetUserDetailsAsync(string) Gets the details of a user. public Task<ResponseDto?> GetUserDetailsAsync(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. LoginAsync(LoginRequestDto) Logs in a user. public Task<ResponseDto?> LoginAsync(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto The login request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. RegisterAsync(RegistrationRequestDto) Registers a new user. public Task<ResponseDto?> RegisterAsync(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto The registration request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.BaseService.html": {
    "href": "Web/SmartMenu.Web.Service.BaseService.html",
    "title": "Class BaseService | smartmenu",
    "keywords": "Class BaseService Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides base functionality for sending HTTP requests. public class BaseService : IBaseService Inheritance object BaseService Implements IBaseService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseService(IHttpClientFactory, ITokenProvider) Initializes a new instance of the BaseService class. public BaseService(IHttpClientFactory httpClientFactory, ITokenProvider tokenProvider) Parameters httpClientFactory IHttpClientFactory The HTTP client factory. tokenProvider ITokenProvider The token provider. Methods SendAsync(RequestDto, bool) Sends an HTTP request asynchronously. public Task<ResponseDto?> SendAsync(RequestDto requestDto, bool withBearer = true) Parameters requestDto RequestDto The request data transfer object. withBearer bool Indicates whether to include a bearer token in the request. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.CartService.html": {
    "href": "Web/SmartMenu.Web.Service.CartService.html",
    "title": "Class CartService | smartmenu",
    "keywords": "Class CartService Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides services related to the shopping cart. public class CartService : ICartService Inheritance object CartService Implements ICartService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CartService(IBaseService) Initializes a new instance of the CartService class. public CartService(IBaseService baseService) Parameters baseService IBaseService The base service to be used for sending requests. Methods ApplyCouponAsync(CartDto) Applies a coupon to the cart. public Task<ResponseDto?> ApplyCouponAsync(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. ClearCartAsync(string) Clears the cart for a user. public Task<ResponseDto?> ClearCartAsync(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DecreaseQuantityAsync(int) Decreases the quantity of an item in the cart. public Task<ResponseDto?> DecreaseQuantityAsync(int cartDetailsId) Parameters cartDetailsId int The cart details ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. EmailCart(CartDto) Sends an email with the cart details. public Task<ResponseDto?> EmailCart(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCartByUserIdAsnyc(string) Gets the cart details by user ID. public Task<ResponseDto?> GetCartByUserIdAsnyc(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. IncreaseQuantityAsync(int) Increases the quantity of an item in the cart. public Task<ResponseDto?> IncreaseQuantityAsync(int cartDetailsId) Parameters cartDetailsId int The cart details ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. RemoveFromCartAsync(int) Removes an item from the cart. public Task<ResponseDto?> RemoveFromCartAsync(int cartDetailsId) Parameters cartDetailsId int The cart details ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpsertCartAsync(CartDto) Adds or updates the cart. public Task<ResponseDto?> UpsertCartAsync(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.CategoryService.html": {
    "href": "Web/SmartMenu.Web.Service.CategoryService.html",
    "title": "Class CategoryService | smartmenu",
    "keywords": "Class CategoryService Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides services related to categories. public class CategoryService : ICategoryService Inheritance object CategoryService Implements ICategoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CategoryService(IBaseService) Initializes a new instance of the CategoryService class. public CategoryService(IBaseService baseService) Parameters baseService IBaseService The base service to be used for sending requests. Methods CreateCategoryAsync(CategoryDto) Creates a new category. public Task<ResponseDto?> CreateCategoryAsync(CategoryDto categoryDto) Parameters categoryDto CategoryDto The category data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteCategoryAsync(int) Deletes a category. public Task<ResponseDto?> DeleteCategoryAsync(int id) Parameters id int The category ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllCategoriesAsync() Gets all categories. public Task<ResponseDto?> GetAllCategoriesAsync() Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCategoryByIdAsync(int) Gets a single category by ID. public Task<ResponseDto?> GetCategoryByIdAsync(int id) Parameters id int The category ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateCategoryAsync(CategoryDto) Updates an existing category. public Task<ResponseDto?> UpdateCategoryAsync(CategoryDto categoryDto) Parameters categoryDto CategoryDto The category data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.CouponService.html": {
    "href": "Web/SmartMenu.Web.Service.CouponService.html",
    "title": "Class CouponService | smartmenu",
    "keywords": "Class CouponService Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides services related to coupons. public class CouponService : ICouponService Inheritance object CouponService Implements ICouponService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CouponService(IBaseService) Initializes a new instance of the CouponService class. public CouponService(IBaseService baseService) Parameters baseService IBaseService The base service to be used for sending requests. Methods CreateCouponsAsync(CouponDto) Creates a new coupon. public Task<ResponseDto?> CreateCouponsAsync(CouponDto couponDto) Parameters couponDto CouponDto The coupon data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteCouponsAsync(int) Deletes a coupon by ID. public Task<ResponseDto?> DeleteCouponsAsync(int id) Parameters id int The coupon ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllCouponsAsync() Gets all coupons. public Task<ResponseDto?> GetAllCouponsAsync() Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCouponAsync(string) Gets a coupon by its code. public Task<ResponseDto?> GetCouponAsync(string couponCode) Parameters couponCode string The coupon code. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCouponByIdAsync(int) Gets a coupon by ID. public Task<ResponseDto?> GetCouponByIdAsync(int id) Parameters id int The coupon ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateCouponsAsync(CouponDto) Updates an existing coupon. public Task<ResponseDto?> UpdateCouponsAsync(CouponDto couponDto) Parameters couponDto CouponDto The coupon data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.IAuthService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IAuthService.html",
    "title": "Interface IAuthService | smartmenu",
    "keywords": "Interface IAuthService Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines methods for authentication and user management services. public interface IAuthService Methods AssignRoleAsync(RegistrationRequestDto) Assigns a role to a user. Task<ResponseDto?> AssignRoleAsync(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto The registration request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. ChangePasswordAsync(ChangePasswordDto) Changes a user's password. Task<ResponseDto?> ChangePasswordAsync(ChangePasswordDto changePasswordDto) Parameters changePasswordDto ChangePasswordDto The change password data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteAccountAsync(string) Deletes a user's account. Task<ResponseDto?> DeleteAccountAsync(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. EditAccountAsync(EditAccountDto) Edits a user's account details. Task<ResponseDto?> EditAccountAsync(EditAccountDto editAccountDto) Parameters editAccountDto EditAccountDto The edit account data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetUserDetailsAsync(string) Gets the details of a user by ID. Task<ResponseDto?> GetUserDetailsAsync(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. LoginAsync(LoginRequestDto) Logs in a user. Task<ResponseDto?> LoginAsync(LoginRequestDto loginRequestDto) Parameters loginRequestDto LoginRequestDto The login request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. RegisterAsync(RegistrationRequestDto) Registers a new user. Task<ResponseDto?> RegisterAsync(RegistrationRequestDto registrationRequestDto) Parameters registrationRequestDto RegistrationRequestDto The registration request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.IBaseService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IBaseService.html",
    "title": "Interface IBaseService | smartmenu",
    "keywords": "Interface IBaseService Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines a base service for sending HTTP requests. public interface IBaseService Methods SendAsync(RequestDto, bool) Sends an asynchronous HTTP request. Task<ResponseDto?> SendAsync(RequestDto requestDto, bool withBearer = true) Parameters requestDto RequestDto The request data transfer object. withBearer bool Indicates whether to include a bearer token in the request. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ICartService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ICartService.html",
    "title": "Interface ICartService | smartmenu",
    "keywords": "Interface ICartService Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines methods for managing the shopping cart. public interface ICartService Methods ApplyCouponAsync(CartDto) Applies a coupon to the cart. Task<ResponseDto?> ApplyCouponAsync(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. ClearCartAsync(string) Clears the cart for a user. Task<ResponseDto?> ClearCartAsync(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DecreaseQuantityAsync(int) Decreases the quantity of an item in the cart. Task<ResponseDto?> DecreaseQuantityAsync(int cartDetailsId) Parameters cartDetailsId int The cart details ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. EmailCart(CartDto) Emails the cart. Task<ResponseDto?> EmailCart(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCartByUserIdAsnyc(string) Gets the cart by user ID. Task<ResponseDto?> GetCartByUserIdAsnyc(string userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. IncreaseQuantityAsync(int) Increases the quantity of an item in the cart. Task<ResponseDto?> IncreaseQuantityAsync(int cartDetailsId) Parameters cartDetailsId int The cart details ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. RemoveFromCartAsync(int) Removes an item from the cart. Task<ResponseDto?> RemoveFromCartAsync(int cartDetailsId) Parameters cartDetailsId int The cart details ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpsertCartAsync(CartDto) Upserts the cart. Task<ResponseDto?> UpsertCartAsync(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ICategoryService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ICategoryService.html",
    "title": "Interface ICategoryService | smartmenu",
    "keywords": "Interface ICategoryService Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines methods for managing categories. public interface ICategoryService Methods CreateCategoryAsync(CategoryDto) Creates a new category. Task<ResponseDto?> CreateCategoryAsync(CategoryDto categoryDto) Parameters categoryDto CategoryDto The category data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteCategoryAsync(int) Deletes a category by its ID. Task<ResponseDto?> DeleteCategoryAsync(int id) Parameters id int The category ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllCategoriesAsync() Gets all categories. Task<ResponseDto?> GetAllCategoriesAsync() Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCategoryByIdAsync(int) Gets a category by its ID. Task<ResponseDto?> GetCategoryByIdAsync(int id) Parameters id int The category ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateCategoryAsync(CategoryDto) Updates an existing category. Task<ResponseDto?> UpdateCategoryAsync(CategoryDto categoryDto) Parameters categoryDto CategoryDto The category data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ICouponService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ICouponService.html",
    "title": "Interface ICouponService | smartmenu",
    "keywords": "Interface ICouponService Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines methods for managing coupons. public interface ICouponService Methods CreateCouponsAsync(CouponDto) Creates a new coupon. Task<ResponseDto?> CreateCouponsAsync(CouponDto couponDto) Parameters couponDto CouponDto The coupon data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteCouponsAsync(int) Deletes a coupon by its ID. Task<ResponseDto?> DeleteCouponsAsync(int id) Parameters id int The coupon ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllCouponsAsync() Gets all coupons. Task<ResponseDto?> GetAllCouponsAsync() Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCouponAsync(string) Gets a coupon by its code. Task<ResponseDto?> GetCouponAsync(string couponCode) Parameters couponCode string The coupon code. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetCouponByIdAsync(int) Gets a coupon by its ID. Task<ResponseDto?> GetCouponByIdAsync(int id) Parameters id int The coupon ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateCouponsAsync(CouponDto) Updates an existing coupon. Task<ResponseDto?> UpdateCouponsAsync(CouponDto couponDto) Parameters couponDto CouponDto The coupon data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.IOrderService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IOrderService.html",
    "title": "Interface IOrderService | smartmenu",
    "keywords": "Interface IOrderService Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines methods for managing orders. public interface IOrderService Methods CreateOrder(CartDto) Creates a new order. Task<ResponseDto?> CreateOrder(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. CreateStripeSession(StripeRequestDto) Creates a Stripe session for payment. Task<ResponseDto?> CreateStripeSession(StripeRequestDto stripeRequestDto) Parameters stripeRequestDto StripeRequestDto The Stripe request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllOrder(string?) Gets all orders for a user. Task<ResponseDto?> GetAllOrder(string? userId) Parameters userId string The user ID (optional). Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetOrder(int) Gets an order by its ID. Task<ResponseDto?> GetOrder(int orderId) Parameters orderId int The order ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateOrderStatus(int, string) Updates the status of an order. Task<ResponseDto?> UpdateOrderStatus(int orderId, string newStatus) Parameters orderId int The order ID. newStatus string The new status. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. ValidateStripeSession(int) Validates a Stripe session. Task<ResponseDto?> ValidateStripeSession(int orderHeaderId) Parameters orderHeaderId int The order header ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.IProductService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IProductService.html",
    "title": "Interface IProductService | smartmenu",
    "keywords": "Interface IProductService Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines methods for managing products. public interface IProductService Methods CreateProductsAsync(ProductDto) Creates a new product. Task<ResponseDto?> CreateProductsAsync(ProductDto productDto) Parameters productDto ProductDto The product data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteProductsAsync(int) Deletes a product by its ID. Task<ResponseDto?> DeleteProductsAsync(int id) Parameters id int The product ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllProductsAsync() Gets all products. Task<ResponseDto?> GetAllProductsAsync() Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetProductByIdAsync(int) Gets a product by its ID. Task<ResponseDto?> GetProductByIdAsync(int id) Parameters id int The product ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateProductsAsync(ProductDto) Updates an existing product. Task<ResponseDto?> UpdateProductsAsync(ProductDto productDto) Parameters productDto ProductDto The product data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ITokenProvider.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ITokenProvider.html",
    "title": "Interface ITokenProvider | smartmenu",
    "keywords": "Interface ITokenProvider Namespace SmartMenu.Web.Service.IService Assembly SmartMenu.Web.dll Defines methods for managing authentication tokens. public interface ITokenProvider Methods ClearToken() Clears the authentication token. void ClearToken() GetToken() Gets the authentication token. string? GetToken() Returns string The authentication token, or null if no token is set. SetToken(string) Sets the authentication token. void SetToken(string token) Parameters token string The authentication token."
  },
  "Web/SmartMenu.Web.Service.IService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.html",
    "title": "Namespace SmartMenu.Web.Service.IService | smartmenu",
    "keywords": "Namespace SmartMenu.Web.Service.IService Interfaces IAuthService Defines methods for authentication and user management services. IBaseService Defines a base service for sending HTTP requests. ICartService Defines methods for managing the shopping cart. ICategoryService Defines methods for managing categories. ICouponService Defines methods for managing coupons. IOrderService Defines methods for managing orders. IProductService Defines methods for managing products. ITokenProvider Defines methods for managing authentication tokens."
  },
  "Web/SmartMenu.Web.Service.OrderService.html": {
    "href": "Web/SmartMenu.Web.Service.OrderService.html",
    "title": "Class OrderService | smartmenu",
    "keywords": "Class OrderService Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides services related to orders. public class OrderService : IOrderService Inheritance object OrderService Implements IOrderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors OrderService(IBaseService) Initializes a new instance of the OrderService class. public OrderService(IBaseService baseService) Parameters baseService IBaseService The base service to be used for sending requests. Methods CreateOrder(CartDto) Creates a new order. public Task<ResponseDto?> CreateOrder(CartDto cartDto) Parameters cartDto CartDto The cart data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. CreateStripeSession(StripeRequestDto) Creates a new Stripe session. public Task<ResponseDto?> CreateStripeSession(StripeRequestDto stripeRequestDto) Parameters stripeRequestDto StripeRequestDto The Stripe request data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllOrder(string?) Gets all orders for a specific user. public Task<ResponseDto?> GetAllOrder(string? userId) Parameters userId string The user ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetOrder(int) Gets a specific order by ID. public Task<ResponseDto?> GetOrder(int orderId) Parameters orderId int The order ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateOrderStatus(int, string) Updates the status of an order. public Task<ResponseDto?> UpdateOrderStatus(int orderId, string newStatus) Parameters orderId int The order ID. newStatus string The new status of the order. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. ValidateStripeSession(int) Validates a Stripe session. public Task<ResponseDto?> ValidateStripeSession(int orderHeaderId) Parameters orderHeaderId int The order header ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.ProductService.html": {
    "href": "Web/SmartMenu.Web.Service.ProductService.html",
    "title": "Class ProductService | smartmenu",
    "keywords": "Class ProductService Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides services related to products. public class ProductService : IProductService Inheritance object ProductService Implements IProductService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors ProductService(IBaseService) Initializes a new instance of the ProductService class. public ProductService(IBaseService baseService) Parameters baseService IBaseService The base service to be used for sending requests. Methods CreateProductsAsync(ProductDto) Creates a new product. public Task<ResponseDto?> CreateProductsAsync(ProductDto productDto) Parameters productDto ProductDto The product data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. DeleteProductsAsync(int) Deletes a product by ID. public Task<ResponseDto?> DeleteProductsAsync(int id) Parameters id int The product ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetAllProductsAsync() Gets all products. public Task<ResponseDto?> GetAllProductsAsync() Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. GetProductByIdAsync(int) Gets a product by ID. public Task<ResponseDto?> GetProductByIdAsync(int id) Parameters id int The product ID. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. UpdateProductsAsync(ProductDto) Updates an existing product. public Task<ResponseDto?> UpdateProductsAsync(ProductDto productDto) Parameters productDto ProductDto The product data transfer object. Returns Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.TokenProvider.html": {
    "href": "Web/SmartMenu.Web.Service.TokenProvider.html",
    "title": "Class TokenProvider | smartmenu",
    "keywords": "Class TokenProvider Namespace SmartMenu.Web.Service Assembly SmartMenu.Web.dll Provides methods to manage tokens in the HTTP context. public class TokenProvider : ITokenProvider Inheritance object TokenProvider Implements ITokenProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TokenProvider(IHttpContextAccessor) Initializes a new instance of the TokenProvider class. public TokenProvider(IHttpContextAccessor contextAccessor) Parameters contextAccessor IHttpContextAccessor The HTTP context accessor. Methods ClearToken() Clears the token from the cookies. public void ClearToken() GetToken() Gets the token from the cookies. public string? GetToken() Returns string The token if it exists; otherwise, null. SetToken(string) Sets the token in the cookies. public void SetToken(string token) Parameters token string The token to set."
  },
  "Web/SmartMenu.Web.Service.html": {
    "href": "Web/SmartMenu.Web.Service.html",
    "title": "Namespace SmartMenu.Web.Service | smartmenu",
    "keywords": "Namespace SmartMenu.Web.Service Classes AuthService Provides authentication-related services. BaseService Provides base functionality for sending HTTP requests. CartService Provides services related to the shopping cart. CategoryService Provides services related to categories. CouponService Provides services related to coupons. OrderService Provides services related to orders. ProductService Provides services related to products. TokenProvider Provides methods to manage tokens in the HTTP context."
  },
  "Web/SmartMenu.Web.Utility.AllowedExtensionsAttribute.html": {
    "href": "Web/SmartMenu.Web.Utility.AllowedExtensionsAttribute.html",
    "title": "Class AllowedExtensionsAttribute | smartmenu",
    "keywords": "Class AllowedExtensionsAttribute Namespace SmartMenu.Web.Utility Assembly SmartMenu.Web.dll Specifies the allowed file extensions for a file upload. public class AllowedExtensionsAttribute : ValidationAttribute Inheritance object Attribute ValidationAttribute AllowedExtensionsAttribute Inherited Members ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.IsValid(object) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AllowedExtensionsAttribute(string[]) Initializes a new instance of the AllowedExtensionsAttribute class. public AllowedExtensionsAttribute(string[] extensions) Parameters extensions string[] The allowed file extensions. Methods IsValid(object?, ValidationContext) Validates the specified value with respect to the current validation attribute. protected override ValidationResult? IsValid(object? value, ValidationContext validationContext) Parameters value object The value to validate. validationContext ValidationContext The context information about the validation operation. Returns ValidationResult An instance of the ValidationResult class."
  },
  "Web/SmartMenu.Web.Utility.MaxFileSizeAttribute.html": {
    "href": "Web/SmartMenu.Web.Utility.MaxFileSizeAttribute.html",
    "title": "Class MaxFileSizeAttribute | smartmenu",
    "keywords": "Class MaxFileSizeAttribute Namespace SmartMenu.Web.Utility Assembly SmartMenu.Web.dll Specifies the maximum file size for a file upload. public class MaxFileSizeAttribute : ValidationAttribute Inheritance object Attribute ValidationAttribute MaxFileSizeAttribute Inherited Members ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.IsValid(object) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MaxFileSizeAttribute(int) Initializes a new instance of the MaxFileSizeAttribute class. public MaxFileSizeAttribute(int maxFileSize) Parameters maxFileSize int The maximum file size in megabytes. Methods IsValid(object?, ValidationContext) Validates the specified value with respect to the current validation attribute. protected override ValidationResult? IsValid(object? value, ValidationContext validationContext) Parameters value object The value to validate. validationContext ValidationContext The context information about the validation operation. Returns ValidationResult An instance of the ValidationResult class."
  },
  "Web/SmartMenu.Web.Utility.SD.ApiType.html": {
    "href": "Web/SmartMenu.Web.Utility.SD.ApiType.html",
    "title": "Enum SD.ApiType | smartmenu",
    "keywords": "Enum SD.ApiType Namespace SmartMenu.Web.Utility Assembly SmartMenu.Web.dll Defines the types of API requests. public enum SD.ApiType Fields DELETE = 3 Represents a DELETE request. GET = 0 Represents a GET request. POST = 1 Represents a POST request. PUT = 2 Represents a PUT request."
  },
  "Web/SmartMenu.Web.Utility.SD.ContentType.html": {
    "href": "Web/SmartMenu.Web.Utility.SD.ContentType.html",
    "title": "Enum SD.ContentType | smartmenu",
    "keywords": "Enum SD.ContentType Namespace SmartMenu.Web.Utility Assembly SmartMenu.Web.dll Defines the types of content. public enum SD.ContentType Fields Json = 0 Represents JSON content type. MultipartFormData = 1 Represents multipart/form-data content type."
  },
  "Web/SmartMenu.Web.Utility.SD.html": {
    "href": "Web/SmartMenu.Web.Utility.SD.html",
    "title": "Class SD | smartmenu",
    "keywords": "Class SD Namespace SmartMenu.Web.Utility Assembly SmartMenu.Web.dll Provides static details and constants used across the application. public class SD Inheritance object SD Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields RoleAdmin Represents the admin role. public const string RoleAdmin = \"ADMIN\" Field Value string RoleCustomer Represents the customer role. public const string RoleCustomer = \"CUSTOMER\" Field Value string Status_Approved Represents the approved status. public const string Status_Approved = \"Approved\" Field Value string Status_Cancelled Represents the cancelled status. public const string Status_Cancelled = \"Cancelled\" Field Value string Status_Completed Represents the completed status. public const string Status_Completed = \"Completed\" Field Value string Status_Pending Represents the pending status. public const string Status_Pending = \"Pending\" Field Value string Status_ReadyForPickup Represents the ready for pickup status. public const string Status_ReadyForPickup = \"ReadyForPickup\" Field Value string Status_Refunded Represents the refunded status. public const string Status_Refunded = \"Refunded\" Field Value string TokenCookie Represents the token cookie name. public const string TokenCookie = \"JWTToken\" Field Value string Properties AuthAPIBase Gets or sets the base URL for the Auth API. public static string AuthAPIBase { get; set; } Property Value string CouponAPIBase Gets or sets the base URL for the Coupon API. public static string CouponAPIBase { get; set; } Property Value string OrderAPIBase Gets or sets the base URL for the Order API. public static string OrderAPIBase { get; set; } Property Value string ProductAPIBase Gets or sets the base URL for the Product API. public static string ProductAPIBase { get; set; } Property Value string ShoppingCartAPIBase Gets or sets the base URL for the Shopping Cart API. public static string ShoppingCartAPIBase { get; set; } Property Value string"
  },
  "Web/SmartMenu.Web.Utility.html": {
    "href": "Web/SmartMenu.Web.Utility.html",
    "title": "Namespace SmartMenu.Web.Utility | smartmenu",
    "keywords": "Namespace SmartMenu.Web.Utility Classes AllowedExtensionsAttribute Specifies the allowed file extensions for a file upload. MaxFileSizeAttribute Specifies the maximum file size for a file upload. SD Provides static details and constants used across the application. Enums SD.ApiType Defines the types of API requests. SD.ContentType Defines the types of content."
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to SmartMenu Documentation \uD83D\uDE80 | smartmenu",
    "keywords": "Welcome to SmartMenu Documentation \uD83D\uDE80 Unlock the full potential of the SmartMenu platform with detailed API references. \uD83D\uDCDA About SmartMenu SmartMenu is an information system designed for managing restaurant online orders, viewing and editing dishes, handling order statuses, and providing customers with the ability to view dish details, as well as place orders. The system automates key restaurant processes, including order tracking, menu management, discounts, and integration with the Stripe payment system to ensure secure online transactions. By streamlining these operations, SmartMenu helps restaurants reduce operational costs, improve customer service quality, and enhance overall efficiency. \uD83C\uDF10 API Documentation Easily integrate and manage SmartMenu services with our comprehensive API references: \uD83D\uDD10 Auth API Handle user authentication and authorization to ensure secure access to your platform. \uD83C\uDF9F️ Coupon API Manage discount coupons effortlessly to enhance customer experience. \uD83D\uDCE6 Order API Create, update, and track orders efficiently with robust API methods. \uD83D\uDED2 Product API Organize and manage your products and categories with powerful tools. \uD83D\uDECD️ Shopping Cart API Deliver a seamless shopping cart experience, ensuring smooth transactions for your customers. SmartMenu Documentation: Simplifying your journey towards streamlined development!"
  }
}