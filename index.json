{
  "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.AuthAPIController.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.AuthAPIController.html",
    "title": "Class AuthAPIController | SmartMenu - Documentation",
    "keywords": "Class AuthAPIController Handles authentication-related operations. Inheritance object ControllerBase AuthAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Controllers Assembly: SmartMenu.Services.AuthAPI.dll Syntax [Route(\"api/auth\")] [ApiController] public class AuthAPIController : ControllerBase Constructors | Edit this page View Source AuthAPIController(IAuthService, IConfiguration) Initializes a new instance of the AuthAPIController class. Declaration public AuthAPIController(IAuthService authService, IConfiguration configuration) Parameters Type Name Description IAuthService authService The authentication service. IConfiguration configuration The configuration settings. Fields | Edit this page View Source _response Declaration protected ResponseDto _response Field Value Type Description ResponseDto Methods | Edit this page View Source AssignRole(RegistrationRequestDto) Assigns a role to a user. Declaration [HttpPost(\"AssignRole\")] public Task<IActionResult> AssignRole(RegistrationRequestDto model) Parameters Type Name Description RegistrationRequestDto model The registration request data. Returns Type Description Task<IActionResult> The result of the operation. | Edit this page View Source ChangePassword(ChangePasswordDto) Changes the password of the logged-in user. Declaration [Authorize] [HttpPost(\"ChangePassword\")] public Task<IActionResult> ChangePassword(ChangePasswordDto model) Parameters Type Name Description ChangePasswordDto model The password change data. Returns Type Description Task<IActionResult> The result of the operation. | Edit this page View Source DeleteAccount(string) Deletes the account of the logged-in user. Declaration [Authorize] [HttpDelete(\"DeleteAccount/{userId}\")] public Task<IActionResult> DeleteAccount(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<IActionResult> The result of the operation. | Edit this page View Source EditAccount(EditAccountDto) Edits the account details of the logged-in user. Declaration [Authorize] [HttpPut(\"EditAccount\")] public Task<IActionResult> EditAccount(EditAccountDto model) Parameters Type Name Description EditAccountDto model The account edit data. Returns Type Description Task<IActionResult> The result of the operation. | Edit this page View Source GetUserDetails(string) Gets the details of the logged-in user. Declaration [Authorize] [HttpGet(\"GetUserDetails/{userId}\")] public Task<IActionResult> GetUserDetails(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<IActionResult> The result of the operation. | Edit this page View Source Login(LoginRequestDto) Logs in a user. Declaration [HttpPost(\"login\")] public Task<IActionResult> Login(LoginRequestDto model) Parameters Type Name Description LoginRequestDto model The login request data. Returns Type Description Task<IActionResult> The result of the operation. | Edit this page View Source Register(RegistrationRequestDto) Registers a new user. Declaration [HttpPost(\"register\")] public Task<IActionResult> Register(RegistrationRequestDto model) Parameters Type Name Description RegistrationRequestDto model The registration request data. Returns Type Description Task<IActionResult> The result of the operation."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Controllers | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Controllers Classes AuthAPIController Handles authentication-related operations."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Data.AppDbContext.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | SmartMenu - Documentation",
    "keywords": "Class AppDbContext Represents the database context for the application, extending IdentityDbContext for user management. Inheritance object DbContext IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>> IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>> IdentityDbContext<ApplicationUser, IdentityRole, string> IdentityDbContext<ApplicationUser> AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.UserRoles IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.Roles IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.RoleClaims IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.Users IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserClaims IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserLogins IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.UserTokens IdentityUserContext<ApplicationUser, string, IdentityUserClaim<string>, IdentityUserLogin<string>, IdentityUserToken<string>>.SchemaVersion DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Data Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class AppDbContext : IdentityDbContext<ApplicationUser>, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Constructors | Edit this page View Source AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class with the specified options. Declaration public AppDbContext(DbContextOptions<AppDbContext> options) Parameters Type Name Description DbContextOptions<AppDbContext> options The options to be used by a DbContext. Properties | Edit this page View Source ApplicationUsers Gets or sets the DbSet for application users. Declaration public DbSet<ApplicationUser> ApplicationUsers { get; set; } Property Value Type Description DbSet<ApplicationUser> Methods | Edit this page View Source OnModelCreating(ModelBuilder) Configures the schema needed for the identity framework. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder used to construct the model for this context. Overrides IdentityDbContext<ApplicationUser, IdentityRole, string, IdentityUserClaim<string>, IdentityUserRole<string>, IdentityUserLogin<string>, IdentityRoleClaim<string>, IdentityUserToken<string>>.OnModelCreating(ModelBuilder) Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Data.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Data.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Data | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Data Classes AppDbContext Represents the database context for the application, extending IdentityDbContext for user management."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | SmartMenu - Documentation",
    "keywords": "Class WebApplicationBuilderExtensions Provides extension methods for configuring authentication in a web application. Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Extensions Assembly: SmartMenu.Services.AuthAPI.dll Syntax public static class WebApplicationBuilderExtensions Methods | Edit this page View Source AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the web application builder. Declaration public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters Type Name Description WebApplicationBuilder builder The web application builder. Returns Type Description WebApplicationBuilder The web application builder with authentication configured."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Extensions | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Extensions Classes WebApplicationBuilderExtensions Provides extension methods for configuring authentication in a web application."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.AddNameToAspNetUsers.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.AddNameToAspNetUsers.html",
    "title": "Class AddNameToAspNetUsers | SmartMenu - Documentation",
    "keywords": "Class AddNameToAspNetUsers A base class inherited by each EF Core migration. Inheritance object Migration AddNameToAspNetUsers Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Migrations Assembly: SmartMenu.Services.AuthAPI.dll Syntax [DbContext(typeof(AppDbContext))] [Migration(\"20241020034841_AddNameToAspNetUsers\")] public class AddNameToAspNetUsers : Migration Remarks See Database migrations for more information and examples. Methods | Edit this page View Source BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to use to build the model. Overrides Migration.BuildTargetModel(ModelBuilder) Remarks See Database migrations for more information and examples. | Edit this page View Source Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Down(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. | Edit this page View Source Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Up(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.addIDentityTables.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.addIDentityTables.html",
    "title": "Class addIDentityTables | SmartMenu - Documentation",
    "keywords": "Class addIDentityTables A base class inherited by each EF Core migration. Inheritance object Migration addIDentityTables Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Migrations Assembly: SmartMenu.Services.AuthAPI.dll Syntax [DbContext(typeof(AppDbContext))] [Migration(\"20241020034130_addIDentityTables\")] public class addIDentityTables : Migration Remarks See Database migrations for more information and examples. Methods | Edit this page View Source BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to use to build the model. Overrides Migration.BuildTargetModel(ModelBuilder) Remarks See Database migrations for more information and examples. | Edit this page View Source Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Down(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. | Edit this page View Source Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Up(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Migrations | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Migrations Classes AddNameToAspNetUsers A base class inherited by each EF Core migration. addIDentityTables A base class inherited by each EF Core migration."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.ApplicationUser.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.ApplicationUser.html",
    "title": "Class ApplicationUser | SmartMenu - Documentation",
    "keywords": "Class ApplicationUser Represents an application user with additional properties. Inheritance object IdentityUser<string> IdentityUser ApplicationUser Inherited Members IdentityUser<string>.ToString() IdentityUser<string>.Id IdentityUser<string>.UserName IdentityUser<string>.NormalizedUserName IdentityUser<string>.Email IdentityUser<string>.NormalizedEmail IdentityUser<string>.EmailConfirmed IdentityUser<string>.PasswordHash IdentityUser<string>.SecurityStamp IdentityUser<string>.ConcurrencyStamp IdentityUser<string>.PhoneNumber IdentityUser<string>.PhoneNumberConfirmed IdentityUser<string>.TwoFactorEnabled IdentityUser<string>.LockoutEnd IdentityUser<string>.LockoutEnabled IdentityUser<string>.AccessFailedCount object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SmartMenu.Services.AuthAPI.Models Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class ApplicationUser : IdentityUser Properties | Edit this page View Source Name Gets or sets the name of the user. Declaration public string Name { get; set; } Property Value Type Description string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ChangePasswordDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ChangePasswordDto.html",
    "title": "Class ChangePasswordDto | SmartMenu - Documentation",
    "keywords": "Class ChangePasswordDto Represents the data required to change a user's password. Inheritance object ChangePasswordDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models.Dto Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class ChangePasswordDto Properties | Edit this page View Source ConfirmNewPassword Gets or sets the confirmation of the new password. Declaration public string ConfirmNewPassword { get; set; } Property Value Type Description string | Edit this page View Source CurrentPassword Gets or sets the user's current password. Declaration public string CurrentPassword { get; set; } Property Value Type Description string | Edit this page View Source NewPassword Gets or sets the new password. Declaration public string NewPassword { get; set; } Property Value Type Description string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.EditAccountDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.EditAccountDto.html",
    "title": "Class EditAccountDto | SmartMenu - Documentation",
    "keywords": "Class EditAccountDto Represents the data required to edit a user's account information. Inheritance object EditAccountDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models.Dto Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class EditAccountDto Properties | Edit this page View Source NewEmail Gets or sets the new email address to update. Declaration public string? NewEmail { get; set; } Property Value Type Description string | Edit this page View Source NewName Gets or sets the new name of the user. Declaration public string? NewName { get; set; } Property Value Type Description string | Edit this page View Source NewPhoneNumber Gets or sets the new phone number of the user. Declaration public string? NewPhoneNumber { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the unique identifier of the user. Declaration public string UserId { get; set; } Property Value Type Description string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginRequestDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginRequestDto.html",
    "title": "Class LoginRequestDto | SmartMenu - Documentation",
    "keywords": "Class LoginRequestDto Represents the data required for a login request. Inheritance object LoginRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models.Dto Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class LoginRequestDto Properties | Edit this page View Source Password Gets or sets the password for the login request. Declaration public string Password { get; set; } Property Value Type Description string | Edit this page View Source UserName Gets or sets the username for the login request. Declaration public string UserName { get; set; } Property Value Type Description string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginResponseDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.LoginResponseDto.html",
    "title": "Class LoginResponseDto | SmartMenu - Documentation",
    "keywords": "Class LoginResponseDto Represents the response data for a login request. Inheritance object LoginResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models.Dto Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class LoginResponseDto Properties | Edit this page View Source Token Gets or sets the JWT token. Declaration public string Token { get; set; } Property Value Type Description string | Edit this page View Source User Gets or sets the user information. Declaration public UserDto User { get; set; } Property Value Type Description UserDto"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.RegistrationRequestDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.RegistrationRequestDto.html",
    "title": "Class RegistrationRequestDto | SmartMenu - Documentation",
    "keywords": "Class RegistrationRequestDto Represents the data required for a registration request. Inheritance object RegistrationRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models.Dto Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class RegistrationRequestDto Properties | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Password Gets or sets the password for the user. Declaration public string Password { get; set; } Property Value Type Description string | Edit this page View Source PhoneNumber Gets or sets the phone number of the user. Declaration public string PhoneNumber { get; set; } Property Value Type Description string | Edit this page View Source Role Gets or sets the role of the user. Declaration public string? Role { get; set; } Property Value Type Description string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ResponseDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | SmartMenu - Documentation",
    "keywords": "Class ResponseDto Represents a standard response data transfer object. Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models.Dto Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class ResponseDto Properties | Edit this page View Source IsSuccess Gets or sets a value indicating whether the response indicates success. Declaration public bool IsSuccess { get; set; } Property Value Type Description bool | Edit this page View Source Message Gets or sets the message associated with the response. Declaration public string Message { get; set; } Property Value Type Description string | Edit this page View Source Result Gets or sets the result of the response. Declaration public object? Result { get; set; } Property Value Type Description object"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.UserDto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.UserDto.html",
    "title": "Class UserDto | SmartMenu - Documentation",
    "keywords": "Class UserDto Represents a user data transfer object. Inheritance object UserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models.Dto Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class UserDto Properties | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string Email { get; set; } Property Value Type Description string | Edit this page View Source ID Gets or sets the unique identifier of the user. Declaration public string ID { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source PhoneNumber Gets or sets the phone number of the user. Declaration public string PhoneNumber { get; set; } Property Value Type Description string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Models.Dto | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Models.Dto Classes ChangePasswordDto Represents the data required to change a user's password. EditAccountDto Represents the data required to edit a user's account information. LoginRequestDto Represents the data required for a login request. LoginResponseDto Represents the response data for a login request. RegistrationRequestDto Represents the data required for a registration request. ResponseDto Represents a standard response data transfer object. UserDto Represents a user data transfer object."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.JwtOptions.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.JwtOptions.html",
    "title": "Class JwtOptions | SmartMenu - Documentation",
    "keywords": "Class JwtOptions Represents the options for JWT authentication. Inheritance object JwtOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Models Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class JwtOptions Properties | Edit this page View Source Audience Gets or sets the audience of the JWT. Declaration public string Audience { get; set; } Property Value Type Description string | Edit this page View Source Issuer Gets or sets the issuer of the JWT. Declaration public string Issuer { get; set; } Property Value Type Description string | Edit this page View Source Secret Gets or sets the secret key used for signing the JWT. Declaration public string Secret { get; set; } Property Value Type Description string"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Models.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Models.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Models | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Models Classes ApplicationUser Represents an application user with additional properties. JwtOptions Represents the options for JWT authentication."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.AuthService.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.AuthService.html",
    "title": "Class AuthService | SmartMenu - Documentation",
    "keywords": "Class AuthService Service for handling authentication-related operations. Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Service Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class AuthService : IAuthService Constructors | Edit this page View Source AuthService(AppDbContext, IJwtTokenGenerator, UserManager<ApplicationUser>, RoleManager<IdentityRole>) Initializes a new instance of the AuthService class. Declaration public AuthService(AppDbContext db, IJwtTokenGenerator jwtTokenGenerator, UserManager<ApplicationUser> userManager, RoleManager<IdentityRole> roleManager) Parameters Type Name Description AppDbContext db The database context. IJwtTokenGenerator jwtTokenGenerator The JWT token generator. UserManager<ApplicationUser> userManager The user manager. RoleManager<IdentityRole> roleManager The role manager. Methods | Edit this page View Source AssignRole(string, string) Assigns a role to a user. Declaration public Task<bool> AssignRole(string email, string roleName) Parameters Type Name Description string email The email of the user. string roleName The name of the role. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source ChangePassword(string, ChangePasswordDto) Changes a user's password. Declaration public Task<bool> ChangePassword(string userId, ChangePasswordDto changePasswordDto) Parameters Type Name Description string userId The user ID. ChangePasswordDto changePasswordDto The change password data transfer object. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source DeleteAccount(string) Deletes a user's account. Declaration public Task<bool> DeleteAccount(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source EditAccount(EditAccountDto) Edits a user's account information. Declaration public Task<bool> EditAccount(EditAccountDto editAccountDto) Parameters Type Name Description EditAccountDto editAccountDto The edit account data transfer object. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source GetUserDetailsAsync(string) Gets the details of a user. Declaration public Task<EditAccountDto?> GetUserDetailsAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<EditAccountDto> A task that represents the asynchronous operation. The task result contains the edit account data transfer object. | Edit this page View Source Login(LoginRequestDto) Logs in a user. Declaration public Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters Type Name Description LoginRequestDto loginRequestDto The login request data transfer object. Returns Type Description Task<LoginResponseDto> A task that represents the asynchronous operation. The task result contains the login response data transfer object. | Edit this page View Source Register(RegistrationRequestDto) Registers a new user. Declaration public Task<string> Register(RegistrationRequestDto registrationRequestDto) Parameters Type Name Description RegistrationRequestDto registrationRequestDto The registration request data transfer object. Returns Type Description Task<string> A task that represents the asynchronous operation. The task result contains a string indicating the result of the registration. Implements IAuthService"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IAuthService.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IAuthService.html",
    "title": "Interface IAuthService | SmartMenu - Documentation",
    "keywords": "Interface IAuthService Interface for authentication-related services. Namespace: SmartMenu.Services.AuthAPI.Service.IService Assembly: SmartMenu.Services.AuthAPI.dll Syntax public interface IAuthService Methods | Edit this page View Source AssignRole(string, string) Assigns a role to a user. Declaration Task<bool> AssignRole(string email, string roleName) Parameters Type Name Description string email The email of the user. string roleName The name of the role. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source ChangePassword(string, ChangePasswordDto) Changes a user's password. Declaration Task<bool> ChangePassword(string userId, ChangePasswordDto changePasswordDto) Parameters Type Name Description string userId The user ID. ChangePasswordDto changePasswordDto The change password data transfer object. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source DeleteAccount(string) Deletes a user's account. Declaration Task<bool> DeleteAccount(string email) Parameters Type Name Description string email The email of the user. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source EditAccount(EditAccountDto) Edits a user's account information. Declaration Task<bool> EditAccount(EditAccountDto editAccountDto) Parameters Type Name Description EditAccountDto editAccountDto The edit account data transfer object. Returns Type Description Task<bool> A task that represents the asynchronous operation. The task result contains a boolean indicating success. | Edit this page View Source GetUserDetailsAsync(string) Gets the details of a user. Declaration Task<EditAccountDto?> GetUserDetailsAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<EditAccountDto> A task that represents the asynchronous operation. The task result contains the edit account data transfer object. | Edit this page View Source Login(LoginRequestDto) Logs in a user. Declaration Task<LoginResponseDto> Login(LoginRequestDto loginRequestDto) Parameters Type Name Description LoginRequestDto loginRequestDto The login request data transfer object. Returns Type Description Task<LoginResponseDto> A task that represents the asynchronous operation. The task result contains the login response data transfer object. | Edit this page View Source Register(RegistrationRequestDto) Registers a new user. Declaration Task<string> Register(RegistrationRequestDto registrationRequestDto) Parameters Type Name Description RegistrationRequestDto registrationRequestDto The registration request data transfer object. Returns Type Description Task<string> A task that represents the asynchronous operation. The task result contains a string indicating the result of the registration."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IJwtTokenGenerator.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.IJwtTokenGenerator.html",
    "title": "Interface IJwtTokenGenerator | SmartMenu - Documentation",
    "keywords": "Interface IJwtTokenGenerator Interface for generating JWT tokens. Namespace: SmartMenu.Services.AuthAPI.Service.IService Assembly: SmartMenu.Services.AuthAPI.dll Syntax public interface IJwtTokenGenerator Methods | Edit this page View Source GenerateToken(ApplicationUser, IEnumerable<string>) Generates a JWT token for the specified user and roles. Declaration string GenerateToken(ApplicationUser applicationUser, IEnumerable<string> roles) Parameters Type Name Description ApplicationUser applicationUser The application user. IEnumerable<string> roles The roles of the user. Returns Type Description string The generated JWT token."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.IService.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Service.IService | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Service.IService Interfaces IAuthService Interface for authentication-related services. IJwtTokenGenerator Interface for generating JWT tokens."
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.JwtTokenGenerator.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.JwtTokenGenerator.html",
    "title": "Class JwtTokenGenerator | SmartMenu - Documentation",
    "keywords": "Class JwtTokenGenerator Service for generating JWT tokens. Inheritance object JwtTokenGenerator Implements IJwtTokenGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.AuthAPI.Service Assembly: SmartMenu.Services.AuthAPI.dll Syntax public class JwtTokenGenerator : IJwtTokenGenerator Constructors | Edit this page View Source JwtTokenGenerator(IOptions<JwtOptions>) Initializes a new instance of the JwtTokenGenerator class. Declaration public JwtTokenGenerator(IOptions<JwtOptions> jwtOptions) Parameters Type Name Description IOptions<JwtOptions> jwtOptions The JWT options. Methods | Edit this page View Source GenerateToken(ApplicationUser, IEnumerable<string>) Generates a JWT token for the specified user and roles. Declaration public string GenerateToken(ApplicationUser applicationUser, IEnumerable<string> roles) Parameters Type Name Description ApplicationUser applicationUser The application user. IEnumerable<string> roles The roles of the user. Returns Type Description string The generated JWT token. Implements IJwtTokenGenerator"
  },
  "AuthAPI/SmartMenu.Services.AuthAPI.Service.html": {
    "href": "AuthAPI/SmartMenu.Services.AuthAPI.Service.html",
    "title": "Namespace SmartMenu.Services.AuthAPI.Service | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.AuthAPI.Service Classes AuthService Service for handling authentication-related operations. JwtTokenGenerator Service for generating JWT tokens."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.CartAPIController.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.CartAPIController.html",
    "title": "Class CartAPIController | SmartMenu - Documentation",
    "keywords": "Class CartAPIController Provides endpoints for managing the shopping cart. Inheritance object ControllerBase CartAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Controllers Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax [Route(\"api/cart\")] [ApiController] public class CartAPIController : ControllerBase Constructors | Edit this page View Source CartAPIController(AppDbContext, IMapper, IProductService, ICouponService, IConfiguration) Initializes a new instance of the CartAPIController class. Declaration public CartAPIController(AppDbContext db, IMapper mapper, IProductService productService, ICouponService couponService, IConfiguration configuration) Parameters Type Name Description AppDbContext db The database context. IMapper mapper The AutoMapper instance. IProductService productService The product service. ICouponService couponService The coupon service. IConfiguration configuration The configuration instance. Methods | Edit this page View Source ApplyCoupon(CartDto) Applies a coupon to the cart. Declaration [HttpPost(\"ApplyCoupon\")] public Task<object> ApplyCoupon(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<object> A ResponseDto indicating the result of the operation. | Edit this page View Source CartUpsert(CartDto) Upserts the cart. Declaration [HttpPost(\"CartUpsert\")] public Task<ResponseDto> CartUpsert(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A ResponseDto indicating the result of the operation. | Edit this page View Source ClearCart(string) Clears the cart for a specific user. Declaration [HttpPost(\"ClearCart/{userId}\")] public Task<ResponseDto> ClearCart(string userId) Parameters Type Name Description string userId The user identifier. Returns Type Description Task<ResponseDto> A ResponseDto indicating the result of the operation. | Edit this page View Source DecreaseQuantity(int) Decreases the quantity of a cart item. Declaration [HttpPost(\"DecreaseQuantity/{cartDetailsId}\")] public Task<ResponseDto> DecreaseQuantity(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details identifier. Returns Type Description Task<ResponseDto> A ResponseDto indicating the result of the operation. | Edit this page View Source GetCart(string) Retrieves the cart for a specific user. Declaration [HttpGet(\"GetCart/{userId}\")] public Task<ResponseDto> GetCart(string userId) Parameters Type Name Description string userId The user identifier. Returns Type Description Task<ResponseDto> A ResponseDto containing the cart details. | Edit this page View Source IncreaseQuantity(int) Increases the quantity of a cart item. Declaration [HttpPost(\"IncreaseQuantity/{cartDetailsId}\")] public Task<ResponseDto> IncreaseQuantity(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details identifier. Returns Type Description Task<ResponseDto> A ResponseDto indicating the result of the operation. | Edit this page View Source RemoveCart(int) Removes a cart item. Declaration [HttpPost(\"RemoveCart\")] public Task<ResponseDto> RemoveCart(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details identifier. Returns Type Description Task<ResponseDto> A ResponseDto indicating the result of the operation."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Controllers | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Controllers Classes CartAPIController Provides endpoints for managing the shopping cart."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.AppDbContext.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | SmartMenu - Documentation",
    "keywords": "Class AppDbContext Represents the database context for the shopping cart API. Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Data Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Constructors | Edit this page View Source AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class with the specified options. Declaration public AppDbContext(DbContextOptions<AppDbContext> options) Parameters Type Name Description DbContextOptions<AppDbContext> options The options to be used by a DbContext. Properties | Edit this page View Source CartDetails Gets or sets the DbSet for cart details. Declaration public DbSet<CartDetails> CartDetails { get; set; } Property Value Type Description DbSet<CartDetails> | Edit this page View Source CartHeaders Gets or sets the DbSet for cart headers. Declaration public DbSet<CartHeader> CartHeaders { get; set; } Property Value Type Description DbSet<CartHeader> Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Data.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Data | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Data Classes AppDbContext Represents the database context for the shopping cart API."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | SmartMenu - Documentation",
    "keywords": "Class WebApplicationBuilderExtensions Provides extension methods for configuring the web application builder. Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Extensions Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public static class WebApplicationBuilderExtensions Methods | Edit this page View Source AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the web application builder. Declaration public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters Type Name Description WebApplicationBuilder builder The web application builder. Returns Type Description WebApplicationBuilder The web application builder with authentication configured."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Extensions | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Extensions Classes WebApplicationBuilderExtensions Provides extension methods for configuring the web application builder."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.MappingConfig.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.MappingConfig.html",
    "title": "Class MappingConfig | SmartMenu - Documentation",
    "keywords": "Class MappingConfig Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class MappingConfig Methods | Edit this page View Source RegisterMaps() Declaration public static MapperConfiguration RegisterMaps() Returns Type Description MapperConfiguration"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.AddShoppingCartTables.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.AddShoppingCartTables.html",
    "title": "Class AddShoppingCartTables | SmartMenu - Documentation",
    "keywords": "Class AddShoppingCartTables A base class inherited by each EF Core migration. Inheritance object Migration AddShoppingCartTables Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Migrations Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax [DbContext(typeof(AppDbContext))] [Migration(\"20241129173359_AddShoppingCartTables\")] public class AddShoppingCartTables : Migration Remarks See Database migrations for more information and examples. Methods | Edit this page View Source BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to use to build the model. Overrides Migration.BuildTargetModel(ModelBuilder) Remarks See Database migrations for more information and examples. | Edit this page View Source Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Down(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. | Edit this page View Source Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Up(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Migrations | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Migrations Classes AddShoppingCartTables A base class inherited by each EF Core migration."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartDetails.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartDetails.html",
    "title": "Class CartDetails | SmartMenu - Documentation",
    "keywords": "Class CartDetails Represents the details of a cart item. Inheritance object CartDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CartDetails Properties | Edit this page View Source CartDetailsId Gets or sets the unique identifier for the cart details. Declaration [Key] public int CartDetailsId { get; set; } Property Value Type Description int | Edit this page View Source CartHeader Gets or sets the cart header associated with these details. Declaration [ForeignKey(\"CartHeaderId\")] public CartHeader CartHeader { get; set; } Property Value Type Description CartHeader | Edit this page View Source CartHeaderId Gets or sets the unique identifier for the cart header. Declaration public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source Count Gets or sets the quantity of the product. Declaration public int Count { get; set; } Property Value Type Description int | Edit this page View Source Product Gets or sets the product details associated with these cart details. Declaration [NotMapped] public ProductDto Product { get; set; } Property Value Type Description ProductDto | Edit this page View Source ProductId Gets or sets the unique identifier for the product. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartHeader.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.CartHeader.html",
    "title": "Class CartHeader | SmartMenu - Documentation",
    "keywords": "Class CartHeader Represents the header information of a shopping cart. Inheritance object CartHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CartHeader Properties | Edit this page View Source CartHeaderId Gets or sets the unique identifier for the cart header. Declaration [Key] public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source CartTotal Gets or sets the total amount of the cart. Declaration [NotMapped] public double CartTotal { get; set; } Property Value Type Description double | Edit this page View Source CouponCode Gets or sets the coupon code applied to the cart. Declaration public string? CouponCode { get; set; } Property Value Type Description string | Edit this page View Source Discount Gets or sets the discount amount applied to the cart. Declaration [NotMapped] public double Discount { get; set; } Property Value Type Description double | Edit this page View Source UserId Gets or sets the unique identifier for the user. Declaration public string? UserId { get; set; } Property Value Type Description string"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Coupon.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Coupon.html",
    "title": "Class Coupon | SmartMenu - Documentation",
    "keywords": "Class Coupon Represents a discount coupon. Inheritance object Coupon Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class Coupon Properties | Edit this page View Source CouponCode Gets or sets the code for the coupon. Declaration [Required] public string CouponCode { get; set; } Property Value Type Description string | Edit this page View Source CouponId Gets or sets the unique identifier for the coupon. Declaration [Key] public int CouponId { get; set; } Property Value Type Description int | Edit this page View Source DiscountAmount Gets or sets the discount amount provided by the coupon. Declaration [Required] public double DiscountAmount { get; set; } Property Value Type Description double | Edit this page View Source MinAmount Gets or sets the minimum amount required to use the coupon. Declaration public int MinAmount { get; set; } Property Value Type Description int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDetailsDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDetailsDto.html",
    "title": "Class CartDetailsDto | SmartMenu - Documentation",
    "keywords": "Class CartDetailsDto Represents a data transfer object for cart details. Inheritance object CartDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CartDetailsDto Properties | Edit this page View Source CartDetailsId Gets or sets the cart details identifier. Declaration public int CartDetailsId { get; set; } Property Value Type Description int | Edit this page View Source CartHeader Gets or sets the cart header. Declaration public CartHeaderDto? CartHeader { get; set; } Property Value Type Description CartHeaderDto | Edit this page View Source CartHeaderId Gets or sets the cart header identifier. Declaration public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source Count Gets or sets the quantity of the product. Declaration public int Count { get; set; } Property Value Type Description int | Edit this page View Source Product Gets or sets the product details. Declaration public ProductDto? Product { get; set; } Property Value Type Description ProductDto | Edit this page View Source ProductId Gets or sets the product identifier. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartDto.html",
    "title": "Class CartDto | SmartMenu - Documentation",
    "keywords": "Class CartDto Represents a data transfer object for a shopping cart. Inheritance object CartDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CartDto Properties | Edit this page View Source CartDetails Gets or sets the cart details. Declaration public IEnumerable<CartDetailsDto>? CartDetails { get; set; } Property Value Type Description IEnumerable<CartDetailsDto> | Edit this page View Source CartHeader Gets or sets the cart header. Declaration public CartHeaderDto CartHeader { get; set; } Property Value Type Description CartHeaderDto"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartHeaderDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CartHeaderDto.html",
    "title": "Class CartHeaderDto | SmartMenu - Documentation",
    "keywords": "Class CartHeaderDto Represents a data transfer object for a cart header. Inheritance object CartHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CartHeaderDto Properties | Edit this page View Source CartHeaderId Gets or sets the cart header identifier. Declaration public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source CartTotal Gets or sets the total amount of the cart. Declaration public double CartTotal { get; set; } Property Value Type Description double | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string? CouponCode { get; set; } Property Value Type Description string | Edit this page View Source Discount Gets or sets the discount amount. Declaration public double Discount { get; set; } Property Value Type Description double | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string? Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source Phone Gets or sets the phone number of the user. Declaration public string? Phone { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the user identifier. Declaration public string? UserId { get; set; } Property Value Type Description string"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CategoryDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CategoryDto.html",
    "title": "Class CategoryDto | SmartMenu - Documentation",
    "keywords": "Class CategoryDto Represents a data transfer object for a category. Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CategoryDto Properties | Edit this page View Source CategoryId Gets or sets the category identifier. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Name Gets or sets the name of the category. Declaration public string Name { get; set; } Property Value Type Description string"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CouponDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.CouponDto.html",
    "title": "Class CouponDto | SmartMenu - Documentation",
    "keywords": "Class CouponDto Represents a data transfer object for a coupon. Inheritance object CouponDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CouponDto Properties | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string CouponCode { get; set; } Property Value Type Description string | Edit this page View Source CouponId Gets or sets the coupon identifier. Declaration public int CouponId { get; set; } Property Value Type Description int | Edit this page View Source DiscountAmount Gets or sets the discount amount. Declaration public double DiscountAmount { get; set; } Property Value Type Description double | Edit this page View Source MinAmount Gets or sets the minimum amount required to use the coupon. Declaration public int MinAmount { get; set; } Property Value Type Description int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ProductDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ProductDto.html",
    "title": "Class ProductDto | SmartMenu - Documentation",
    "keywords": "Class ProductDto Represents a data transfer object for a product. Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class ProductDto Properties | Edit this page View Source Category Gets or sets the category details. Declaration public CategoryDto? Category { get; set; } Property Value Type Description CategoryDto | Edit this page View Source CategoryId Gets or sets the category identifier. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Description Gets or sets the description of the product. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source ImageUrl Gets or sets the URL of the product image. Declaration public string ImageUrl { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the product. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Price Gets or sets the price of the product. Declaration public double Price { get; set; } Property Value Type Description double | Edit this page View Source ProductId Gets or sets the product identifier. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ResponseDto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | SmartMenu - Documentation",
    "keywords": "Class ResponseDto Represents a standard response data transfer object. Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Models.Dto Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class ResponseDto Properties | Edit this page View Source IsSuccess Gets or sets a value indicating whether the response is successful. Declaration public bool IsSuccess { get; set; } Property Value Type Description bool | Edit this page View Source Message Gets or sets the message associated with the response. Declaration public string Message { get; set; } Property Value Type Description string | Edit this page View Source Result Gets or sets the result of the response. Declaration public object? Result { get; set; } Property Value Type Description object"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Models.Dto Classes CartDetailsDto Represents a data transfer object for cart details. CartDto Represents a data transfer object for a shopping cart. CartHeaderDto Represents a data transfer object for a cart header. CategoryDto Represents a data transfer object for a category. CouponDto Represents a data transfer object for a coupon. ProductDto Represents a data transfer object for a product. ResponseDto Represents a standard response data transfer object."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Models.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Models | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Models Classes CartDetails Represents the details of a cart item. CartHeader Represents the header information of a shopping cart. Coupon Represents a discount coupon."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.CouponService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.CouponService.html",
    "title": "Class CouponService | SmartMenu - Documentation",
    "keywords": "Class CouponService Provides methods for interacting with the coupon service. Inheritance object CouponService Implements ICouponService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Service Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class CouponService : ICouponService Constructors | Edit this page View Source CouponService(IHttpClientFactory) Initializes a new instance of the CouponService class with the specified HTTP client factory. Declaration public CouponService(IHttpClientFactory clientFactory) Parameters Type Name Description IHttpClientFactory clientFactory The HTTP client factory to be used for making HTTP requests. Methods | Edit this page View Source GetCoupon(string) Asynchronously retrieves the coupon details by the specified coupon code. Declaration public Task<CouponDto> GetCoupon(string couponCode) Parameters Type Name Description string couponCode The code of the coupon to retrieve. Returns Type Description Task<CouponDto> A task that represents the asynchronous operation. The task result contains the coupon details. Implements ICouponService"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.ICouponService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.ICouponService.html",
    "title": "Interface ICouponService | SmartMenu - Documentation",
    "keywords": "Interface ICouponService Interface for coupon service operations. Namespace: SmartMenu.Services.ShoppingCartAPI.Service.IService Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public interface ICouponService Methods | Edit this page View Source GetCoupon(string) Gets the coupon details by coupon code. Declaration Task<CouponDto> GetCoupon(string couponCode) Parameters Type Name Description string couponCode The coupon code. Returns Type Description Task<CouponDto> A task that represents the asynchronous operation. The task result contains the coupon details."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.IProductService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.IProductService.html",
    "title": "Interface IProductService | SmartMenu - Documentation",
    "keywords": "Interface IProductService Interface for product service operations. Namespace: SmartMenu.Services.ShoppingCartAPI.Service.IService Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public interface IProductService Methods | Edit this page View Source GetProducts() Gets the list of products. Declaration Task<IEnumerable<ProductDto>> GetProducts() Returns Type Description Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.IService.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Service.IService | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Service.IService Interfaces ICouponService Interface for coupon service operations. IProductService Interface for product service operations."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.ProductService.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.ProductService.html",
    "title": "Class ProductService | SmartMenu - Documentation",
    "keywords": "Class ProductService Provides methods for handling product-related operations. Inheritance object ProductService Implements IProductService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Service Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class ProductService : IProductService Constructors | Edit this page View Source ProductService(IHttpClientFactory) Initializes a new instance of the ProductService class with the specified HTTP client factory. Declaration public ProductService(IHttpClientFactory clientFactory) Parameters Type Name Description IHttpClientFactory clientFactory The HTTP client factory to be used for making HTTP requests. Methods | Edit this page View Source GetProducts() Asynchronously retrieves the list of products. Declaration public Task<IEnumerable<ProductDto>> GetProducts() Returns Type Description Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products. Implements IProductService"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Service.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Service | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Service Classes CouponService Provides methods for interacting with the coupon service. ProductService Provides methods for handling product-related operations."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.BackendApiAuthenticationHttpClientHandler.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.BackendApiAuthenticationHttpClientHandler.html",
    "title": "Class BackendApiAuthenticationHttpClientHandler | SmartMenu - Documentation",
    "keywords": "Class BackendApiAuthenticationHttpClientHandler A delegating handler for adding authentication headers to HTTP requests. Inheritance object HttpMessageHandler DelegatingHandler BackendApiAuthenticationHttpClientHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ShoppingCartAPI.Utility Assembly: SmartMenu.Services.ShoppingCartAPI.dll Syntax public class BackendApiAuthenticationHttpClientHandler : DelegatingHandler, IDisposable Constructors | Edit this page View Source BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor) Initializes a new instance of the BackendApiAuthenticationHttpClientHandler class. Declaration public BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor accessor) Parameters Type Name Description IHttpContextAccessor accessor The HTTP context accessor. Methods | Edit this page View Source SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request with an authentication header. Declaration protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters Type Name Description HttpRequestMessage request The HTTP request message. CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task<HttpResponseMessage> The HTTP response message. Overrides DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken) Implements IDisposable"
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.Utility.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI.Utility | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI.Utility Classes BackendApiAuthenticationHttpClientHandler A delegating handler for adding authentication headers to HTTP requests."
  },
  "CartAPI/SmartMenu.Services.ShoppingCartAPI.html": {
    "href": "CartAPI/SmartMenu.Services.ShoppingCartAPI.html",
    "title": "Namespace SmartMenu.Services.ShoppingCartAPI | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ShoppingCartAPI Classes MappingConfig"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.CouponAPIController.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.CouponAPIController.html",
    "title": "Class CouponAPIController | SmartMenu - Documentation",
    "keywords": "Class CouponAPIController API controller for managing coupons. Inheritance object ControllerBase CouponAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI.Controllers Assembly: SmartMenu.Services.CouponAPI.dll Syntax [Route(\"api/coupon\")] [ApiController] [Authorize] public class CouponAPIController : ControllerBase Constructors | Edit this page View Source CouponAPIController(AppDbContext, IMapper) Initializes a new instance of the CouponAPIController class. Declaration public CouponAPIController(AppDbContext db, IMapper mapper) Parameters Type Name Description AppDbContext db The database context. IMapper mapper The AutoMapper instance. Methods | Edit this page View Source Delete(int) Deletes a coupon by its identifier. Declaration [HttpDelete] [Route(\"{id:int}\")] [Authorize(Roles = \"ADMIN\")] public ResponseDto Delete(int id) Parameters Type Name Description int id The coupon identifier. Returns Type Description ResponseDto A response indicating the result of the delete operation. | Edit this page View Source Get() Gets all coupons. Declaration [HttpGet] public ResponseDto Get() Returns Type Description ResponseDto A response containing the list of coupons. | Edit this page View Source Get(int) Gets a coupon by its identifier. Declaration [HttpGet] [Route(\"{id:int}\")] public ResponseDto Get(int id) Parameters Type Name Description int id The coupon identifier. Returns Type Description ResponseDto A response containing the coupon details. | Edit this page View Source GetByCode(string) Gets a coupon by its code. Declaration [HttpGet] [Route(\"GetByCode/{code}\")] public ResponseDto GetByCode(string code) Parameters Type Name Description string code The coupon code. Returns Type Description ResponseDto A response containing the coupon details. | Edit this page View Source Post(CouponDto) Creates a new coupon. Declaration [HttpPost] [Authorize(Roles = \"ADMIN\")] public ResponseDto Post(CouponDto couponDto) Parameters Type Name Description CouponDto couponDto The coupon data transfer object. Returns Type Description ResponseDto A response containing the created coupon details. | Edit this page View Source Put(CouponDto) Updates an existing coupon. Declaration [HttpPut] [Authorize(Roles = \"ADMIN\")] public ResponseDto Put(CouponDto couponDto) Parameters Type Name Description CouponDto couponDto The coupon data transfer object. Returns Type Description ResponseDto A response containing the updated coupon details."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Controllers | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Controllers Classes CouponAPIController API controller for managing coupons."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Data.AppDbContext.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | SmartMenu - Documentation",
    "keywords": "Class AppDbContext Represents the database context for the Coupon API. Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI.Data Assembly: SmartMenu.Services.CouponAPI.dll Syntax public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Constructors | Edit this page View Source AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class. Declaration public AppDbContext(DbContextOptions<AppDbContext> options) Parameters Type Name Description DbContextOptions<AppDbContext> options The options to be used by a DbContext. Properties | Edit this page View Source Coupons Gets or sets the coupons in the database. Declaration public DbSet<Coupon> Coupons { get; set; } Property Value Type Description DbSet<Coupon> Methods | Edit this page View Source OnModelCreating(ModelBuilder) Configures the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on the derived context. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder being used to construct the model for this context. Overrides DbContext.OnModelCreating(ModelBuilder) Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Data.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Data.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Data | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Data Classes AppDbContext Represents the database context for the Coupon API."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | SmartMenu - Documentation",
    "keywords": "Class WebApplicationBuilderExtensions Extension methods for configuring the WebApplicationBuilder. Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI.Extensions Assembly: SmartMenu.Services.CouponAPI.dll Syntax public static class WebApplicationBuilderExtensions Methods | Edit this page View Source AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the application. Declaration public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters Type Name Description WebApplicationBuilder builder The WebApplicationBuilder instance. Returns Type Description WebApplicationBuilder The WebApplicationBuilder instance with authentication configured."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Extensions | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Extensions Classes WebApplicationBuilderExtensions Extension methods for configuring the WebApplicationBuilder."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.MappingConfig.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.MappingConfig.html",
    "title": "Class MappingConfig | SmartMenu - Documentation",
    "keywords": "Class MappingConfig Provides configuration for AutoMapper mappings. Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI Assembly: SmartMenu.Services.CouponAPI.dll Syntax public class MappingConfig Methods | Edit this page View Source RegisterMaps() Registers the mappings between models and DTOs. Declaration public static MapperConfiguration RegisterMaps() Returns Type Description MapperConfiguration The AutoMapper configuration."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.addCouponToDb.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.addCouponToDb.html",
    "title": "Class addCouponToDb | SmartMenu - Documentation",
    "keywords": "Class addCouponToDb A base class inherited by each EF Core migration. Inheritance object Migration addCouponToDb Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI.Migrations Assembly: SmartMenu.Services.CouponAPI.dll Syntax [DbContext(typeof(AppDbContext))] [Migration(\"20241015212120_addCouponToDb\")] public class addCouponToDb : Migration Remarks See Database migrations for more information and examples. Methods | Edit this page View Source BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to use to build the model. Overrides Migration.BuildTargetModel(ModelBuilder) Remarks See Database migrations for more information and examples. | Edit this page View Source Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Down(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. | Edit this page View Source Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Up(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Migrations | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Migrations Classes addCouponToDb A base class inherited by each EF Core migration."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Coupon.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Coupon.html",
    "title": "Class Coupon | SmartMenu - Documentation",
    "keywords": "Class Coupon Represents a discount coupon. Inheritance object Coupon Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI.Models Assembly: SmartMenu.Services.CouponAPI.dll Syntax public class Coupon Properties | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration [Required] public string CouponCode { get; set; } Property Value Type Description string | Edit this page View Source CouponId Gets or sets the coupon identifier. Declaration [Key] public int CouponId { get; set; } Property Value Type Description int | Edit this page View Source DiscountAmount Gets or sets the discount amount. Declaration [Required] public double DiscountAmount { get; set; } Property Value Type Description double | Edit this page View Source MinAmount Gets or sets the minimum amount required to use the coupon. Declaration public int MinAmount { get; set; } Property Value Type Description int"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.CouponDto.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.CouponDto.html",
    "title": "Class CouponDto | SmartMenu - Documentation",
    "keywords": "Class CouponDto Data transfer object for coupon details. Inheritance object CouponDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI.Models.Dto Assembly: SmartMenu.Services.CouponAPI.dll Syntax public class CouponDto Properties | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string CouponCode { get; set; } Property Value Type Description string | Edit this page View Source CouponId Gets or sets the coupon identifier. Declaration public int CouponId { get; set; } Property Value Type Description int | Edit this page View Source DiscountAmount Gets or sets the discount amount. Declaration public double DiscountAmount { get; set; } Property Value Type Description double | Edit this page View Source MinAmount Gets or sets the minimum amount required to use the coupon. Declaration public int MinAmount { get; set; } Property Value Type Description int"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.ResponseDto.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | SmartMenu - Documentation",
    "keywords": "Class ResponseDto Data transfer object for API responses. Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.CouponAPI.Models.Dto Assembly: SmartMenu.Services.CouponAPI.dll Syntax public class ResponseDto Properties | Edit this page View Source IsSuccess Gets or sets a value indicating whether the API call was successful. Declaration public bool IsSuccess { get; set; } Property Value Type Description bool | Edit this page View Source Message Gets or sets the message associated with the API call. Declaration public string Message { get; set; } Property Value Type Description string | Edit this page View Source Result Gets or sets the result of the API call. Declaration public object? Result { get; set; } Property Value Type Description object"
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Models.Dto | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Models.Dto Classes CouponDto Data transfer object for coupon details. ResponseDto Data transfer object for API responses."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.Models.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.Models.html",
    "title": "Namespace SmartMenu.Services.CouponAPI.Models | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.CouponAPI.Models Classes Coupon Represents a discount coupon."
  },
  "CouponAPI/SmartMenu.Services.CouponAPI.html": {
    "href": "CouponAPI/SmartMenu.Services.CouponAPI.html",
    "title": "Namespace SmartMenu.Services.CouponAPI | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.CouponAPI Classes MappingConfig Provides configuration for AutoMapper mappings."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.OrderAPIController.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.OrderAPIController.html",
    "title": "Class OrderAPIController | SmartMenu - Documentation",
    "keywords": "Class OrderAPIController Provides endpoints for managing orders. Inheritance object ControllerBase OrderAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Controllers Assembly: SmartMenu.Services.OrderAPI.dll Syntax [Route(\"api/order\")] [ApiController] public class OrderAPIController : ControllerBase Constructors | Edit this page View Source OrderAPIController(AppDbContext, IProductService, IMapper, IConfiguration) Initializes a new instance of the OrderAPIController class. Declaration public OrderAPIController(AppDbContext db, IProductService productService, IMapper mapper, IConfiguration configuration) Parameters Type Name Description AppDbContext db The database context. IProductService productService The product service. IMapper mapper The mapper. IConfiguration configuration The configuration settings. Fields | Edit this page View Source _response Declaration protected ResponseDto _response Field Value Type Description ResponseDto Methods | Edit this page View Source CreateOrder(CartDto) Creates a new order. Declaration [Authorize] [HttpPost(\"CreateOrder\")] public Task<ResponseDto> CreateOrder(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> The response containing the created order details. | Edit this page View Source CreateStripeSession(StripeRequestDto) Creates a Stripe session for payment. Declaration [Authorize] [HttpPost(\"CreateStripeSession\")] public Task<ResponseDto> CreateStripeSession(StripeRequestDto stripeRequestDto) Parameters Type Name Description StripeRequestDto stripeRequestDto The Stripe request data transfer object. Returns Type Description Task<ResponseDto> The response containing the Stripe session details. | Edit this page View Source Get(int) Retrieves the order by ID. Declaration [Authorize] [HttpGet(\"GetOrder/{id:int}\")] public ResponseDto? Get(int id) Parameters Type Name Description int id The order ID. Returns Type Description ResponseDto The response containing the order details. | Edit this page View Source Get(string?) Retrieves the orders for the specified user. Declaration [Authorize] [HttpGet(\"GetOrders\")] public ResponseDto? Get(string? userId = \"\") Parameters Type Name Description string userId The user ID. Returns Type Description ResponseDto The response containing the list of orders. | Edit this page View Source UpdateOrderStatus(int, string) Updates the status of an order. Declaration [Authorize] [HttpPost(\"UpdateOrderStatus/{orderId:int}\")] public Task<ResponseDto> UpdateOrderStatus(int orderId, string newStatus) Parameters Type Name Description int orderId The order ID. string newStatus The new status. Returns Type Description Task<ResponseDto> The response containing the update result. | Edit this page View Source ValidateStripeSession(int) Validates the Stripe session for payment. Declaration [Authorize] [HttpPost(\"ValidateStripeSession\")] public Task<ResponseDto> ValidateStripeSession(int orderHeaderId) Parameters Type Name Description int orderHeaderId The order header ID. Returns Type Description Task<ResponseDto> The response containing the validation result."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Controllers | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Controllers Classes OrderAPIController Provides endpoints for managing orders."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Data.AppDbContext.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | SmartMenu - Documentation",
    "keywords": "Class AppDbContext Represents the database context for the Order API. Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.OnModelCreating(ModelBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Data Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Constructors | Edit this page View Source AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class with the specified options. Declaration public AppDbContext(DbContextOptions<AppDbContext> options) Parameters Type Name Description DbContextOptions<AppDbContext> options The options to be used by a DbContext. Properties | Edit this page View Source OrderDetails Gets or sets the DbSet for order details. Declaration public DbSet<OrderDetails> OrderDetails { get; set; } Property Value Type Description DbSet<OrderDetails> | Edit this page View Source OrderHeaders Gets or sets the DbSet for order headers. Declaration public DbSet<OrderHeader> OrderHeaders { get; set; } Property Value Type Description DbSet<OrderHeader> Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Data.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Data.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Data | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Data Classes AppDbContext Represents the database context for the Order API."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | SmartMenu - Documentation",
    "keywords": "Class WebApplicationBuilderExtensions Provides extension methods for configuring the web application builder. Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Extensions Assembly: SmartMenu.Services.OrderAPI.dll Syntax public static class WebApplicationBuilderExtensions Methods | Edit this page View Source AddAppAuthetication(WebApplicationBuilder) Adds JWT authentication to the web application builder. Declaration public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters Type Name Description WebApplicationBuilder builder The web application builder. Returns Type Description WebApplicationBuilder The web application builder with authentication configured."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Extensions | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Extensions Classes WebApplicationBuilderExtensions Provides extension methods for configuring the web application builder."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.MappingConfig.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.MappingConfig.html",
    "title": "Class MappingConfig | SmartMenu - Documentation",
    "keywords": "Class MappingConfig Configuration class for setting up AutoMapper mappings. Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class MappingConfig Methods | Edit this page View Source RegisterMaps() Registers the mappings for AutoMapper. Declaration public static MapperConfiguration RegisterMaps() Returns Type Description MapperConfiguration The AutoMapper configuration."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.AddOrderTables.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.AddOrderTables.html",
    "title": "Class AddOrderTables | SmartMenu - Documentation",
    "keywords": "Class AddOrderTables A base class inherited by each EF Core migration. Inheritance object Migration AddOrderTables Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Migrations Assembly: SmartMenu.Services.OrderAPI.dll Syntax [DbContext(typeof(AppDbContext))] [Migration(\"20241129180848_AddOrderTables\")] public class AddOrderTables : Migration Remarks See Database migrations for more information and examples. Methods | Edit this page View Source BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to use to build the model. Overrides Migration.BuildTargetModel(ModelBuilder) Remarks See Database migrations for more information and examples. | Edit this page View Source Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Down(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. | Edit this page View Source Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Up(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Migrations | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Migrations Classes AddOrderTables A base class inherited by each EF Core migration."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDetailsDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDetailsDto.html",
    "title": "Class CartDetailsDto | SmartMenu - Documentation",
    "keywords": "Class CartDetailsDto Represents the details of a cart. Inheritance object CartDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class CartDetailsDto Properties | Edit this page View Source CartDetailsId Gets or sets the cart details ID. Declaration public int CartDetailsId { get; set; } Property Value Type Description int | Edit this page View Source CartHeader Gets or sets the cart header. Declaration public CartHeaderDto? CartHeader { get; set; } Property Value Type Description CartHeaderDto | Edit this page View Source CartHeaderId Gets or sets the cart header ID. Declaration public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source Count Gets or sets the count of products. Declaration public int Count { get; set; } Property Value Type Description int | Edit this page View Source Product Gets or sets the product. Declaration public ProductDto? Product { get; set; } Property Value Type Description ProductDto | Edit this page View Source ProductId Gets or sets the product ID. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartDto.html",
    "title": "Class CartDto | SmartMenu - Documentation",
    "keywords": "Class CartDto Represents a shopping cart. Inheritance object CartDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class CartDto Properties | Edit this page View Source CartDetails Gets or sets the cart details. Declaration public IEnumerable<CartDetailsDto>? CartDetails { get; set; } Property Value Type Description IEnumerable<CartDetailsDto> | Edit this page View Source CartHeader Gets or sets the cart header. Declaration public CartHeaderDto CartHeader { get; set; } Property Value Type Description CartHeaderDto"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartHeaderDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CartHeaderDto.html",
    "title": "Class CartHeaderDto | SmartMenu - Documentation",
    "keywords": "Class CartHeaderDto Represents the header of a shopping cart. Inheritance object CartHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class CartHeaderDto Properties | Edit this page View Source CartHeaderId Gets or sets the cart header ID. Declaration public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source CartTotal Gets or sets the total amount of the cart. Declaration public double CartTotal { get; set; } Property Value Type Description double | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string? CouponCode { get; set; } Property Value Type Description string | Edit this page View Source Discount Gets or sets the discount amount. Declaration public double Discount { get; set; } Property Value Type Description double | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string? Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source Phone Gets or sets the phone number of the user. Declaration public string? Phone { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the user ID. Declaration public string? UserId { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CategoryDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.CategoryDto.html",
    "title": "Class CategoryDto | SmartMenu - Documentation",
    "keywords": "Class CategoryDto Represents a category. Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class CategoryDto Properties | Edit this page View Source CategoryId Gets or sets the category ID. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Name Gets or sets the name of the category. Declaration public string Name { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderDetailsDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderDetailsDto.html",
    "title": "Class OrderDetailsDto | SmartMenu - Documentation",
    "keywords": "Class OrderDetailsDto Represents the details of an order. Inheritance object OrderDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class OrderDetailsDto Properties | Edit this page View Source Count Gets or sets the count of products. Declaration public int Count { get; set; } Property Value Type Description int | Edit this page View Source OrderDetailsId Gets or sets the order details ID. Declaration public int OrderDetailsId { get; set; } Property Value Type Description int | Edit this page View Source OrderHeaderId Gets or sets the order header ID. Declaration public int OrderHeaderId { get; set; } Property Value Type Description int | Edit this page View Source Price Gets or sets the price of the product. Declaration public double Price { get; set; } Property Value Type Description double | Edit this page View Source Product Gets or sets the product. Declaration public ProductDto? Product { get; set; } Property Value Type Description ProductDto | Edit this page View Source ProductId Gets or sets the product ID. Declaration public int ProductId { get; set; } Property Value Type Description int | Edit this page View Source ProductName Gets or sets the name of the product. Declaration public string ProductName { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderHeaderDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.OrderHeaderDto.html",
    "title": "Class OrderHeaderDto | SmartMenu - Documentation",
    "keywords": "Class OrderHeaderDto Represents the header of an order. Inheritance object OrderHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class OrderHeaderDto Properties | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string? CouponCode { get; set; } Property Value Type Description string | Edit this page View Source Discount Gets or sets the discount amount. Declaration public double Discount { get; set; } Property Value Type Description double | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string? Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source OrderDetails Gets or sets the order details. Declaration public IEnumerable<OrderDetailsDto> OrderDetails { get; set; } Property Value Type Description IEnumerable<OrderDetailsDto> | Edit this page View Source OrderHeaderId Gets or sets the order header ID. Declaration public int OrderHeaderId { get; set; } Property Value Type Description int | Edit this page View Source OrderTime Gets or sets the time of the order. Declaration public DateTime OrderTime { get; set; } Property Value Type Description DateTime | Edit this page View Source OrderTotal Gets or sets the total amount of the order. Declaration public double OrderTotal { get; set; } Property Value Type Description double | Edit this page View Source PaymentIntentId Gets or sets the payment intent ID. Declaration public string? PaymentIntentId { get; set; } Property Value Type Description string | Edit this page View Source Phone Gets or sets the phone number of the user. Declaration public string? Phone { get; set; } Property Value Type Description string | Edit this page View Source Status Gets or sets the status of the order. Declaration public string? Status { get; set; } Property Value Type Description string | Edit this page View Source StripeSessionId Gets or sets the Stripe session ID. Declaration public string? StripeSessionId { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the user ID. Declaration public string? UserId { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ProductDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ProductDto.html",
    "title": "Class ProductDto | SmartMenu - Documentation",
    "keywords": "Class ProductDto Represents a product. Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class ProductDto Properties | Edit this page View Source Category Gets or sets the category of the product. Declaration public CategoryDto? Category { get; set; } Property Value Type Description CategoryDto | Edit this page View Source CategoryId Gets or sets the category ID. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Description Gets or sets the description of the product. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source ImageUrl Gets or sets the image URL of the product. Declaration public string ImageUrl { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the product. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Price Gets or sets the price of the product. Declaration public double Price { get; set; } Property Value Type Description double | Edit this page View Source ProductId Gets or sets the product ID. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ResponseDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | SmartMenu - Documentation",
    "keywords": "Class ResponseDto Represents a response with a result, success status, and message. Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class ResponseDto Properties | Edit this page View Source IsSuccess Gets or sets a value indicating whether the response is successful. Declaration public bool IsSuccess { get; set; } Property Value Type Description bool | Edit this page View Source Message Gets or sets the message of the response. Declaration public string Message { get; set; } Property Value Type Description string | Edit this page View Source Result Gets or sets the result of the response. Declaration public object? Result { get; set; } Property Value Type Description object"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.RewardsDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.RewardsDto.html",
    "title": "Class RewardsDto | SmartMenu - Documentation",
    "keywords": "Class RewardsDto Represents rewards information for a user. Inheritance object RewardsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class RewardsDto Properties | Edit this page View Source OrderId Gets or sets the order ID. Declaration public int OrderId { get; set; } Property Value Type Description int | Edit this page View Source RewardsActivity Gets or sets the rewards activity. Declaration public int RewardsActivity { get; set; } Property Value Type Description int | Edit this page View Source UserId Gets or sets the user ID. Declaration public string UserId { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.StripeRequestDto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.StripeRequestDto.html",
    "title": "Class StripeRequestDto | SmartMenu - Documentation",
    "keywords": "Class StripeRequestDto Represents a Stripe request. Inheritance object StripeRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models.Dto Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class StripeRequestDto Properties | Edit this page View Source ApprovedUrl Gets or sets the approved URL. Declaration public string ApprovedUrl { get; set; } Property Value Type Description string | Edit this page View Source CancelUrl Gets or sets the cancel URL. Declaration public string CancelUrl { get; set; } Property Value Type Description string | Edit this page View Source OrderHeader Gets or sets the order header. Declaration public OrderHeaderDto OrderHeader { get; set; } Property Value Type Description OrderHeaderDto | Edit this page View Source StripeSessionId Gets or sets the Stripe session ID. Declaration public string? StripeSessionId { get; set; } Property Value Type Description string | Edit this page View Source StripeSessionUrl Gets or sets the Stripe session URL. Declaration public string? StripeSessionUrl { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Models.Dto | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Models.Dto Classes CartDetailsDto Represents the details of a cart. CartDto Represents a shopping cart. CartHeaderDto Represents the header of a shopping cart. CategoryDto Represents a category. OrderDetailsDto Represents the details of an order. OrderHeaderDto Represents the header of an order. ProductDto Represents a product. ResponseDto Represents a response with a result, success status, and message. RewardsDto Represents rewards information for a user. StripeRequestDto Represents a Stripe request."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderDetails.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderDetails.html",
    "title": "Class OrderDetails | SmartMenu - Documentation",
    "keywords": "Class OrderDetails Represents the details of an order. Inheritance object OrderDetails Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class OrderDetails Properties | Edit this page View Source Count Gets or sets the quantity of the product. Declaration public int Count { get; set; } Property Value Type Description int | Edit this page View Source OrderDetailsId Gets or sets the unique identifier for the order details. Declaration [Key] public int OrderDetailsId { get; set; } Property Value Type Description int | Edit this page View Source OrderHeader Gets or sets the order header associated with these details. Declaration [ForeignKey(\"OrderHeaderId\")] public OrderHeader? OrderHeader { get; set; } Property Value Type Description OrderHeader | Edit this page View Source OrderHeaderId Gets or sets the unique identifier for the order header. Declaration public int OrderHeaderId { get; set; } Property Value Type Description int | Edit this page View Source Price Gets or sets the price of the product. Declaration public double Price { get; set; } Property Value Type Description double | Edit this page View Source Product Gets or sets the product associated with these details. Declaration [NotMapped] public ProductDto? Product { get; set; } Property Value Type Description ProductDto | Edit this page View Source ProductId Gets or sets the unique identifier for the product. Declaration public int ProductId { get; set; } Property Value Type Description int | Edit this page View Source ProductName Gets or sets the name of the product. Declaration public string ProductName { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderHeader.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.OrderHeader.html",
    "title": "Class OrderHeader | SmartMenu - Documentation",
    "keywords": "Class OrderHeader Represents the header of an order. Inheritance object OrderHeader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Models Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class OrderHeader Properties | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string? CouponCode { get; set; } Property Value Type Description string | Edit this page View Source Discount Gets or sets the discount amount. Declaration public double Discount { get; set; } Property Value Type Description double | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string? Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source OrderDetails Gets or sets the order details. Declaration public IEnumerable<OrderDetails> OrderDetails { get; set; } Property Value Type Description IEnumerable<OrderDetails> | Edit this page View Source OrderHeaderId Gets or sets the order header ID. Declaration [Key] public int OrderHeaderId { get; set; } Property Value Type Description int | Edit this page View Source OrderTime Gets or sets the time of the order. Declaration public DateTime OrderTime { get; set; } Property Value Type Description DateTime | Edit this page View Source OrderTotal Gets or sets the total amount of the order. Declaration public double OrderTotal { get; set; } Property Value Type Description double | Edit this page View Source PaymentIntentId Gets or sets the payment intent ID. Declaration public string? PaymentIntentId { get; set; } Property Value Type Description string | Edit this page View Source Phone Gets or sets the phone number of the user. Declaration public string? Phone { get; set; } Property Value Type Description string | Edit this page View Source Status Gets or sets the status of the order. Declaration public string? Status { get; set; } Property Value Type Description string | Edit this page View Source StripeSessionId Gets or sets the Stripe session ID. Declaration public string? StripeSessionId { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the user ID. Declaration public string? UserId { get; set; } Property Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Models.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Models.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Models | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Models Classes OrderDetails Represents the details of an order. OrderHeader Represents the header of an order."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.IProductService.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.IProductService.html",
    "title": "Interface IProductService | SmartMenu - Documentation",
    "keywords": "Interface IProductService Interface for product service operations. Namespace: SmartMenu.Services.OrderAPI.Service.IService Assembly: SmartMenu.Services.OrderAPI.dll Syntax public interface IProductService Methods | Edit this page View Source GetProducts() Gets the list of products. Declaration Task<IEnumerable<ProductDto>> GetProducts() Returns Type Description Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.IService.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Service.IService | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Service.IService Interfaces IProductService Interface for product service operations."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.ProductService.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.ProductService.html",
    "title": "Class ProductService | SmartMenu - Documentation",
    "keywords": "Class ProductService Service for handling product-related operations. Inheritance object ProductService Implements IProductService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Service Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class ProductService : IProductService Constructors | Edit this page View Source ProductService(IHttpClientFactory) Initializes a new instance of the ProductService class. Declaration public ProductService(IHttpClientFactory clientFactory) Parameters Type Name Description IHttpClientFactory clientFactory The HTTP client factory. Methods | Edit this page View Source GetProducts() Gets the list of products. Declaration public Task<IEnumerable<ProductDto>> GetProducts() Returns Type Description Task<IEnumerable<ProductDto>> A task that represents the asynchronous operation. The task result contains the list of products. Implements IProductService"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Service.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Service.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Service | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Service Classes ProductService Service for handling product-related operations."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Utility.BackendApiAuthenticationHttpClientHandler.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Utility.BackendApiAuthenticationHttpClientHandler.html",
    "title": "Class BackendApiAuthenticationHttpClientHandler | SmartMenu - Documentation",
    "keywords": "Class BackendApiAuthenticationHttpClientHandler A delegating handler that adds authentication headers to HTTP requests. Inheritance object HttpMessageHandler DelegatingHandler BackendApiAuthenticationHttpClientHandler Implements IDisposable Inherited Members DelegatingHandler.Dispose(bool) DelegatingHandler.Send(HttpRequestMessage, CancellationToken) DelegatingHandler.InnerHandler HttpMessageHandler.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Utility Assembly: SmartMenu.Services.OrderAPI.dll Syntax public class BackendApiAuthenticationHttpClientHandler : DelegatingHandler, IDisposable Constructors | Edit this page View Source BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor) Initializes a new instance of the BackendApiAuthenticationHttpClientHandler class. Declaration public BackendApiAuthenticationHttpClientHandler(IHttpContextAccessor accessor) Parameters Type Name Description IHttpContextAccessor accessor The HTTP context accessor. Methods | Edit this page View Source SendAsync(HttpRequestMessage, CancellationToken) Sends an HTTP request with an authentication header. Declaration protected override Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) Parameters Type Name Description HttpRequestMessage request The HTTP request message. CancellationToken cancellationToken A cancellation token that can be used by other objects or threads to receive notice of cancellation. Returns Type Description Task<HttpResponseMessage> The HTTP response message. Overrides DelegatingHandler.SendAsync(HttpRequestMessage, CancellationToken) Implements IDisposable"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Utility.SD.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Utility.SD.html",
    "title": "Class SD | SmartMenu - Documentation",
    "keywords": "Class SD Static class containing constants for order statuses and user roles. Inheritance object SD Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.OrderAPI.Utility Assembly: SmartMenu.Services.OrderAPI.dll Syntax public static class SD Fields | Edit this page View Source RoleAdmin Role indicating the user is an admin. Declaration public const string RoleAdmin = \"ADMIN\" Field Value Type Description string | Edit this page View Source RoleCustomer Role indicating the user is a customer. Declaration public const string RoleCustomer = \"CUSTOMER\" Field Value Type Description string | Edit this page View Source Status_Approved Status indicating the order is approved. Declaration public const string Status_Approved = \"Approved\" Field Value Type Description string | Edit this page View Source Status_Cancelled Status indicating the order is cancelled. Declaration public const string Status_Cancelled = \"Cancelled\" Field Value Type Description string | Edit this page View Source Status_Completed Status indicating the order is completed. Declaration public const string Status_Completed = \"Completed\" Field Value Type Description string | Edit this page View Source Status_Pending Status indicating the order is pending. Declaration public const string Status_Pending = \"Pending\" Field Value Type Description string | Edit this page View Source Status_ReadyForPickup Status indicating the order is ready for pickup. Declaration public const string Status_ReadyForPickup = \"ReadyForPickup\" Field Value Type Description string | Edit this page View Source Status_Refunded Status indicating the order is refunded. Declaration public const string Status_Refunded = \"Refunded\" Field Value Type Description string"
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.Utility.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.Utility.html",
    "title": "Namespace SmartMenu.Services.OrderAPI.Utility | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI.Utility Classes BackendApiAuthenticationHttpClientHandler A delegating handler that adds authentication headers to HTTP requests. SD Static class containing constants for order statuses and user roles."
  },
  "OrderAPI/SmartMenu.Services.OrderAPI.html": {
    "href": "OrderAPI/SmartMenu.Services.OrderAPI.html",
    "title": "Namespace SmartMenu.Services.OrderAPI | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.OrderAPI Classes MappingConfig Configuration class for setting up AutoMapper mappings."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.CategoryAPIController.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.CategoryAPIController.html",
    "title": "Class CategoryAPIController | SmartMenu - Documentation",
    "keywords": "Class CategoryAPIController API controller for managing categories. Inheritance object ControllerBase CategoryAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Controllers Assembly: SmartMenu.Services.ProductAPI.dll Syntax [Route(\"api/category\")] [ApiController] public class CategoryAPIController : ControllerBase Constructors | Edit this page View Source CategoryAPIController(AppDbContext, IMapper) Initializes a new instance of the CategoryAPIController class. Declaration public CategoryAPIController(AppDbContext db, IMapper mapper) Parameters Type Name Description AppDbContext db The database context. IMapper mapper The AutoMapper instance. Methods | Edit this page View Source Delete(int) Deletes a category by ID. Declaration [HttpDelete] [Route(\"{id:int}\")] [Authorize(Roles = \"ADMIN\")] public ResponseDto Delete(int id) Parameters Type Name Description int id The category ID. Returns Type Description ResponseDto The response indicating the result of the delete operation. | Edit this page View Source Get() Gets the list of categories. Declaration [HttpGet] public ResponseDto Get() Returns Type Description ResponseDto The response containing the list of categories. | Edit this page View Source Get(int) Gets a category by ID. Declaration [HttpGet] [Route(\"{id:int}\")] public ResponseDto Get(int id) Parameters Type Name Description int id The category ID. Returns Type Description ResponseDto The response containing the category. | Edit this page View Source Post(CategoryDto) Creates a new category. Declaration [HttpPost] [Authorize(Roles = \"ADMIN\")] public ResponseDto Post(CategoryDto CategoryDto) Parameters Type Name Description CategoryDto CategoryDto The category data transfer object. Returns Type Description ResponseDto The response containing the created category. | Edit this page View Source Put(CategoryDto) Updates an existing category. Declaration [HttpPut] [Authorize(Roles = \"ADMIN\")] public ResponseDto Put(CategoryDto CategoryDto) Parameters Type Name Description CategoryDto CategoryDto The category data transfer object. Returns Type Description ResponseDto The response containing the updated category."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.ProductAPIController.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.ProductAPIController.html",
    "title": "Class ProductAPIController | SmartMenu - Documentation",
    "keywords": "Class ProductAPIController API controller for managing products. Inheritance object ControllerBase ProductAPIController Inherited Members ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Controllers Assembly: SmartMenu.Services.ProductAPI.dll Syntax [Route(\"api/product\")] [ApiController] public class ProductAPIController : ControllerBase Constructors | Edit this page View Source ProductAPIController(AppDbContext, IMapper) Initializes a new instance of the ProductAPIController class. Declaration public ProductAPIController(AppDbContext db, IMapper mapper) Parameters Type Name Description AppDbContext db The database context. IMapper mapper The AutoMapper instance. Methods | Edit this page View Source Delete(int) Deletes a product by ID. Declaration [HttpDelete] [Route(\"{id:int}\")] [Authorize(Roles = \"ADMIN\")] public ResponseDto Delete(int id) Parameters Type Name Description int id The product ID. Returns Type Description ResponseDto The response indicating the result of the delete operation. | Edit this page View Source Get() Gets the list of products. Declaration [HttpGet] public ResponseDto Get() Returns Type Description ResponseDto The response containing the list of products. | Edit this page View Source Get(int) Gets a product by ID. Declaration [HttpGet] [Route(\"{id:int}\")] public ResponseDto Get(int id) Parameters Type Name Description int id The product ID. Returns Type Description ResponseDto The response containing the product. | Edit this page View Source Post(ProductDto) Creates a new product. Declaration [HttpPost] [Authorize(Roles = \"ADMIN\")] public ResponseDto Post(ProductDto ProductDto) Parameters Type Name Description ProductDto ProductDto The product data transfer object. Returns Type Description ResponseDto The response containing the created product. | Edit this page View Source Put(ProductDto) Updates an existing product. Declaration [HttpPut] [Authorize(Roles = \"ADMIN\")] public ResponseDto Put(ProductDto ProductDto) Parameters Type Name Description ProductDto ProductDto The product data transfer object. Returns Type Description ResponseDto The response containing the updated product."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Controllers.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Controllers | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Controllers Classes CategoryAPIController API controller for managing categories. ProductAPIController API controller for managing products."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Data.AppDbContext.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Data.AppDbContext.html",
    "title": "Class AppDbContext | SmartMenu - Documentation",
    "keywords": "Class AppDbContext Represents the application's database context. Inheritance object DbContext AppDbContext Implements IInfrastructure<IServiceProvider> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable Inherited Members DbContext.Set<TEntity>() DbContext.Set<TEntity>(string) DbContext.OnConfiguring(DbContextOptionsBuilder) DbContext.ConfigureConventions(ModelConfigurationBuilder) DbContext.SaveChanges() DbContext.SaveChanges(bool) DbContext.SaveChangesAsync(CancellationToken) DbContext.SaveChangesAsync(bool, CancellationToken) DbContext.Dispose() DbContext.DisposeAsync() DbContext.Entry<TEntity>(TEntity) DbContext.Entry(object) DbContext.Add<TEntity>(TEntity) DbContext.AddAsync<TEntity>(TEntity, CancellationToken) DbContext.Attach<TEntity>(TEntity) DbContext.Update<TEntity>(TEntity) DbContext.Remove<TEntity>(TEntity) DbContext.Add(object) DbContext.AddAsync(object, CancellationToken) DbContext.Attach(object) DbContext.Update(object) DbContext.Remove(object) DbContext.AddRange(params object[]) DbContext.AddRangeAsync(params object[]) DbContext.AttachRange(params object[]) DbContext.UpdateRange(params object[]) DbContext.RemoveRange(params object[]) DbContext.AddRange(IEnumerable<object>) DbContext.AddRangeAsync(IEnumerable<object>, CancellationToken) DbContext.AttachRange(IEnumerable<object>) DbContext.UpdateRange(IEnumerable<object>) DbContext.RemoveRange(IEnumerable<object>) DbContext.Find(Type, params object[]) DbContext.FindAsync(Type, params object[]) DbContext.FindAsync(Type, object[], CancellationToken) DbContext.Find<TEntity>(params object[]) DbContext.FindAsync<TEntity>(params object[]) DbContext.FindAsync<TEntity>(object[], CancellationToken) DbContext.FromExpression<TResult>(Expression<Func<IQueryable<TResult>>>) DbContext.Database DbContext.ChangeTracker DbContext.Model DbContext.ContextId DbContext.SavingChanges DbContext.SavedChanges DbContext.SaveChangesFailed object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Data Assembly: SmartMenu.Services.ProductAPI.dll Syntax public class AppDbContext : DbContext, IInfrastructure<IServiceProvider>, IDbContextDependencies, IDbSetCache, IDbContextPoolable, IResettableService, IDisposable, IAsyncDisposable Constructors | Edit this page View Source AppDbContext(DbContextOptions<AppDbContext>) Initializes a new instance of the AppDbContext class. Declaration public AppDbContext(DbContextOptions<AppDbContext> options) Parameters Type Name Description DbContextOptions<AppDbContext> options The options to be used by a DbContext. Properties | Edit this page View Source Categories Gets or sets the categories in the database. Declaration public DbSet<Category> Categories { get; set; } Property Value Type Description DbSet<Category> | Edit this page View Source Products Gets or sets the products in the database. Declaration public DbSet<Product> Products { get; set; } Property Value Type Description DbSet<Product> Methods | Edit this page View Source OnModelCreating(ModelBuilder) Configures the model that was discovered by convention from the entity types exposed in DbSet<TEntity> properties on the derived context. Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The builder being used to construct the model for this context. Overrides DbContext.OnModelCreating(ModelBuilder) Implements IInfrastructure<T> IDbContextDependencies IDbSetCache IDbContextPoolable IResettableService IDisposable IAsyncDisposable"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Data.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Data.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Data | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Data Classes AppDbContext Represents the application's database context."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | SmartMenu - Documentation",
    "keywords": "Class WebApplicationBuilderExtensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Extensions Assembly: SmartMenu.Services.ProductAPI.dll Syntax public static class WebApplicationBuilderExtensions Methods | Edit this page View Source AddAppAuthetication(WebApplicationBuilder) Declaration public static WebApplicationBuilder AddAppAuthetication(this WebApplicationBuilder builder) Parameters Type Name Description WebApplicationBuilder builder Returns Type Description WebApplicationBuilder"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Extensions.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Extensions | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Extensions Classes WebApplicationBuilderExtensions"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.MappingConfig.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.MappingConfig.html",
    "title": "Class MappingConfig | SmartMenu - Documentation",
    "keywords": "Class MappingConfig Inheritance object MappingConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI Assembly: SmartMenu.Services.ProductAPI.dll Syntax public class MappingConfig Methods | Edit this page View Source RegisterMaps() Declaration public static MapperConfiguration RegisterMaps() Returns Type Description MapperConfiguration"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.AddCategoryTable.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.AddCategoryTable.html",
    "title": "Class AddCategoryTable | SmartMenu - Documentation",
    "keywords": "Class AddCategoryTable A base class inherited by each EF Core migration. Inheritance object Migration AddCategoryTable Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Migrations Assembly: SmartMenu.Services.ProductAPI.dll Syntax [DbContext(typeof(AppDbContext))] [Migration(\"20241124132913_AddCategoryTable\")] public class AddCategoryTable : Migration Remarks See Database migrations for more information and examples. Methods | Edit this page View Source BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to use to build the model. Overrides Migration.BuildTargetModel(ModelBuilder) Remarks See Database migrations for more information and examples. | Edit this page View Source Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Down(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. | Edit this page View Source Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Up(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.SeedProductTable.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.SeedProductTable.html",
    "title": "Class SeedProductTable | SmartMenu - Documentation",
    "keywords": "Class SeedProductTable A base class inherited by each EF Core migration. Inheritance object Migration SeedProductTable Inherited Members Migration.InitialDatabase Migration.TargetModel Migration.UpOperations Migration.DownOperations Migration.ActiveProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Migrations Assembly: SmartMenu.Services.ProductAPI.dll Syntax [DbContext(typeof(AppDbContext))] [Migration(\"20241119221717_SeedProductTable\")] public class SeedProductTable : Migration Remarks See Database migrations for more information and examples. Methods | Edit this page View Source BuildTargetModel(ModelBuilder) Implemented to build the TargetModel. Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder The ModelBuilder to use to build the model. Overrides Migration.BuildTargetModel(ModelBuilder) Remarks See Database migrations for more information and examples. | Edit this page View Source Down(MigrationBuilder) Builds the operations that will migrate the database 'down'. Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Down(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by this migration so that it returns to the state that it was in before this migration was applied. This method must be overridden in each class that inherits from Migration if both 'up' and 'down' migrations are to be supported. If it is not overridden, then calling it will throw and it will not be possible to migrate in the 'down' direction. See Database migrations for more information and examples. | Edit this page View Source Up(MigrationBuilder) Builds the operations that will migrate the database 'up'. Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder The MigrationBuilder that will build the operations. Overrides Migration.Up(MigrationBuilder) Remarks That is, builds the operations that will take the database from the state left in by the previous migration so that it is up-to-date with regard to this migration. This method must be overridden in each class that inherits from Migration. See Database migrations for more information and examples."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Migrations.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Migrations | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Migrations Classes AddCategoryTable A base class inherited by each EF Core migration. SeedProductTable A base class inherited by each EF Core migration."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Category.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Category.html",
    "title": "Class Category | SmartMenu - Documentation",
    "keywords": "Class Category Represents a category in the product API. Inheritance object Category Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Models Assembly: SmartMenu.Services.ProductAPI.dll Syntax public class Category Properties | Edit this page View Source CategoryId Gets or sets the unique identifier for the category. Declaration [Key] public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Name Gets or sets the name of the category. Declaration [Required] [MaxLength(50)] public string Name { get; set; } Property Value Type Description string"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.CategoryDto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.CategoryDto.html",
    "title": "Class CategoryDto | SmartMenu - Documentation",
    "keywords": "Class CategoryDto Represents a data transfer object for a category. Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Models.Dto Assembly: SmartMenu.Services.ProductAPI.dll Syntax public class CategoryDto Properties | Edit this page View Source CategoryId Gets or sets the unique identifier for the category. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Name Gets or sets the name of the category. Declaration public string Name { get; set; } Property Value Type Description string"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ProductDto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ProductDto.html",
    "title": "Class ProductDto | SmartMenu - Documentation",
    "keywords": "Class ProductDto Represents a data transfer object for a product. Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Models.Dto Assembly: SmartMenu.Services.ProductAPI.dll Syntax public class ProductDto Properties | Edit this page View Source Category Gets or sets the category data transfer object for the product. Declaration public CategoryDto? Category { get; set; } Property Value Type Description CategoryDto | Edit this page View Source CategoryId Gets or sets the category identifier for the product. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Description Gets or sets the description of the product. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source Image Gets or sets the image file of the product. Declaration public IFormFile? Image { get; set; } Property Value Type Description IFormFile | Edit this page View Source ImageLocalPath Gets or sets the local path of the product image. Declaration public string? ImageLocalPath { get; set; } Property Value Type Description string | Edit this page View Source ImageUrl Gets or sets the URL of the product image. Declaration public string? ImageUrl { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the product. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Price Gets or sets the price of the product. Declaration public double Price { get; set; } Property Value Type Description double | Edit this page View Source ProductId Gets or sets the unique identifier for the product. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ResponseDto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.ResponseDto.html",
    "title": "Class ResponseDto | SmartMenu - Documentation",
    "keywords": "Class ResponseDto Represents a response data transfer object. Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Models.Dto Assembly: SmartMenu.Services.ProductAPI.dll Syntax public class ResponseDto Properties | Edit this page View Source IsSuccess Gets or sets a value indicating whether the response is successful. Declaration public bool IsSuccess { get; set; } Property Value Type Description bool | Edit this page View Source Message Gets or sets the message of the response. Declaration public string Message { get; set; } Property Value Type Description string | Edit this page View Source Result Gets or sets the result of the response. Declaration public object? Result { get; set; } Property Value Type Description object"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Dto.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Models.Dto | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Models.Dto Classes CategoryDto Represents a data transfer object for a category. ProductDto Represents a data transfer object for a product. ResponseDto Represents a response data transfer object."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.Product.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.Product.html",
    "title": "Class Product | SmartMenu - Documentation",
    "keywords": "Class Product Represents a product in the product API. Inheritance object Product Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Services.ProductAPI.Models Assembly: SmartMenu.Services.ProductAPI.dll Syntax public class Product Properties | Edit this page View Source Category Gets or sets the category of the product. Declaration [ForeignKey(\"CategoryId\")] [ValidateNever] public Category Category { get; set; } Property Value Type Description Category | Edit this page View Source CategoryId Gets or sets the category identifier for the product. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Description Gets or sets the description of the product. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source ImageLocalPath Gets or sets the local path of the product image. Declaration public string? ImageLocalPath { get; set; } Property Value Type Description string | Edit this page View Source ImageUrl Gets or sets the URL of the product image. Declaration public string? ImageUrl { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the product. Declaration [Required] public string Name { get; set; } Property Value Type Description string | Edit this page View Source Price Gets or sets the price of the product. Declaration [Range(1, 1000)] public double Price { get; set; } Property Value Type Description double | Edit this page View Source ProductId Gets or sets the unique identifier for the product. Declaration [Key] public int ProductId { get; set; } Property Value Type Description int"
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.Models.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.Models.html",
    "title": "Namespace SmartMenu.Services.ProductAPI.Models | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ProductAPI.Models Classes Category Represents a category in the product API. Product Represents a product in the product API."
  },
  "ProductAPI/SmartMenu.Services.ProductAPI.html": {
    "href": "ProductAPI/SmartMenu.Services.ProductAPI.html",
    "title": "Namespace SmartMenu.Services.ProductAPI | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Services.ProductAPI Classes MappingConfig"
  },
  "Web/SmartMenu.Web.Controllers.AuthController.html": {
    "href": "Web/SmartMenu.Web.Controllers.AuthController.html",
    "title": "Class AuthController | SmartMenu - Documentation",
    "keywords": "Class AuthController Controller for handling user authentication and account management in the web-application. Inheritance object ControllerBase Controller AuthController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Controllers Assembly: SmartMenu.Web.dll Syntax public class AuthController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Edit this page View Source AuthController(IAuthService, ITokenProvider) Constructor for the AuthController. Declaration public AuthController(IAuthService authService, ITokenProvider tokenProvider) Parameters Type Name Description IAuthService authService The authentication service. ITokenProvider tokenProvider The token provider. Methods | Edit this page View Source ChangePassword() Get-method for changing the user's password. Declaration [HttpGet] [Authorize] public IActionResult ChangePassword() Returns Type Description IActionResult Returns the ChangePassword view with a new ChangePasswordDto object. | Edit this page View Source ChangePassword(ChangePasswordDto) Post-method for changing the user's password. Declaration [HttpPost] [Authorize] public Task<IActionResult> ChangePassword(ChangePasswordDto model) Parameters Type Name Description ChangePasswordDto model ChangePasswordDto that contains the user's current and new password. Returns Type Description Task<IActionResult> Returns the ChangePassword view with a new ChangePasswordDto object. | Edit this page View Source DeleteAccount() Post-method for deleting the user's account. Declaration [HttpPost] [Authorize] public Task<IActionResult> DeleteAccount() Returns Type Description Task<IActionResult> Returns the Index view with a success message if the account was deleted successfully. | Edit this page View Source DeleteAccountConfirmation() Get-method for deleting the user's account. Declaration [HttpGet] [Authorize] public Task<IActionResult> DeleteAccountConfirmation() Returns Type Description Task<IActionResult> Returns the DeleteAccountConfirmation view with a new EditAccountDto object. | Edit this page View Source EditAccount() Get-method for editing the user's account details. Declaration [HttpGet] [Authorize] public Task<IActionResult> EditAccount() Returns Type Description Task<IActionResult> Returns the EditAccount view with a new EditAccountDto object. | Edit this page View Source EditAccount(EditAccountDto) Post-method for editing the user's account details. Declaration [HttpPost] [Authorize] public Task<IActionResult> EditAccount(EditAccountDto model) Parameters Type Name Description EditAccountDto model EditAccountDto that contains the user's updated account information. Returns Type Description Task<IActionResult> Returns the view with a new EditAccountDto object. | Edit this page View Source Login() Get-method for the Login view. Declaration [HttpGet] public IActionResult Login() Returns Type Description IActionResult Returns the Login view with a new LoginRequestDto object. | Edit this page View Source Login(LoginRequestDto) Post-method for the Login view. Declaration [HttpPost] public Task<IActionResult> Login(LoginRequestDto obj) Parameters Type Name Description LoginRequestDto obj LoginRequestDto that contains the user's login information. Returns Type Description Task<IActionResult> Returns the Login view with a new LoginRequestDto object. | Edit this page View Source Logout() Logout the user and clear the token. Declaration public Task<IActionResult> Logout() Returns Type Description Task<IActionResult> Redirects to the Home index page. | Edit this page View Source PersonalData() Get-method for the PersonalData view. Declaration [HttpGet] [Authorize] public Task<IActionResult> PersonalData() Returns Type Description Task<IActionResult> Returns the PersonalData view with a new EditAccountDto object. | Edit this page View Source Register() Get-method for the Register view. Declaration [HttpGet] public IActionResult Register() Returns Type Description IActionResult Returns the Register view with a new RegistrationRequestDto object. | Edit this page View Source Register(RegistrationRequestDto) Post-method for the Register view. Declaration [HttpPost] public Task<IActionResult> Register(RegistrationRequestDto obj) Parameters Type Name Description RegistrationRequestDto obj RegistrationRequestDto that contains the user's registration information. Returns Type Description Task<IActionResult> Returns the Register view with a new RegistrationRequestDto object. Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable"
  },
  "Web/SmartMenu.Web.Controllers.CartController.html": {
    "href": "Web/SmartMenu.Web.Controllers.CartController.html",
    "title": "Class CartController | SmartMenu - Documentation",
    "keywords": "Class CartController Controller for handling cart operations. Inheritance object ControllerBase Controller CartController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Controllers Assembly: SmartMenu.Web.dll Syntax public class CartController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Edit this page View Source CartController(ICartService, IOrderService, IAuthService) Constructor for CartController. Declaration public CartController(ICartService cartService, IOrderService orderService, IAuthService authService) Parameters Type Name Description ICartService cartService Service for cart operations. IOrderService orderService Service for order operations. IAuthService authService Service for authentication operations. Methods | Edit this page View Source ApplyCoupon(CartDto) Post-method to apply a coupon. Declaration [HttpPost] public Task<IActionResult> ApplyCoupon(CartDto cartDto) Parameters Type Name Description CartDto cartDto DTO for the cart. Returns Type Description Task<IActionResult> Returns the view for cart index. | Edit this page View Source CartIndex() Method to display the cart index. Declaration [Authorize] public Task<IActionResult> CartIndex() Returns Type Description Task<IActionResult> Returns the view for cart index. | Edit this page View Source Checkout() Method to display the checkout page. Declaration [Authorize] public Task<IActionResult> Checkout() Returns Type Description Task<IActionResult> Returns the view for checkout. | Edit this page View Source Checkout(CartDto) Post-method to checkout the cart. Declaration [HttpPost] [ActionName(\"Checkout\")] public Task<IActionResult> Checkout(CartDto cartDto) Parameters Type Name Description CartDto cartDto DTO for the cart. Returns Type Description Task<IActionResult> Returns the view for cart index. | Edit this page View Source Confirmation(int) Method to confirm the order. Declaration public Task<IActionResult> Confirmation(int orderId) Parameters Type Name Description int orderId ID of the order. Returns Type Description Task<IActionResult> Returns the view for confirmation. | Edit this page View Source DecreaseQuantity(int) Method to decrease the quantity of a product in the cart. Declaration public Task<IActionResult> DecreaseQuantity(int cartDetailsId) Parameters Type Name Description int cartDetailsId ID of the cart details. Returns Type Description Task<IActionResult> Returns the view for cart index. | Edit this page View Source IncreaseQuantity(int) Method to increase the quantity of a product in the cart. Declaration public Task<IActionResult> IncreaseQuantity(int cartDetailsId) Parameters Type Name Description int cartDetailsId ID of the cart details. Returns Type Description Task<IActionResult> Returns the view for cart index. | Edit this page View Source Remove(int) Method to remove a product from the cart. Declaration public Task<IActionResult> Remove(int cartDetailsId) Parameters Type Name Description int cartDetailsId ID of the cart details. Returns Type Description Task<IActionResult> Returns the view for cart index. | Edit this page View Source RemoveCoupon(CartDto) Post-method to remove a coupon. Declaration [HttpPost] public Task<IActionResult> RemoveCoupon(CartDto cartDto) Parameters Type Name Description CartDto cartDto DTO for the cart. Returns Type Description Task<IActionResult> Returns the view for cart index. Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable"
  },
  "Web/SmartMenu.Web.Controllers.CategoryController.html": {
    "href": "Web/SmartMenu.Web.Controllers.CategoryController.html",
    "title": "Class CategoryController | SmartMenu - Documentation",
    "keywords": "Class CategoryController Controller for Category in the SmartMenu web application. Inheritance object ControllerBase Controller CategoryController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Controllers Assembly: SmartMenu.Web.dll Syntax public class CategoryController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Edit this page View Source CategoryController(ICategoryService) Constructor for the CategoryController. Declaration public CategoryController(ICategoryService categoryService) Parameters Type Name Description ICategoryService categoryService Service for category operations. Methods | Edit this page View Source CategoryCreate() Method to display the create page for categories. Declaration public IActionResult CategoryCreate() Returns Type Description IActionResult Returns the view for creating a category. | Edit this page View Source CategoryCreate(CategoryDto) Post-method to create a category. Declaration [HttpPost] public Task<IActionResult> CategoryCreate(CategoryDto model) Parameters Type Name Description CategoryDto model DTO for category. Returns Type Description Task<IActionResult> Returns the view for category index. | Edit this page View Source CategoryDelete(CategoryDto) Post-method to delete a category. Declaration [HttpPost] public Task<IActionResult> CategoryDelete(CategoryDto categoryDto) Parameters Type Name Description CategoryDto categoryDto DTO for category. Returns Type Description Task<IActionResult> Returns the view for category index. | Edit this page View Source CategoryDelete(int) Method to display the delete page for a category. Declaration public Task<IActionResult> CategoryDelete(int categoryId) Parameters Type Name Description int categoryId ID of the category. Returns Type Description Task<IActionResult> Returns the view for deleting a category. | Edit this page View Source CategoryEdit(CategoryDto) Post-method to edit a category. Declaration [HttpPost] public Task<IActionResult> CategoryEdit(CategoryDto categoryDto) Parameters Type Name Description CategoryDto categoryDto DTO for category. Returns Type Description Task<IActionResult> Returns the view for category index. | Edit this page View Source CategoryEdit(int) Method to display the edit page for a category. Declaration public Task<IActionResult> CategoryEdit(int categoryId) Parameters Type Name Description int categoryId ID of the category. Returns Type Description Task<IActionResult> Returns the view for editing a category. | Edit this page View Source CategoryIndex() Method to display the index page for categories. Declaration public Task<IActionResult> CategoryIndex() Returns Type Description Task<IActionResult> Returns the view for category index. | Edit this page View Source GetAll() Method to get all categories. Declaration [HttpGet] public Task<IActionResult> GetAll() Returns Type Description Task<IActionResult> Returns a JSON result with the list of categories. Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable"
  },
  "Web/SmartMenu.Web.Controllers.CouponController.html": {
    "href": "Web/SmartMenu.Web.Controllers.CouponController.html",
    "title": "Class CouponController | SmartMenu - Documentation",
    "keywords": "Class CouponController Controller for managing coupons in the SmartMenu web application. Inheritance object ControllerBase Controller CouponController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Controllers Assembly: SmartMenu.Web.dll Syntax public class CouponController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Edit this page View Source CouponController(ICouponService) Initializes a new instance of the CouponController class. Declaration public CouponController(ICouponService couponService) Parameters Type Name Description ICouponService couponService The service for managing coupons. Methods | Edit this page View Source CouponCreate() Displays the create page for coupons. Declaration public Task<IActionResult> CouponCreate() Returns Type Description Task<IActionResult> Returns the view for creating a coupon. | Edit this page View Source CouponCreate(CouponDto) Handles the post request to create a new coupon. Declaration [HttpPost] public Task<IActionResult> CouponCreate(CouponDto model) Parameters Type Name Description CouponDto model The data transfer object for the coupon. Returns Type Description Task<IActionResult> Returns the view with the created coupon or redirects to the index page. | Edit this page View Source CouponDelete(CouponDto) Handles the post request to delete a coupon. Declaration [HttpPost] public Task<IActionResult> CouponDelete(CouponDto couponDto) Parameters Type Name Description CouponDto couponDto The data transfer object for the coupon to be deleted. Returns Type Description Task<IActionResult> Returns the view with the deleted coupon or redirects to the index page. | Edit this page View Source CouponDelete(int) Displays the delete page for a coupon. Declaration public Task<IActionResult> CouponDelete(int couponId) Parameters Type Name Description int couponId The ID of the coupon to be deleted. Returns Type Description Task<IActionResult> Returns the view with the coupon to be deleted. | Edit this page View Source CouponIndex() Displays the index page for coupons. Declaration public Task<IActionResult> CouponIndex() Returns Type Description Task<IActionResult> Returns the view with the list of coupons. Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable"
  },
  "Web/SmartMenu.Web.Controllers.HomeController.html": {
    "href": "Web/SmartMenu.Web.Controllers.HomeController.html",
    "title": "Class HomeController | SmartMenu - Documentation",
    "keywords": "Class HomeController Controller for managing the home page and related actions in the SmartMenu web application. Inheritance object ControllerBase Controller HomeController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Controllers Assembly: SmartMenu.Web.dll Syntax public class HomeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Edit this page View Source HomeController(IProductService, ICartService, ICategoryService) Initializes a new instance of the HomeController class. Declaration public HomeController(IProductService productService, ICartService cartService, ICategoryService categoryService) Parameters Type Name Description IProductService productService The service for managing products. ICartService cartService The service for managing the shopping cart. ICategoryService categoryService The service for managing categories. Methods | Edit this page View Source Error() Displays the error page. Declaration [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] public IActionResult Error() Returns Type Description IActionResult Returns the view for the error page. | Edit this page View Source Index(string?, int?, int, string?) Displays the index page with a list of products. Declaration public Task<IActionResult> Index(string? searchTerm, int? categoryId, int pageNumber = 1, string? sortOrder = null) Parameters Type Name Description string searchTerm The search term to filter products. int? categoryId The category ID to filter products. int pageNumber The current page number for pagination. string sortOrder The sort order for products. Returns Type Description Task<IActionResult> Returns the view with the list of products. | Edit this page View Source Privacy() Displays the privacy policy page. Declaration public IActionResult Privacy() Returns Type Description IActionResult Returns the view for the privacy policy. | Edit this page View Source ProductDetails(ProductDto) Handles the post request to add a product to the shopping cart. Declaration [Authorize] [HttpPost] [ActionName(\"ProductDetails\")] public Task<IActionResult> ProductDetails(ProductDto productDto) Parameters Type Name Description ProductDto productDto The data transfer object for the product to add to the cart. Returns Type Description Task<IActionResult> Returns the view with the product details or redirects to the index page. | Edit this page View Source ProductDetails(int) Displays the details of a product. Declaration public Task<IActionResult> ProductDetails(int productId) Parameters Type Name Description int productId The ID of the product to display. Returns Type Description Task<IActionResult> Returns the view with the product details. Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable"
  },
  "Web/SmartMenu.Web.Controllers.OrderController.html": {
    "href": "Web/SmartMenu.Web.Controllers.OrderController.html",
    "title": "Class OrderController | SmartMenu - Documentation",
    "keywords": "Class OrderController Controller for managing orders in the SmartMenu web application. Inheritance object ControllerBase Controller OrderController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Controllers Assembly: SmartMenu.Web.dll Syntax public class OrderController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Edit this page View Source OrderController(IOrderService) Initializes a new instance of the OrderController class. Declaration public OrderController(IOrderService orderService) Parameters Type Name Description IOrderService orderService The service for managing orders. Methods | Edit this page View Source CancelOrder(int) Updates the status of an order to \"Cancelled\". Declaration [HttpPost(\"CancelOrder\")] public Task<IActionResult> CancelOrder(int orderId) Parameters Type Name Description int orderId The ID of the order to update. Returns Type Description Task<IActionResult> Returns the view with the updated order status. | Edit this page View Source CompleteOrder(int) Updates the status of an order to \"Completed\". Declaration [HttpPost(\"CompleteOrder\")] public Task<IActionResult> CompleteOrder(int orderId) Parameters Type Name Description int orderId The ID of the order to update. Returns Type Description Task<IActionResult> Returns the view with the updated order status. | Edit this page View Source GetAll(string) Gets all orders with optional status filtering. Declaration [HttpGet] public IActionResult GetAll(string status) Parameters Type Name Description string status The status to filter orders by. Returns Type Description IActionResult Returns a JSON result with the list of orders. | Edit this page View Source OrderDetail(int) Displays the details of a specific order. Declaration [Authorize] public Task<IActionResult> OrderDetail(int orderId) Parameters Type Name Description int orderId The ID of the order to display. Returns Type Description Task<IActionResult> Returns the view with the order details. | Edit this page View Source OrderIndex() Displays the index page for orders. Declaration [Authorize] public IActionResult OrderIndex() Returns Type Description IActionResult Returns the view for the order index page. | Edit this page View Source OrderReadyForPickup(int) Updates the status of an order to \"Ready for Pickup\". Declaration [HttpPost(\"OrderReadyForPickup\")] public Task<IActionResult> OrderReadyForPickup(int orderId) Parameters Type Name Description int orderId The ID of the order to update. Returns Type Description Task<IActionResult> Returns the view with the updated order status. Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable"
  },
  "Web/SmartMenu.Web.Controllers.ProductController.html": {
    "href": "Web/SmartMenu.Web.Controllers.ProductController.html",
    "title": "Class ProductController | SmartMenu - Documentation",
    "keywords": "Class ProductController Controller for managing products. Inheritance object ControllerBase Controller ProductController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Controllers Assembly: SmartMenu.Web.dll Syntax public class ProductController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Edit this page View Source ProductController(IProductService, ICategoryService) Initializes a new instance of the ProductController class. Declaration public ProductController(IProductService productService, ICategoryService categoryService) Parameters Type Name Description IProductService productService The product service. ICategoryService categoryService The category service. Methods | Edit this page View Source GetAll(string) Gets all products. Declaration [HttpGet] public Task<IActionResult> GetAll(string status) Parameters Type Name Description string status The status filter. Returns Type Description Task<IActionResult> A JSON result containing the list of products. | Edit this page View Source ProductCreate() Displays the product creation form. Declaration public Task<IActionResult> ProductCreate() Returns Type Description Task<IActionResult> The product creation view. | Edit this page View Source ProductCreate(ProductDto) Handles the product creation form submission. Declaration [HttpPost] public Task<IActionResult> ProductCreate(ProductDto model) Parameters Type Name Description ProductDto model The product model. Returns Type Description Task<IActionResult> The product index view if successful, otherwise the product creation view. | Edit this page View Source ProductDelete(ProductDto) Handles the product deletion form submission. Declaration [HttpPost] public Task<IActionResult> ProductDelete(ProductDto productDto) Parameters Type Name Description ProductDto productDto The product model. Returns Type Description Task<IActionResult> The product index view if successful, otherwise the product deletion view. | Edit this page View Source ProductDelete(int) Displays the product deletion confirmation form. Declaration public Task<IActionResult> ProductDelete(int productId) Parameters Type Name Description int productId The product ID. Returns Type Description Task<IActionResult> The product deletion view if successful, otherwise a not found result. | Edit this page View Source ProductEdit(ProductDto) Handles the product edit form submission. Declaration [HttpPost] public Task<IActionResult> ProductEdit(ProductDto productDto) Parameters Type Name Description ProductDto productDto The product model. Returns Type Description Task<IActionResult> The product index view if successful, otherwise the product edit view. | Edit this page View Source ProductEdit(int) Displays the product edit form. Declaration public Task<IActionResult> ProductEdit(int productId) Parameters Type Name Description int productId The product ID. Returns Type Description Task<IActionResult> The product edit view if successful, otherwise a not found result. | Edit this page View Source ProductIndex() Displays the list of products. Declaration public Task<IActionResult> ProductIndex() Returns Type Description Task<IActionResult> The product index view. Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable"
  },
  "Web/SmartMenu.Web.Controllers.html": {
    "href": "Web/SmartMenu.Web.Controllers.html",
    "title": "Namespace SmartMenu.Web.Controllers | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Web.Controllers Classes AuthController Controller for handling user authentication and account management in the web-application. CartController Controller for handling cart operations. CategoryController Controller for Category in the SmartMenu web application. CouponController Controller for managing coupons in the SmartMenu web application. HomeController Controller for managing the home page and related actions in the SmartMenu web application. OrderController Controller for managing orders in the SmartMenu web application. ProductController Controller for managing products."
  },
  "Web/SmartMenu.Web.Models.CartDetailsDto.html": {
    "href": "Web/SmartMenu.Web.Models.CartDetailsDto.html",
    "title": "Class CartDetailsDto | SmartMenu - Documentation",
    "keywords": "Class CartDetailsDto Represents the details of a cart item. Inheritance object CartDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class CartDetailsDto Properties | Edit this page View Source CartDetailsId Gets or sets the cart details ID. Declaration public int CartDetailsId { get; set; } Property Value Type Description int | Edit this page View Source CartHeader Gets or sets the cart header. Declaration public CartHeaderDto? CartHeader { get; set; } Property Value Type Description CartHeaderDto | Edit this page View Source CartHeaderId Gets or sets the cart header ID. Declaration public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source Count Gets or sets the count of the product. Declaration public int Count { get; set; } Property Value Type Description int | Edit this page View Source Product Gets or sets the product. Declaration public ProductDto? Product { get; set; } Property Value Type Description ProductDto | Edit this page View Source ProductId Gets or sets the product ID. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "Web/SmartMenu.Web.Models.CartDto.html": {
    "href": "Web/SmartMenu.Web.Models.CartDto.html",
    "title": "Class CartDto | SmartMenu - Documentation",
    "keywords": "Class CartDto Represents a shopping cart. Inheritance object CartDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class CartDto Properties | Edit this page View Source CartDetails Gets or sets the cart details. Declaration public IEnumerable<CartDetailsDto>? CartDetails { get; set; } Property Value Type Description IEnumerable<CartDetailsDto> | Edit this page View Source CartHeader Gets or sets the cart header. Declaration public CartHeaderDto CartHeader { get; set; } Property Value Type Description CartHeaderDto"
  },
  "Web/SmartMenu.Web.Models.CartHeaderDto.html": {
    "href": "Web/SmartMenu.Web.Models.CartHeaderDto.html",
    "title": "Class CartHeaderDto | SmartMenu - Documentation",
    "keywords": "Class CartHeaderDto Represents the header information of a shopping cart. Inheritance object CartHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class CartHeaderDto Properties | Edit this page View Source CartHeaderId Gets or sets the cart header ID. Declaration public int CartHeaderId { get; set; } Property Value Type Description int | Edit this page View Source CartTotal Gets or sets the total amount of the cart. Declaration public double CartTotal { get; set; } Property Value Type Description double | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string? CouponCode { get; set; } Property Value Type Description string | Edit this page View Source Discount Gets or sets the discount amount. Declaration public double Discount { get; set; } Property Value Type Description double | Edit this page View Source Email Gets or sets the email address of the user. Declaration [Required] public string? Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration [Required] public string? Name { get; set; } Property Value Type Description string | Edit this page View Source Phone Gets or sets the phone number of the user. Declaration [Required] public string? Phone { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the user ID. Declaration public string? UserId { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.CategoryDto.html": {
    "href": "Web/SmartMenu.Web.Models.CategoryDto.html",
    "title": "Class CategoryDto | SmartMenu - Documentation",
    "keywords": "Class CategoryDto Represents a category. Inheritance object CategoryDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class CategoryDto Properties | Edit this page View Source CategoryId Gets or sets the category ID. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Name Gets or sets the name of the category. Declaration public string Name { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.ChangePasswordDto.html": {
    "href": "Web/SmartMenu.Web.Models.ChangePasswordDto.html",
    "title": "Class ChangePasswordDto | SmartMenu - Documentation",
    "keywords": "Class ChangePasswordDto Data transfer object for changing a user's password. Inheritance object ChangePasswordDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class ChangePasswordDto Properties | Edit this page View Source ConfirmNewPassword Gets or sets the confirmation of the new password. Declaration public string ConfirmNewPassword { get; set; } Property Value Type Description string | Edit this page View Source CurrentPassword Gets or sets the user's current password. Declaration public string CurrentPassword { get; set; } Property Value Type Description string | Edit this page View Source NewPassword Gets or sets the new password. Declaration public string NewPassword { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.CheckoutDto.html": {
    "href": "Web/SmartMenu.Web.Models.CheckoutDto.html",
    "title": "Class CheckoutDto | SmartMenu - Documentation",
    "keywords": "Class CheckoutDto Data transfer object for the checkout process. Inheritance object CheckoutDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class CheckoutDto Properties | Edit this page View Source AccountDto Gets or sets the account details for editing. Declaration public EditAccountDto AccountDto { get; set; } Property Value Type Description EditAccountDto | Edit this page View Source CartDto Gets or sets the cart details. Declaration public CartDto CartDto { get; set; } Property Value Type Description CartDto"
  },
  "Web/SmartMenu.Web.Models.CouponDto.html": {
    "href": "Web/SmartMenu.Web.Models.CouponDto.html",
    "title": "Class CouponDto | SmartMenu - Documentation",
    "keywords": "Class CouponDto Data transfer object for coupon details. Inheritance object CouponDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class CouponDto Properties | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string CouponCode { get; set; } Property Value Type Description string | Edit this page View Source CouponId Gets or sets the coupon identifier. Declaration public int CouponId { get; set; } Property Value Type Description int | Edit this page View Source DiscountAmount Gets or sets the discount amount. Declaration public double DiscountAmount { get; set; } Property Value Type Description double | Edit this page View Source MinAmount Gets or sets the minimum amount required to use the coupon. Declaration public int MinAmount { get; set; } Property Value Type Description int"
  },
  "Web/SmartMenu.Web.Models.EditAccountDto.html": {
    "href": "Web/SmartMenu.Web.Models.EditAccountDto.html",
    "title": "Class EditAccountDto | SmartMenu - Documentation",
    "keywords": "Class EditAccountDto Data transfer object for editing account details. Inheritance object EditAccountDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class EditAccountDto Properties | Edit this page View Source NewEmail Gets or sets the new email address to update. Declaration public string? NewEmail { get; set; } Property Value Type Description string | Edit this page View Source NewName Gets or sets the new name to update. Declaration public string? NewName { get; set; } Property Value Type Description string | Edit this page View Source NewPhoneNumber Gets or sets the new phone number to update. Declaration public string? NewPhoneNumber { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the unique identifier of the user. Declaration public string UserId { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.ErrorViewModel.html": {
    "href": "Web/SmartMenu.Web.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | SmartMenu - Documentation",
    "keywords": "Class ErrorViewModel View model for representing error information. Inheritance object ErrorViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class ErrorViewModel Properties | Edit this page View Source RequestId Gets or sets the request identifier. Declaration public string? RequestId { get; set; } Property Value Type Description string | Edit this page View Source ShowRequestId Gets a value indicating whether to show the request identifier. Declaration public bool ShowRequestId { get; } Property Value Type Description bool"
  },
  "Web/SmartMenu.Web.Models.LoginRequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.LoginRequestDto.html",
    "title": "Class LoginRequestDto | SmartMenu - Documentation",
    "keywords": "Class LoginRequestDto Data transfer object for login requests. Inheritance object LoginRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class LoginRequestDto Properties | Edit this page View Source Password Gets or sets the password. Declaration [Required] public string Password { get; set; } Property Value Type Description string | Edit this page View Source UserName Gets or sets the username. Declaration [Required] public string UserName { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.LoginResponseDto.html": {
    "href": "Web/SmartMenu.Web.Models.LoginResponseDto.html",
    "title": "Class LoginResponseDto | SmartMenu - Documentation",
    "keywords": "Class LoginResponseDto Data transfer object for login responses. Inheritance object LoginResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class LoginResponseDto Properties | Edit this page View Source Token Gets or sets the authentication token. Declaration public string Token { get; set; } Property Value Type Description string | Edit this page View Source User Gets or sets the user details. Declaration public UserDto User { get; set; } Property Value Type Description UserDto"
  },
  "Web/SmartMenu.Web.Models.OrderDetailsDto.html": {
    "href": "Web/SmartMenu.Web.Models.OrderDetailsDto.html",
    "title": "Class OrderDetailsDto | SmartMenu - Documentation",
    "keywords": "Class OrderDetailsDto Data transfer object for order details. Inheritance object OrderDetailsDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class OrderDetailsDto Properties | Edit this page View Source Count Gets or sets the quantity of the product. Declaration public int Count { get; set; } Property Value Type Description int | Edit this page View Source OrderDetailsId Gets or sets the order details identifier. Declaration public int OrderDetailsId { get; set; } Property Value Type Description int | Edit this page View Source OrderHeaderId Gets or sets the order header identifier. Declaration public int OrderHeaderId { get; set; } Property Value Type Description int | Edit this page View Source Price Gets or sets the price of the product. Declaration public double Price { get; set; } Property Value Type Description double | Edit this page View Source Product Gets or sets the product details. Declaration public ProductDto? Product { get; set; } Property Value Type Description ProductDto | Edit this page View Source ProductId Gets or sets the product identifier. Declaration public int ProductId { get; set; } Property Value Type Description int | Edit this page View Source ProductName Gets or sets the name of the product. Declaration public string ProductName { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.OrderHeaderDto.html": {
    "href": "Web/SmartMenu.Web.Models.OrderHeaderDto.html",
    "title": "Class OrderHeaderDto | SmartMenu - Documentation",
    "keywords": "Class OrderHeaderDto Data transfer object for order header details. Inheritance object OrderHeaderDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class OrderHeaderDto Properties | Edit this page View Source CouponCode Gets or sets the coupon code. Declaration public string? CouponCode { get; set; } Property Value Type Description string | Edit this page View Source Discount Gets or sets the discount amount. Declaration public double Discount { get; set; } Property Value Type Description double | Edit this page View Source Email Gets or sets the email address of the customer. Declaration public string? Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the customer. Declaration public string? Name { get; set; } Property Value Type Description string | Edit this page View Source OrderDetails Gets or sets the order details. Declaration public IEnumerable<OrderDetailsDto> OrderDetails { get; set; } Property Value Type Description IEnumerable<OrderDetailsDto> | Edit this page View Source OrderHeaderId Gets or sets the order header identifier. Declaration public int OrderHeaderId { get; set; } Property Value Type Description int | Edit this page View Source OrderTime Gets or sets the order time. Declaration public DateTime OrderTime { get; set; } Property Value Type Description DateTime | Edit this page View Source OrderTotal Gets or sets the total order amount. Declaration public double OrderTotal { get; set; } Property Value Type Description double | Edit this page View Source PaymentIntentId Gets or sets the payment intent identifier. Declaration public string? PaymentIntentId { get; set; } Property Value Type Description string | Edit this page View Source Phone Gets or sets the phone number of the customer. Declaration public string? Phone { get; set; } Property Value Type Description string | Edit this page View Source Status Gets or sets the status of the order. Declaration public string? Status { get; set; } Property Value Type Description string | Edit this page View Source StripeSessionId Gets or sets the Stripe session identifier. Declaration public string? StripeSessionId { get; set; } Property Value Type Description string | Edit this page View Source UserId Gets or sets the user identifier. Declaration public string? UserId { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.ProductDto.html": {
    "href": "Web/SmartMenu.Web.Models.ProductDto.html",
    "title": "Class ProductDto | SmartMenu - Documentation",
    "keywords": "Class ProductDto Data transfer object for product details. Inheritance object ProductDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class ProductDto Properties | Edit this page View Source Category Gets or sets the category details. Declaration public CategoryDto? Category { get; set; } Property Value Type Description CategoryDto | Edit this page View Source CategoryId Gets or sets the category identifier. Declaration public int CategoryId { get; set; } Property Value Type Description int | Edit this page View Source Count Gets or sets the quantity of the product. Declaration [Range(1, 100)] public int Count { get; set; } Property Value Type Description int | Edit this page View Source Description Gets or sets the description of the product. Declaration public string Description { get; set; } Property Value Type Description string | Edit this page View Source Image Gets or sets the image file. Declaration [MaxFileSize(1)] [AllowedExtensions(new string[] { \".jpg\", \".png\" })] public IFormFile? Image { get; set; } Property Value Type Description IFormFile | Edit this page View Source ImageLocalPath Gets or sets the local path of the product image. Declaration public string? ImageLocalPath { get; set; } Property Value Type Description string | Edit this page View Source ImageUrl Gets or sets the URL of the product image. Declaration public string? ImageUrl { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the product. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source Price Gets or sets the price of the product. Declaration public double Price { get; set; } Property Value Type Description double | Edit this page View Source ProductId Gets or sets the product identifier. Declaration public int ProductId { get; set; } Property Value Type Description int"
  },
  "Web/SmartMenu.Web.Models.RegistrationRequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.RegistrationRequestDto.html",
    "title": "Class RegistrationRequestDto | SmartMenu - Documentation",
    "keywords": "Class RegistrationRequestDto Data transfer object for registration requests. Inheritance object RegistrationRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class RegistrationRequestDto Properties | Edit this page View Source Email Gets or sets the email address. Declaration [Required] public string Email { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration [Required] public string Name { get; set; } Property Value Type Description string | Edit this page View Source Password Gets or sets the password. Declaration [Required] public string Password { get; set; } Property Value Type Description string | Edit this page View Source PhoneNumber Gets or sets the phone number of the user. Declaration [Required] public string PhoneNumber { get; set; } Property Value Type Description string | Edit this page View Source Role Gets or sets the role of the user. Declaration public string? Role { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.RequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.RequestDto.html",
    "title": "Class RequestDto | SmartMenu - Documentation",
    "keywords": "Class RequestDto Data transfer object for API requests. Inheritance object RequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class RequestDto Properties | Edit this page View Source AccessToken Gets or sets the access token for authentication. Declaration public string AccessToken { get; set; } Property Value Type Description string | Edit this page View Source ApiType Gets or sets the type of the API request. Declaration public SD.ApiType ApiType { get; set; } Property Value Type Description SD.ApiType | Edit this page View Source ContentType Gets or sets the content type of the API request. Declaration public SD.ContentType ContentType { get; set; } Property Value Type Description SD.ContentType | Edit this page View Source Data Gets or sets the data to be sent with the API request. Declaration public object Data { get; set; } Property Value Type Description object | Edit this page View Source Url Gets or sets the URL for the API request. Declaration public string Url { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.ResponseDto.html": {
    "href": "Web/SmartMenu.Web.Models.ResponseDto.html",
    "title": "Class ResponseDto | SmartMenu - Documentation",
    "keywords": "Class ResponseDto Data transfer object for API responses. Inheritance object ResponseDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class ResponseDto Properties | Edit this page View Source IsSuccess Gets or sets a value indicating whether the API request was successful. Declaration public bool IsSuccess { get; set; } Property Value Type Description bool | Edit this page View Source Message Gets or sets the message associated with the API response. Declaration public string Message { get; set; } Property Value Type Description string | Edit this page View Source Result Gets or sets the result of the API response. Declaration public object? Result { get; set; } Property Value Type Description object"
  },
  "Web/SmartMenu.Web.Models.StripeRequestDto.html": {
    "href": "Web/SmartMenu.Web.Models.StripeRequestDto.html",
    "title": "Class StripeRequestDto | SmartMenu - Documentation",
    "keywords": "Class StripeRequestDto Data transfer object for Stripe payment requests. Inheritance object StripeRequestDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class StripeRequestDto Properties | Edit this page View Source ApprovedUrl Gets or sets the URL to redirect to upon approval. Declaration public string ApprovedUrl { get; set; } Property Value Type Description string | Edit this page View Source CancelUrl Gets or sets the URL to redirect to upon cancellation. Declaration public string CancelUrl { get; set; } Property Value Type Description string | Edit this page View Source OrderHeader Gets or sets the order header details. Declaration public OrderHeaderDto OrderHeader { get; set; } Property Value Type Description OrderHeaderDto | Edit this page View Source StripeSessionId Gets or sets the Stripe session identifier. Declaration public string? StripeSessionId { get; set; } Property Value Type Description string | Edit this page View Source StripeSessionUrl Gets or sets the Stripe session URL. Declaration public string? StripeSessionUrl { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.UserDto.html": {
    "href": "Web/SmartMenu.Web.Models.UserDto.html",
    "title": "Class UserDto | SmartMenu - Documentation",
    "keywords": "Class UserDto Data transfer object for user details. Inheritance object UserDto Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Models Assembly: SmartMenu.Web.dll Syntax public class UserDto Properties | Edit this page View Source Email Gets or sets the email address of the user. Declaration public string Email { get; set; } Property Value Type Description string | Edit this page View Source ID Gets or sets the user identifier. Declaration public string ID { get; set; } Property Value Type Description string | Edit this page View Source Name Gets or sets the name of the user. Declaration public string Name { get; set; } Property Value Type Description string | Edit this page View Source PhoneNumber Gets or sets the phone number of the user. Declaration public string PhoneNumber { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Models.html": {
    "href": "Web/SmartMenu.Web.Models.html",
    "title": "Namespace SmartMenu.Web.Models | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Web.Models Classes CartDetailsDto Represents the details of a cart item. CartDto Represents a shopping cart. CartHeaderDto Represents the header information of a shopping cart. CategoryDto Represents a category. ChangePasswordDto Data transfer object for changing a user's password. CheckoutDto Data transfer object for the checkout process. CouponDto Data transfer object for coupon details. EditAccountDto Data transfer object for editing account details. ErrorViewModel View model for representing error information. LoginRequestDto Data transfer object for login requests. LoginResponseDto Data transfer object for login responses. OrderDetailsDto Data transfer object for order details. OrderHeaderDto Data transfer object for order header details. ProductDto Data transfer object for product details. RegistrationRequestDto Data transfer object for registration requests. RequestDto Data transfer object for API requests. ResponseDto Data transfer object for API responses. StripeRequestDto Data transfer object for Stripe payment requests. UserDto Data transfer object for user details."
  },
  "Web/SmartMenu.Web.Service.AuthService.html": {
    "href": "Web/SmartMenu.Web.Service.AuthService.html",
    "title": "Class AuthService | SmartMenu - Documentation",
    "keywords": "Class AuthService Provides authentication-related services. Inheritance object AuthService Implements IAuthService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class AuthService : IAuthService Constructors | Edit this page View Source AuthService(IBaseService) Initializes a new instance of the AuthService class. Declaration public AuthService(IBaseService baseService) Parameters Type Name Description IBaseService baseService The base service to be used for sending requests. Methods | Edit this page View Source AssignRoleAsync(RegistrationRequestDto) Assigns a role to a user. Declaration public Task<ResponseDto?> AssignRoleAsync(RegistrationRequestDto registrationRequestDto) Parameters Type Name Description RegistrationRequestDto registrationRequestDto The registration request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source ChangePasswordAsync(ChangePasswordDto) Changes a user's password. Declaration public Task<ResponseDto?> ChangePasswordAsync(ChangePasswordDto changePasswordDto) Parameters Type Name Description ChangePasswordDto changePasswordDto The change password data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteAccountAsync(string) Deletes a user's account. Declaration public Task<ResponseDto?> DeleteAccountAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source EditAccountAsync(EditAccountDto) Edits a user's account information. Declaration public Task<ResponseDto?> EditAccountAsync(EditAccountDto editAccountDto) Parameters Type Name Description EditAccountDto editAccountDto The edit account data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetUserDetailsAsync(string) Gets the details of a user. Declaration public Task<ResponseDto?> GetUserDetailsAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source LoginAsync(LoginRequestDto) Logs in a user. Declaration public Task<ResponseDto?> LoginAsync(LoginRequestDto loginRequestDto) Parameters Type Name Description LoginRequestDto loginRequestDto The login request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source RegisterAsync(RegistrationRequestDto) Registers a new user. Declaration public Task<ResponseDto?> RegisterAsync(RegistrationRequestDto registrationRequestDto) Parameters Type Name Description RegistrationRequestDto registrationRequestDto The registration request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. Implements IAuthService"
  },
  "Web/SmartMenu.Web.Service.BaseService.html": {
    "href": "Web/SmartMenu.Web.Service.BaseService.html",
    "title": "Class BaseService | SmartMenu - Documentation",
    "keywords": "Class BaseService Provides base functionality for sending HTTP requests. Inheritance object BaseService Implements IBaseService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class BaseService : IBaseService Constructors | Edit this page View Source BaseService(IHttpClientFactory, ITokenProvider) Initializes a new instance of the BaseService class. Declaration public BaseService(IHttpClientFactory httpClientFactory, ITokenProvider tokenProvider) Parameters Type Name Description IHttpClientFactory httpClientFactory The HTTP client factory. ITokenProvider tokenProvider The token provider. Methods | Edit this page View Source SendAsync(RequestDto, bool) Sends an HTTP request asynchronously. Declaration public Task<ResponseDto?> SendAsync(RequestDto requestDto, bool withBearer = true) Parameters Type Name Description RequestDto requestDto The request data transfer object. bool withBearer Indicates whether to include a bearer token in the request. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. Implements IBaseService"
  },
  "Web/SmartMenu.Web.Service.CartService.html": {
    "href": "Web/SmartMenu.Web.Service.CartService.html",
    "title": "Class CartService | SmartMenu - Documentation",
    "keywords": "Class CartService Provides services related to the shopping cart. Inheritance object CartService Implements ICartService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class CartService : ICartService Constructors | Edit this page View Source CartService(IBaseService) Initializes a new instance of the CartService class. Declaration public CartService(IBaseService baseService) Parameters Type Name Description IBaseService baseService The base service to be used for sending requests. Methods | Edit this page View Source ApplyCouponAsync(CartDto) Applies a coupon to the cart. Declaration public Task<ResponseDto?> ApplyCouponAsync(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source ClearCartAsync(string) Clears the cart for a user. Declaration public Task<ResponseDto?> ClearCartAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DecreaseQuantityAsync(int) Decreases the quantity of an item in the cart. Declaration public Task<ResponseDto?> DecreaseQuantityAsync(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source EmailCart(CartDto) Sends an email with the cart details. Declaration public Task<ResponseDto?> EmailCart(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCartByUserIdAsnyc(string) Gets the cart details by user ID. Declaration public Task<ResponseDto?> GetCartByUserIdAsnyc(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source IncreaseQuantityAsync(int) Increases the quantity of an item in the cart. Declaration public Task<ResponseDto?> IncreaseQuantityAsync(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source RemoveFromCartAsync(int) Removes an item from the cart. Declaration public Task<ResponseDto?> RemoveFromCartAsync(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpsertCartAsync(CartDto) Adds or updates the cart. Declaration public Task<ResponseDto?> UpsertCartAsync(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. Implements ICartService"
  },
  "Web/SmartMenu.Web.Service.CategoryService.html": {
    "href": "Web/SmartMenu.Web.Service.CategoryService.html",
    "title": "Class CategoryService | SmartMenu - Documentation",
    "keywords": "Class CategoryService Provides services related to categories. Inheritance object CategoryService Implements ICategoryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class CategoryService : ICategoryService Constructors | Edit this page View Source CategoryService(IBaseService) Initializes a new instance of the CategoryService class. Declaration public CategoryService(IBaseService baseService) Parameters Type Name Description IBaseService baseService The base service to be used for sending requests. Methods | Edit this page View Source CreateCategoryAsync(CategoryDto) Creates a new category. Declaration public Task<ResponseDto?> CreateCategoryAsync(CategoryDto categoryDto) Parameters Type Name Description CategoryDto categoryDto The category data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteCategoryAsync(int) Deletes a category. Declaration public Task<ResponseDto?> DeleteCategoryAsync(int id) Parameters Type Name Description int id The category ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllCategoriesAsync() Gets all categories. Declaration public Task<ResponseDto?> GetAllCategoriesAsync() Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCategoryByIdAsync(int) Gets a single category by ID. Declaration public Task<ResponseDto?> GetCategoryByIdAsync(int id) Parameters Type Name Description int id The category ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateCategoryAsync(CategoryDto) Updates an existing category. Declaration public Task<ResponseDto?> UpdateCategoryAsync(CategoryDto categoryDto) Parameters Type Name Description CategoryDto categoryDto The category data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. Implements ICategoryService"
  },
  "Web/SmartMenu.Web.Service.CouponService.html": {
    "href": "Web/SmartMenu.Web.Service.CouponService.html",
    "title": "Class CouponService | SmartMenu - Documentation",
    "keywords": "Class CouponService Provides services related to coupons. Inheritance object CouponService Implements ICouponService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class CouponService : ICouponService Constructors | Edit this page View Source CouponService(IBaseService) Initializes a new instance of the CouponService class. Declaration public CouponService(IBaseService baseService) Parameters Type Name Description IBaseService baseService The base service to be used for sending requests. Methods | Edit this page View Source CreateCouponsAsync(CouponDto) Creates a new coupon. Declaration public Task<ResponseDto?> CreateCouponsAsync(CouponDto couponDto) Parameters Type Name Description CouponDto couponDto The coupon data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteCouponsAsync(int) Deletes a coupon by ID. Declaration public Task<ResponseDto?> DeleteCouponsAsync(int id) Parameters Type Name Description int id The coupon ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllCouponsAsync() Gets all coupons. Declaration public Task<ResponseDto?> GetAllCouponsAsync() Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCouponAsync(string) Gets a coupon by its code. Declaration public Task<ResponseDto?> GetCouponAsync(string couponCode) Parameters Type Name Description string couponCode The coupon code. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCouponByIdAsync(int) Gets a coupon by ID. Declaration public Task<ResponseDto?> GetCouponByIdAsync(int id) Parameters Type Name Description int id The coupon ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateCouponsAsync(CouponDto) Updates an existing coupon. Declaration public Task<ResponseDto?> UpdateCouponsAsync(CouponDto couponDto) Parameters Type Name Description CouponDto couponDto The coupon data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. Implements ICouponService"
  },
  "Web/SmartMenu.Web.Service.IService.IAuthService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IAuthService.html",
    "title": "Interface IAuthService | SmartMenu - Documentation",
    "keywords": "Interface IAuthService Defines methods for authentication and user management services. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface IAuthService Methods | Edit this page View Source AssignRoleAsync(RegistrationRequestDto) Assigns a role to a user. Declaration Task<ResponseDto?> AssignRoleAsync(RegistrationRequestDto registrationRequestDto) Parameters Type Name Description RegistrationRequestDto registrationRequestDto The registration request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source ChangePasswordAsync(ChangePasswordDto) Changes a user's password. Declaration Task<ResponseDto?> ChangePasswordAsync(ChangePasswordDto changePasswordDto) Parameters Type Name Description ChangePasswordDto changePasswordDto The change password data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteAccountAsync(string) Deletes a user's account. Declaration Task<ResponseDto?> DeleteAccountAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source EditAccountAsync(EditAccountDto) Edits a user's account details. Declaration Task<ResponseDto?> EditAccountAsync(EditAccountDto editAccountDto) Parameters Type Name Description EditAccountDto editAccountDto The edit account data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetUserDetailsAsync(string) Gets the details of a user by ID. Declaration Task<ResponseDto?> GetUserDetailsAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source LoginAsync(LoginRequestDto) Logs in a user. Declaration Task<ResponseDto?> LoginAsync(LoginRequestDto loginRequestDto) Parameters Type Name Description LoginRequestDto loginRequestDto The login request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source RegisterAsync(RegistrationRequestDto) Registers a new user. Declaration Task<ResponseDto?> RegisterAsync(RegistrationRequestDto registrationRequestDto) Parameters Type Name Description RegistrationRequestDto registrationRequestDto The registration request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.IBaseService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IBaseService.html",
    "title": "Interface IBaseService | SmartMenu - Documentation",
    "keywords": "Interface IBaseService Defines a base service for sending HTTP requests. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface IBaseService Methods | Edit this page View Source SendAsync(RequestDto, bool) Sends an asynchronous HTTP request. Declaration Task<ResponseDto?> SendAsync(RequestDto requestDto, bool withBearer = true) Parameters Type Name Description RequestDto requestDto The request data transfer object. bool withBearer Indicates whether to include a bearer token in the request. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ICartService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ICartService.html",
    "title": "Interface ICartService | SmartMenu - Documentation",
    "keywords": "Interface ICartService Defines methods for managing the shopping cart. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface ICartService Methods | Edit this page View Source ApplyCouponAsync(CartDto) Applies a coupon to the cart. Declaration Task<ResponseDto?> ApplyCouponAsync(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source ClearCartAsync(string) Clears the cart for a user. Declaration Task<ResponseDto?> ClearCartAsync(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DecreaseQuantityAsync(int) Decreases the quantity of an item in the cart. Declaration Task<ResponseDto?> DecreaseQuantityAsync(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source EmailCart(CartDto) Emails the cart. Declaration Task<ResponseDto?> EmailCart(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCartByUserIdAsnyc(string) Gets the cart by user ID. Declaration Task<ResponseDto?> GetCartByUserIdAsnyc(string userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source IncreaseQuantityAsync(int) Increases the quantity of an item in the cart. Declaration Task<ResponseDto?> IncreaseQuantityAsync(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source RemoveFromCartAsync(int) Removes an item from the cart. Declaration Task<ResponseDto?> RemoveFromCartAsync(int cartDetailsId) Parameters Type Name Description int cartDetailsId The cart details ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpsertCartAsync(CartDto) Upserts the cart. Declaration Task<ResponseDto?> UpsertCartAsync(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ICategoryService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ICategoryService.html",
    "title": "Interface ICategoryService | SmartMenu - Documentation",
    "keywords": "Interface ICategoryService Defines methods for managing categories. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface ICategoryService Methods | Edit this page View Source CreateCategoryAsync(CategoryDto) Creates a new category. Declaration Task<ResponseDto?> CreateCategoryAsync(CategoryDto categoryDto) Parameters Type Name Description CategoryDto categoryDto The category data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteCategoryAsync(int) Deletes a category by its ID. Declaration Task<ResponseDto?> DeleteCategoryAsync(int id) Parameters Type Name Description int id The category ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllCategoriesAsync() Gets all categories. Declaration Task<ResponseDto?> GetAllCategoriesAsync() Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCategoryByIdAsync(int) Gets a category by its ID. Declaration Task<ResponseDto?> GetCategoryByIdAsync(int id) Parameters Type Name Description int id The category ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateCategoryAsync(CategoryDto) Updates an existing category. Declaration Task<ResponseDto?> UpdateCategoryAsync(CategoryDto categoryDto) Parameters Type Name Description CategoryDto categoryDto The category data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ICouponService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ICouponService.html",
    "title": "Interface ICouponService | SmartMenu - Documentation",
    "keywords": "Interface ICouponService Defines methods for managing coupons. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface ICouponService Methods | Edit this page View Source CreateCouponsAsync(CouponDto) Creates a new coupon. Declaration Task<ResponseDto?> CreateCouponsAsync(CouponDto couponDto) Parameters Type Name Description CouponDto couponDto The coupon data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteCouponsAsync(int) Deletes a coupon by its ID. Declaration Task<ResponseDto?> DeleteCouponsAsync(int id) Parameters Type Name Description int id The coupon ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllCouponsAsync() Gets all coupons. Declaration Task<ResponseDto?> GetAllCouponsAsync() Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCouponAsync(string) Gets a coupon by its code. Declaration Task<ResponseDto?> GetCouponAsync(string couponCode) Parameters Type Name Description string couponCode The coupon code. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetCouponByIdAsync(int) Gets a coupon by its ID. Declaration Task<ResponseDto?> GetCouponByIdAsync(int id) Parameters Type Name Description int id The coupon ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateCouponsAsync(CouponDto) Updates an existing coupon. Declaration Task<ResponseDto?> UpdateCouponsAsync(CouponDto couponDto) Parameters Type Name Description CouponDto couponDto The coupon data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.IOrderService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IOrderService.html",
    "title": "Interface IOrderService | SmartMenu - Documentation",
    "keywords": "Interface IOrderService Defines methods for managing orders. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface IOrderService Methods | Edit this page View Source CreateOrder(CartDto) Creates a new order. Declaration Task<ResponseDto?> CreateOrder(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source CreateStripeSession(StripeRequestDto) Creates a Stripe session for payment. Declaration Task<ResponseDto?> CreateStripeSession(StripeRequestDto stripeRequestDto) Parameters Type Name Description StripeRequestDto stripeRequestDto The Stripe request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllOrder(string?) Gets all orders for a user. Declaration Task<ResponseDto?> GetAllOrder(string? userId) Parameters Type Name Description string userId The user ID (optional). Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetOrder(int) Gets an order by its ID. Declaration Task<ResponseDto?> GetOrder(int orderId) Parameters Type Name Description int orderId The order ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateOrderStatus(int, string) Updates the status of an order. Declaration Task<ResponseDto?> UpdateOrderStatus(int orderId, string newStatus) Parameters Type Name Description int orderId The order ID. string newStatus The new status. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source ValidateStripeSession(int) Validates a Stripe session. Declaration Task<ResponseDto?> ValidateStripeSession(int orderHeaderId) Parameters Type Name Description int orderHeaderId The order header ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.IProductService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.IProductService.html",
    "title": "Interface IProductService | SmartMenu - Documentation",
    "keywords": "Interface IProductService Defines methods for managing products. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface IProductService Methods | Edit this page View Source CreateProductsAsync(ProductDto) Creates a new product. Declaration Task<ResponseDto?> CreateProductsAsync(ProductDto productDto) Parameters Type Name Description ProductDto productDto The product data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteProductsAsync(int) Deletes a product by its ID. Declaration Task<ResponseDto?> DeleteProductsAsync(int id) Parameters Type Name Description int id The product ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllProductsAsync() Gets all products. Declaration Task<ResponseDto?> GetAllProductsAsync() Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetProductByIdAsync(int) Gets a product by its ID. Declaration Task<ResponseDto?> GetProductByIdAsync(int id) Parameters Type Name Description int id The product ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateProductsAsync(ProductDto) Updates an existing product. Declaration Task<ResponseDto?> UpdateProductsAsync(ProductDto productDto) Parameters Type Name Description ProductDto productDto The product data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object."
  },
  "Web/SmartMenu.Web.Service.IService.ITokenProvider.html": {
    "href": "Web/SmartMenu.Web.Service.IService.ITokenProvider.html",
    "title": "Interface ITokenProvider | SmartMenu - Documentation",
    "keywords": "Interface ITokenProvider Defines methods for managing authentication tokens. Namespace: SmartMenu.Web.Service.IService Assembly: SmartMenu.Web.dll Syntax public interface ITokenProvider Methods | Edit this page View Source ClearToken() Clears the authentication token. Declaration void ClearToken() | Edit this page View Source GetToken() Gets the authentication token. Declaration string? GetToken() Returns Type Description string The authentication token, or null if no token is set. | Edit this page View Source SetToken(string) Sets the authentication token. Declaration void SetToken(string token) Parameters Type Name Description string token The authentication token."
  },
  "Web/SmartMenu.Web.Service.IService.html": {
    "href": "Web/SmartMenu.Web.Service.IService.html",
    "title": "Namespace SmartMenu.Web.Service.IService | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Web.Service.IService Interfaces IAuthService Defines methods for authentication and user management services. IBaseService Defines a base service for sending HTTP requests. ICartService Defines methods for managing the shopping cart. ICategoryService Defines methods for managing categories. ICouponService Defines methods for managing coupons. IOrderService Defines methods for managing orders. IProductService Defines methods for managing products. ITokenProvider Defines methods for managing authentication tokens."
  },
  "Web/SmartMenu.Web.Service.OrderService.html": {
    "href": "Web/SmartMenu.Web.Service.OrderService.html",
    "title": "Class OrderService | SmartMenu - Documentation",
    "keywords": "Class OrderService Provides services related to orders. Inheritance object OrderService Implements IOrderService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class OrderService : IOrderService Constructors | Edit this page View Source OrderService(IBaseService) Initializes a new instance of the OrderService class. Declaration public OrderService(IBaseService baseService) Parameters Type Name Description IBaseService baseService The base service to be used for sending requests. Methods | Edit this page View Source CreateOrder(CartDto) Creates a new order. Declaration public Task<ResponseDto?> CreateOrder(CartDto cartDto) Parameters Type Name Description CartDto cartDto The cart data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source CreateStripeSession(StripeRequestDto) Creates a new Stripe session. Declaration public Task<ResponseDto?> CreateStripeSession(StripeRequestDto stripeRequestDto) Parameters Type Name Description StripeRequestDto stripeRequestDto The Stripe request data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllOrder(string?) Gets all orders for a specific user. Declaration public Task<ResponseDto?> GetAllOrder(string? userId) Parameters Type Name Description string userId The user ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetOrder(int) Gets a specific order by ID. Declaration public Task<ResponseDto?> GetOrder(int orderId) Parameters Type Name Description int orderId The order ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateOrderStatus(int, string) Updates the status of an order. Declaration public Task<ResponseDto?> UpdateOrderStatus(int orderId, string newStatus) Parameters Type Name Description int orderId The order ID. string newStatus The new status of the order. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source ValidateStripeSession(int) Validates a Stripe session. Declaration public Task<ResponseDto?> ValidateStripeSession(int orderHeaderId) Parameters Type Name Description int orderHeaderId The order header ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. Implements IOrderService"
  },
  "Web/SmartMenu.Web.Service.ProductService.html": {
    "href": "Web/SmartMenu.Web.Service.ProductService.html",
    "title": "Class ProductService | SmartMenu - Documentation",
    "keywords": "Class ProductService Provides services related to products. Inheritance object ProductService Implements IProductService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class ProductService : IProductService Constructors | Edit this page View Source ProductService(IBaseService) Initializes a new instance of the ProductService class. Declaration public ProductService(IBaseService baseService) Parameters Type Name Description IBaseService baseService The base service to be used for sending requests. Methods | Edit this page View Source CreateProductsAsync(ProductDto) Creates a new product. Declaration public Task<ResponseDto?> CreateProductsAsync(ProductDto productDto) Parameters Type Name Description ProductDto productDto The product data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source DeleteProductsAsync(int) Deletes a product by ID. Declaration public Task<ResponseDto?> DeleteProductsAsync(int id) Parameters Type Name Description int id The product ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetAllProductsAsync() Gets all products. Declaration public Task<ResponseDto?> GetAllProductsAsync() Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source GetProductByIdAsync(int) Gets a product by ID. Declaration public Task<ResponseDto?> GetProductByIdAsync(int id) Parameters Type Name Description int id The product ID. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. | Edit this page View Source UpdateProductsAsync(ProductDto) Updates an existing product. Declaration public Task<ResponseDto?> UpdateProductsAsync(ProductDto productDto) Parameters Type Name Description ProductDto productDto The product data transfer object. Returns Type Description Task<ResponseDto> A task that represents the asynchronous operation. The task result contains the response data transfer object. Implements IProductService"
  },
  "Web/SmartMenu.Web.Service.TokenProvider.html": {
    "href": "Web/SmartMenu.Web.Service.TokenProvider.html",
    "title": "Class TokenProvider | SmartMenu - Documentation",
    "keywords": "Class TokenProvider Provides methods to manage tokens in the HTTP context. Inheritance object TokenProvider Implements ITokenProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Service Assembly: SmartMenu.Web.dll Syntax public class TokenProvider : ITokenProvider Constructors | Edit this page View Source TokenProvider(IHttpContextAccessor) Initializes a new instance of the TokenProvider class. Declaration public TokenProvider(IHttpContextAccessor contextAccessor) Parameters Type Name Description IHttpContextAccessor contextAccessor The HTTP context accessor. Methods | Edit this page View Source ClearToken() Clears the token from the cookies. Declaration public void ClearToken() | Edit this page View Source GetToken() Gets the token from the cookies. Declaration public string? GetToken() Returns Type Description string The token if it exists; otherwise, null. | Edit this page View Source SetToken(string) Sets the token in the cookies. Declaration public void SetToken(string token) Parameters Type Name Description string token The token to set. Implements ITokenProvider"
  },
  "Web/SmartMenu.Web.Service.html": {
    "href": "Web/SmartMenu.Web.Service.html",
    "title": "Namespace SmartMenu.Web.Service | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Web.Service Classes AuthService Provides authentication-related services. BaseService Provides base functionality for sending HTTP requests. CartService Provides services related to the shopping cart. CategoryService Provides services related to categories. CouponService Provides services related to coupons. OrderService Provides services related to orders. ProductService Provides services related to products. TokenProvider Provides methods to manage tokens in the HTTP context."
  },
  "Web/SmartMenu.Web.Utility.AllowedExtensionsAttribute.html": {
    "href": "Web/SmartMenu.Web.Utility.AllowedExtensionsAttribute.html",
    "title": "Class AllowedExtensionsAttribute | SmartMenu - Documentation",
    "keywords": "Class AllowedExtensionsAttribute Specifies the allowed file extensions for a file upload. Inheritance object Attribute ValidationAttribute AllowedExtensionsAttribute Inherited Members ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.IsValid(object) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Utility Assembly: SmartMenu.Web.dll Syntax public class AllowedExtensionsAttribute : ValidationAttribute Constructors | Edit this page View Source AllowedExtensionsAttribute(string[]) Initializes a new instance of the AllowedExtensionsAttribute class. Declaration public AllowedExtensionsAttribute(string[] extensions) Parameters Type Name Description string[] extensions The allowed file extensions. Methods | Edit this page View Source IsValid(object?, ValidationContext) Validates the specified value with respect to the current validation attribute. Declaration protected override ValidationResult? IsValid(object? value, ValidationContext validationContext) Parameters Type Name Description object value The value to validate. ValidationContext validationContext The context information about the validation operation. Returns Type Description ValidationResult An instance of the ValidationResult class. Overrides ValidationAttribute.IsValid(object, ValidationContext)"
  },
  "Web/SmartMenu.Web.Utility.MaxFileSizeAttribute.html": {
    "href": "Web/SmartMenu.Web.Utility.MaxFileSizeAttribute.html",
    "title": "Class MaxFileSizeAttribute | SmartMenu - Documentation",
    "keywords": "Class MaxFileSizeAttribute Specifies the maximum file size for a file upload. Inheritance object Attribute ValidationAttribute MaxFileSizeAttribute Inherited Members ValidationAttribute.FormatErrorMessage(string) ValidationAttribute.GetValidationResult(object, ValidationContext) ValidationAttribute.IsValid(object) ValidationAttribute.Validate(object, ValidationContext) ValidationAttribute.Validate(object, string) ValidationAttribute.ErrorMessage ValidationAttribute.ErrorMessageResourceName ValidationAttribute.ErrorMessageResourceType ValidationAttribute.ErrorMessageString ValidationAttribute.RequiresValidationContext Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Utility Assembly: SmartMenu.Web.dll Syntax public class MaxFileSizeAttribute : ValidationAttribute Constructors | Edit this page View Source MaxFileSizeAttribute(int) Initializes a new instance of the MaxFileSizeAttribute class. Declaration public MaxFileSizeAttribute(int maxFileSize) Parameters Type Name Description int maxFileSize The maximum file size in megabytes. Methods | Edit this page View Source IsValid(object?, ValidationContext) Validates the specified value with respect to the current validation attribute. Declaration protected override ValidationResult? IsValid(object? value, ValidationContext validationContext) Parameters Type Name Description object value The value to validate. ValidationContext validationContext The context information about the validation operation. Returns Type Description ValidationResult An instance of the ValidationResult class. Overrides ValidationAttribute.IsValid(object, ValidationContext)"
  },
  "Web/SmartMenu.Web.Utility.SD.ApiType.html": {
    "href": "Web/SmartMenu.Web.Utility.SD.ApiType.html",
    "title": "Enum SD.ApiType | SmartMenu - Documentation",
    "keywords": "Enum SD.ApiType Defines the types of API requests. Namespace: SmartMenu.Web.Utility Assembly: SmartMenu.Web.dll Syntax public enum SD.ApiType Fields Name Description DELETE Represents a DELETE request. GET Represents a GET request. POST Represents a POST request. PUT Represents a PUT request."
  },
  "Web/SmartMenu.Web.Utility.SD.ContentType.html": {
    "href": "Web/SmartMenu.Web.Utility.SD.ContentType.html",
    "title": "Enum SD.ContentType | SmartMenu - Documentation",
    "keywords": "Enum SD.ContentType Defines the types of content. Namespace: SmartMenu.Web.Utility Assembly: SmartMenu.Web.dll Syntax public enum SD.ContentType Fields Name Description Json Represents JSON content type. MultipartFormData Represents multipart/form-data content type."
  },
  "Web/SmartMenu.Web.Utility.SD.html": {
    "href": "Web/SmartMenu.Web.Utility.SD.html",
    "title": "Class SD | SmartMenu - Documentation",
    "keywords": "Class SD Provides static details and constants used across the application. Inheritance object SD Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SmartMenu.Web.Utility Assembly: SmartMenu.Web.dll Syntax public class SD Fields | Edit this page View Source RoleAdmin Represents the admin role. Declaration public const string RoleAdmin = \"ADMIN\" Field Value Type Description string | Edit this page View Source RoleCustomer Represents the customer role. Declaration public const string RoleCustomer = \"CUSTOMER\" Field Value Type Description string | Edit this page View Source Status_Approved Represents the approved status. Declaration public const string Status_Approved = \"Approved\" Field Value Type Description string | Edit this page View Source Status_Cancelled Represents the cancelled status. Declaration public const string Status_Cancelled = \"Cancelled\" Field Value Type Description string | Edit this page View Source Status_Completed Represents the completed status. Declaration public const string Status_Completed = \"Completed\" Field Value Type Description string | Edit this page View Source Status_Pending Represents the pending status. Declaration public const string Status_Pending = \"Pending\" Field Value Type Description string | Edit this page View Source Status_ReadyForPickup Represents the ready for pickup status. Declaration public const string Status_ReadyForPickup = \"ReadyForPickup\" Field Value Type Description string | Edit this page View Source Status_Refunded Represents the refunded status. Declaration public const string Status_Refunded = \"Refunded\" Field Value Type Description string | Edit this page View Source TokenCookie Represents the token cookie name. Declaration public const string TokenCookie = \"JWTToken\" Field Value Type Description string Properties | Edit this page View Source AuthAPIBase Gets or sets the base URL for the Auth API. Declaration public static string AuthAPIBase { get; set; } Property Value Type Description string | Edit this page View Source CouponAPIBase Gets or sets the base URL for the Coupon API. Declaration public static string CouponAPIBase { get; set; } Property Value Type Description string | Edit this page View Source OrderAPIBase Gets or sets the base URL for the Order API. Declaration public static string OrderAPIBase { get; set; } Property Value Type Description string | Edit this page View Source ProductAPIBase Gets or sets the base URL for the Product API. Declaration public static string ProductAPIBase { get; set; } Property Value Type Description string | Edit this page View Source ShoppingCartAPIBase Gets or sets the base URL for the Shopping Cart API. Declaration public static string ShoppingCartAPIBase { get; set; } Property Value Type Description string"
  },
  "Web/SmartMenu.Web.Utility.html": {
    "href": "Web/SmartMenu.Web.Utility.html",
    "title": "Namespace SmartMenu.Web.Utility | SmartMenu - Documentation",
    "keywords": "Namespace SmartMenu.Web.Utility Classes AllowedExtensionsAttribute Specifies the allowed file extensions for a file upload. MaxFileSizeAttribute Specifies the maximum file size for a file upload. SD Provides static details and constants used across the application. Enums SD.ApiType Defines the types of API requests. SD.ContentType Defines the types of content."
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to SmartMenu Documentation \uD83D\uDE80 | SmartMenu - Documentation",
    "keywords": "Welcome to SmartMenu Documentation \uD83D\uDE80 Unlock the full potential of the SmartMenu platform with detailed API references. \uD83D\uDCDA About SmartMenu SmartMenu is an information system designed for managing restaurant online orders, viewing and editing dishes, handling order statuses, and providing customers with the ability to view dish details, as well as place orders. The system automates key restaurant processes, including order tracking, menu management, discounts, and integration with the Stripe payment system to ensure secure online transactions. By streamlining these operations, SmartMenu helps restaurants reduce operational costs, improve customer service quality, and enhance overall efficiency. \uD83C\uDF10 API Documentation Easily integrate and manage SmartMenu services with our comprehensive API references: \uD83D\uDD10 Auth API Handle user authentication and authorization to ensure secure access to your platform. \uD83C\uDF9FпёЏ Coupon API Manage discount coupons effortlessly to enhance customer experience. \uD83D\uDCE6 Order API Create, update, and track orders efficiently with robust API methods. \uD83D\uDED2 Product API Organize and manage your products and categories with powerful tools. \uD83D\uDECDпёЏ Shopping Cart API Deliver a seamless shopping cart experience, ensuring smooth transactions for your customers. \uD83D\uDEE0пёЏ Tech Stack Backend Framework: .NET Core Web API (C#) with a Microservices Architecture Microservices: Each microservice operates independently and has its own dedicated database to ensure a clear separation of concerns and improve scalability: Auth Service: Manages authentication and authorization. Database Schema Order Service: Handles order processing and status updates. Database Schema Product Service: Manages products and categories. Database Schema Shopping Cart Service: Provides shopping cart functionality. Database Schema Coupon Service: Handles discount and coupon logic. Database Schema Each database is designed to store only the data relevant to its respective microservice, avoiding unnecessary data coupling and ensuring better fault isolation. Database: SQL Server 2022 Communication: REST API Frontend Framework: ASP.NET Core MVC (C#) Features: Razor views for dynamic and interactive HTML rendering. Integration with REST API for backend communication. Responsive design for desktop and mobile platforms."
  }
}
